/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./dist.TsTranspiled/src/jstoInject/zLast.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./dist.TsTranspiled/src/jstoInject/Classes/IterationHelper.js":
/*!*********************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Classes/IterationHelper.js ***!
  \*********************************************************************/
/*! exports provided: IterationHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IterationHelper\", function() { return IterationHelper; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n\nclass IterationHelper extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz, maxIterations, nickname) {\n        super(xyyz);\n        this.__maxIterations = maxIterations;\n        this.__currentIteration = maxIterations;\n        this.__timeout = xyyz.Const.IterHelper.Timeouts.Default;\n        this.__nickName = nickname;\n        this.IsExhausted = false;\n    }\n    DecrementAndKeepGoing() {\n        var toReturn = false;\n        if (!this.UiMan().OperationCancelled && this.__currentIteration > 0) {\n            this.__currentIteration -= 1;\n            this.__timeout += this.__timeout * this.Const().IterHelper.GrowthPerIteration;\n            if (this.__timeout > this.Const().IterHelper.Timeouts.Max) {\n                this.__timeout = this.Const().IterHelper.Timeouts.Max;\n            }\n            this.debug().Log('DecrementAndKeepGoing: ' + this.__nickName + ' ' + this.__currentIteration + ':' + this.__maxIterations + ' | timeout: ' + this.__timeout);\n            toReturn = true;\n        }\n        else {\n            this.IsExhausted = true;\n            this.NotifyExhausted();\n            toReturn = false;\n        }\n        return toReturn;\n    }\n    NotifyExhausted() {\n        this.debug().Log('Iteration: ' + this.__nickName + ' counter exhausted ' + this.__currentIteration + ':' + this.__maxIterations);\n    }\n    WaitAndThen(timeoutFunction) {\n        this.debug().FuncStart(this.WaitAndThen.name, this.__nickName + ' ' + timeoutFunction.name);\n        var self = this;\n        setTimeout(timeoutFunction(), self.__timeout);\n        this.debug().FuncEnd(this.WaitAndThen.name, this.__nickName);\n    }\n    Wait() {\n        if (!this.UiMan().OperationCancelled) {\n            return new Promise((resolve) => {\n                setTimeout(resolve, this.__timeout);\n            });\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Classes/IterationHelper.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Classes/Utilities.js":
/*!***************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Classes/Utilities.js ***!
  \***************************************************************/
/*! exports provided: Utilities */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Utilities\", function() { return Utilities; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n/* harmony import */ var _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Enums/scWindowType */ \"./dist.TsTranspiled/src/jstoInject/Enums/scWindowType.js\");\n\n\nclass Utilities extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    SelectHeaderStr() {\n        let toReturn = '';\n        toReturn += this.Buffer('...Time Stamp', 23, '.', false);\n        toReturn += this.Buffer('- Page Type', 20, '.', false, false);\n        toReturn += this.Buffer('- Nickname', 16, '.', false, false);\n        toReturn += this.Buffer('- Fav.', 4, '.', false);\n        return toReturn;\n    }\n    DateOneIframeFactory(iframeElem, parentDocument, nickname) {\n        var toReturn = {\n            Index: -1,\n            IframeElem: iframeElem,\n            Id: this.GuidMan().NewGuid(),\n            Zindex: iframeElem.style.zIndex ? parseInt(iframeElem.style.zIndex) : -1,\n            Nickname: nickname,\n            ContentDoc: this.DataOneContentDocFactoryFromIframe(iframeElem, parentDocument, nickname),\n        };\n        return toReturn;\n    }\n    DataOneContentDocFactoryFromIframe(IframeElem, parentDocument, nickname) {\n        var toReturn = {\n            ParentDoc: parentDocument,\n            Document: IframeElem.contentDocument,\n            HasParentDesktop: false,\n            XyyzId: this.GuidMan().NewGuid(),\n            IsCEDoc: false,\n            ParentDesktop: null,\n            Nickname: nickname + ' - content doc'\n        };\n        return toReturn;\n    }\n    TimeNicknameFavStr(data) {\n        var typeStr = (data.WindowType === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Unknown) ? '?' : _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"][data.WindowType];\n        return this.MakeFriendlyDate(data.TimeStamp)\n            + ' - ' + this.Buffer(typeStr, 17, ' ', false)\n            + ' - ' + this.Buffer(data.NickName, 16, ' ', false)\n            + ' - ' + this.Buffer((data.IsFavorite ? '*' : ' '), 1);\n    }\n    constructor(xyyz) {\n        super(xyyz);\n        xyyz.debug.FuncStart(Utilities.name);\n        xyyz.debug.FuncEnd(Utilities.name);\n    }\n    Buffer(str, desiredLength, buffChar = ' ', bufferLEft = true, useNbsp = true) {\n        var toReturn = str;\n        if (buffChar.length === 0) {\n            buffChar = ' ';\n        }\n        if (toReturn.length > desiredLength) {\n            if (desiredLength > 6) {\n                toReturn = toReturn.substring(0, desiredLength - 3) + '...';\n            }\n            else {\n                toReturn = toReturn.substring(0, desiredLength);\n            }\n        }\n        if (toReturn.length < desiredLength) {\n            var spacesNeeded = desiredLength - toReturn.length;\n            if (buffChar === ' ' && useNbsp) {\n                buffChar = '&nbsp;';\n            }\n            for (var idx = 0; idx < spacesNeeded; idx++) {\n                if (bufferLEft) {\n                    toReturn = buffChar + toReturn;\n                }\n                else {\n                    toReturn = toReturn + buffChar;\n                }\n            }\n        }\n        return toReturn;\n    }\n    MakeFriendlyDate(date) {\n        var year = date.getFullYear();\n        var month = date.getMonth();\n        var day = this.Utilites().Buffer(date.getDay().toString(), 2, '0');\n        var min = this.Utilites().Buffer(date.getMinutes().toString(), 2, '0');\n        var hoursRaw = date.getHours();\n        var ampm = hoursRaw >= 12 ? 'pm' : 'am';\n        hoursRaw = hoursRaw % 12;\n        var hourClean = hoursRaw ? hoursRaw : 12;\n        var hourCleanStr = this.Utilites().Buffer(hourClean.toString(), 2, '0');\n        var toReturn = year + '.' + month + '.' + day + ' ' + hourCleanStr + ':' + min + ' ' + ampm;\n        return toReturn;\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Classes/Utilities.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Classes/debug.js":
/*!***********************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Classes/debug.js ***!
  \***********************************************************/
/*! exports provided: Debug */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Debug\", function() { return Debug; });\nclass Debug {\n    constructor(parentWindow) {\n        this.Enabled = false;\n        this.__debugTextChangedCallbacks = [];\n        this.debugPrefix = '\\t\\t';\n        this.__indentCount = 0;\n        this.ParentWindow = parentWindow;\n    }\n    DebugIDataDoc(dataOneDoc) {\n        this.FuncStart(this.DebugIDataDoc.name);\n        this.Log('');\n        this.Log(this.debugPrefix + this.DebugIDataDoc.name);\n        if (dataOneDoc) {\n            this.Log(this.debugPrefix + 'dataOneDoc: \\t' + this.IsNullOrUndefined(dataOneDoc));\n            this.Log(this.debugPrefix + 'dataOneDoc.XyyzId.asShort: \\t' + this.IsNullOrUndefined(dataOneDoc.XyyzId.asShort));\n            this.Log(this.debugPrefix + 'dataOneDoc.Document: \\t' + this.IsNullOrUndefined(dataOneDoc.Document));\n            if (dataOneDoc.Document) {\n                this.LogVal(this.debugPrefix + 'dataOneDoc.Document.readyState:', dataOneDoc.Document.readyState);\n                if (dataOneDoc.Document.location) {\n                    this.LogVal(this.debugPrefix + 'targetDoc.location.href', dataOneDoc.Document.location.href);\n                }\n                else {\n                    this.Log(this.debugPrefix + 'dataOneDoc.Document.location - does not exist');\n                }\n            }\n            else {\n                this.Log(this.debugPrefix + 'dataOneDoc.Document - does not exist');\n            }\n        }\n        else {\n            this.Error(this.DebugIDataDoc.name, 'no targetDoc');\n        }\n        this.Log('');\n    }\n    AddDebugTextChangedCallback(caller, callback) {\n        console.log('========================================');\n        this.__debugTextChangedCallbacks.push({\n            Caller: caller,\n            Func: callback\n        });\n    }\n    HndlrClearDebugText(self, verify = false) {\n        var proceed = true;\n        if (verify) {\n            proceed = confirm('Clear Debug TextArea ?');\n        }\n        if (proceed) {\n            var newText = '--- Debug Text Reset ---';\n            self.__triggerAllDebugTextChangedCallbacks({\n                NewText: newText,\n                Append: false\n            });\n        }\n    }\n    MarkerA() {\n        this.__markerRaw('A');\n    }\n    MarkerB() {\n        this.__markerRaw('B');\n    }\n    MarkerC() {\n        this.__markerRaw('C');\n    }\n    MarkerD() {\n        this.__markerRaw('D');\n    }\n    MarkerE() {\n        this.__markerRaw('E');\n    }\n    __markerRaw(marker) {\n        this.Log('Marker ' + marker);\n    }\n    LogVal(textValName, textValVal) {\n        this.Log(textValName + ' : ' + textValVal);\n    }\n    Log(text, optionalValue = '', hasPrefix = false) {\n        if (this.Enabled) {\n            var indent = '  ';\n            for (var idx = 0; idx < this.__indentCount; idx++) {\n                text = indent + text;\n            }\n            var prefixLength = 3;\n            if (!hasPrefix) {\n                for (var idx = 0; idx < prefixLength; idx++) {\n                    text = ' ' + text;\n                }\n            }\n            this.__triggerAllDebugTextChangedCallbacks({\n                NewText: text,\n                Append: true\n            });\n            console.log(text);\n            if (this.ParentWindow) {\n                this.ParentWindow.console.log(text);\n            }\n        }\n    }\n    __triggerAllDebugTextChangedCallbacks(data) {\n        for (var idx = 0; idx < this.__debugTextChangedCallbacks.length; idx++) {\n            var oneCallback = this.__debugTextChangedCallbacks[idx];\n            oneCallback.Func(oneCallback.Caller, data);\n        }\n    }\n    CtorName(ctorName) {\n        this.Log('Constructor: ' + ctorName);\n    }\n    FuncStart(textOrFunc, optionalValue = '') {\n        textOrFunc = 's) ' + textOrFunc;\n        if (typeof (textOrFunc) === 'function') {\n            console.log('******* is func *************');\n            textOrFunc = textOrFunc.name;\n        }\n        if (optionalValue.length > 0) {\n            textOrFunc = textOrFunc + ' : ' + optionalValue;\n        }\n        this.Log(textOrFunc, '', true);\n        this.__indentCount++;\n        if (this.__indentCount > 10) {\n            this.__indentCount = 10;\n        }\n    }\n    FuncEnd(text, optionalValue = '') {\n        text = 'e) ' + text;\n        if (optionalValue.length > 0) {\n            text = text + ' : ' + optionalValue;\n        }\n        this.__indentCount--;\n        if (this.__indentCount < 0) {\n            this.__indentCount = 0;\n        }\n        this.Log(text, optionalValue, true);\n    }\n    Error(container, text) {\n        if (!container) {\n            container = 'unknown';\n        }\n        if (!text) {\n            text = 'unknown';\n        }\n        this.Log('');\n        this.Log('\\t\\t** ERROR ** ' + container);\n        this.Log('');\n        this.Log('\\t\\t  ' + text);\n        this.Log('');\n        this.Log('\\t\\t** ERROR ** ' + container);\n        this.Log('');\n    }\n    NotNullCheck(title, value) {\n        if (typeof value === 'undefined') {\n            this.LogVal(title, 'Is Undefined');\n        }\n        else if (!value) {\n            this.LogVal(title, 'Is Null');\n        }\n        else {\n            this.LogVal(title, 'Is Not Null');\n        }\n    }\n    IsNullOrUndefined(subject) {\n        var toReturn = '{unknown}';\n        if (subject) {\n            if ((typeof subject) == 'undefined') {\n                toReturn = 'Is Undefined';\n            }\n            else {\n                toReturn = 'Not Null';\n            }\n        }\n        else {\n            toReturn = 'Is Null';\n        }\n        return toReturn;\n    }\n    PromiseBucketDebug(promiseBucket, friendlyName) {\n        this.FuncStart(this.PromiseBucketDebug.name, friendlyName);\n        this.Log('promiseBucket : ' + this.IsNullOrUndefined(promiseBucket));\n        if (promiseBucket && typeof (promiseBucket) !== 'undefined') {\n            this.Log('promiseBucket.IFramesbefore: ' + this.IsNullOrUndefined(promiseBucket.IFramesbefore));\n            this.Log('promiseBucket.targetWindow: ' + this.IsNullOrUndefined(promiseBucket.targetWindow));\n            this.Log('promiseBucket.oneCEdata: ' + this.IsNullOrUndefined(promiseBucket.oneCEdata));\n            this.Log('promiseBucket.NewIframe: ' + this.IsNullOrUndefined(promiseBucket.NewIframe));\n            if (promiseBucket.NewIframe) {\n                this.DebugDataOneIframe(promiseBucket.NewIframe);\n            }\n        }\n        this.FuncEnd(this.PromiseBucketDebug.name, friendlyName);\n    }\n    DebugDataOneIframe(dataOneIframe) {\n        this.FuncStart(this.DebugDataOneIframe.name);\n        this.Log('dataOneIframe : ' + this.IsNullOrUndefined(dataOneIframe));\n        if (dataOneIframe) {\n            this.Log('dataOneIframe.Nickname : ' + dataOneIframe.Nickname);\n            this.Log('dataOneIframe.IframeElem: \\t' + this.IsNullOrUndefined(dataOneIframe.IframeElem));\n            if (dataOneIframe.IframeElem) {\n                this.Log('dataOneIframe.id: \\t' + this.IsNullOrUndefined(dataOneIframe.IframeElem.id));\n            }\n            this.Log('dataOneIframe.ContentDoc: \\t' + this.IsNullOrUndefined(dataOneIframe.ContentDoc));\n            this.DebugIDataDoc(dataOneIframe.ContentDoc);\n        }\n        this.FuncEnd(this.DebugDataOneIframe.name);\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Classes/debug.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Enums/scMode.js":
/*!**********************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Enums/scMode.js ***!
  \**********************************************************/
/*! exports provided: scMode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scMode\", function() { return scMode; });\nvar scMode;\n(function (scMode) {\n    scMode[scMode[\"Unknown\"] = 0] = \"Unknown\";\n    scMode[scMode[\"Edit\"] = 1] = \"Edit\";\n    scMode[scMode[\"Preview\"] = 2] = \"Preview\";\n    scMode[scMode[\"Normal\"] = 3] = \"Normal\";\n})(scMode || (scMode = {}));\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Enums/scMode.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Enums/scWindowType.js":
/*!****************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Enums/scWindowType.js ***!
  \****************************************************************/
/*! exports provided: scWindowType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scWindowType\", function() { return scWindowType; });\nvar scWindowType;\n(function (scWindowType) {\n    scWindowType[scWindowType[\"Unknown\"] = 0] = \"Unknown\";\n    scWindowType[scWindowType[\"LoginPage\"] = 1] = \"LoginPage\";\n    scWindowType[scWindowType[\"Desktop\"] = 2] = \"Desktop\";\n    scWindowType[scWindowType[\"ContentEditor\"] = 3] = \"ContentEditor\";\n    scWindowType[scWindowType[\"Launchpad\"] = 4] = \"Launchpad\";\n    scWindowType[scWindowType[\"Edit\"] = 5] = \"Edit\";\n    scWindowType[scWindowType[\"Normal\"] = 6] = \"Normal\";\n    scWindowType[scWindowType[\"Preview\"] = 7] = \"Preview\";\n})(scWindowType || (scWindowType = {}));\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Enums/scWindowType.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Interfaces/InjectConst.js":
/*!********************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Interfaces/InjectConst.js ***!
  \********************************************************************/
/*! exports provided: InjectConst */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InjectConst\", function() { return InjectConst; });\n/* harmony import */ var _Enums_scMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Enums/scMode */ \"./dist.TsTranspiled/src/jstoInject/Enums/scMode.js\");\n\nclass InjectConst {\n}\nInjectConst.const = {\n    Numbers: {\n        ShortGuidLength: 4,\n    },\n    Iterations: {\n        MaxSetHrefEffort: 10,\n        MaxIterationSwitchBoard: 20,\n    },\n    Timeouts: {\n        PostLoginBtnClick: 1000,\n        SetHrefEffortWait: 1000,\n        WaitBeforeRemovingCompleteFlag: 5000,\n    },\n    IterHelper: {\n        GrowthPerIteration: 0.5,\n        MaxCount: {\n            OverridePublishing: 15,\n            Default: 100,\n        },\n        Timeouts: {\n            Max: 10000,\n            Default: 100,\n        },\n    },\n    ElemId: {\n        Hs: {\n            BtnAdminB: 'btnAdminB',\n            BtnCancel: 'btnCancel',\n            BtnCE: 'btnCE',\n            BtnDesktop: 'btnDesktop',\n            BtnDrawStorage: 'btnDrawLocalStorage',\n            BtnModeEdit: 'btnEdit',\n            BtnModeNorm: 'btnNorm',\n            BtnModePrev: 'btnPrev',\n            BtnQuickPublish: 'btnQuickPublish',\n            BtnRemoveFromStorage: 'btnRemoveOneFromLocalStorage',\n            BtnRestoreWindowState: 'btnRestoreWindowState',\n            BtnSaveWindowState: 'btnSaveWindowState',\n            btnToggleFavoriteB: 'btnToggleFavorite',\n            btnUpdateNicknameB: 'btnUpdateNickname',\n            HsBtnBigRed: 'btnBigRed',\n            LgndDebug: 'lgnd-debug',\n            LgndForeSite: 'lgnd-fore-site',\n            LgndHindSite: 'lgnd-hind-site',\n            LgndInSite: 'lgnd-in-site',\n            LgndSettings: 'lgnd-settings',\n            SelStateSnapShot: 'selState',\n            TaDebug: 'ta-debug',\n        },\n        HindSiteParentInfo: 'spanParentInfo',\n        InputNickname: 'inputNickname',\n        textAreaFeedback: 'ta-feedback',\n        sc: {\n            scLoginUserName: 'UserName',\n            scLoginPassword: 'Password',\n            SitecoreRootNodeId: 'Tree_Node_11111111111111111111111111111111',\n            SitecoreRootGlyphId: 'Tree_Glyph_11111111111111111111111111111111',\n            scLoginBtn: {\n                sc920: 'LogInBtn',\n                sc820: null\n            },\n        }\n    },\n    ClassNames: {\n        ContentTreeNode: 'scContentTreeNode',\n        HS: {\n            Collapsed: 'in',\n        },\n        SC: {\n            scContentTreeNodeActive: 'scContentTreeNodeActive',\n        }\n    },\n    UrlSuffix: {\n        Desktop: '/sitecore/shell/default.aspx',\n        Login: '/sitecore/login',\n        LaunchPad: '/client/applications/launchpad',\n        CE: '/sitecore/shell/Applications/Content Editor.aspx?sc_bw=1',\n        None: '/',\n    },\n    Regex: {\n        ContentEditor: /Content.*?Editor/ig,\n    },\n    ScMode: {\n        edit: { asEnum: _Enums_scMode__WEBPACK_IMPORTED_MODULE_0__[\"scMode\"].Edit, asString: 'edit' },\n        normal: { asEnum: _Enums_scMode__WEBPACK_IMPORTED_MODULE_0__[\"scMode\"].Normal, asString: 'normal' },\n        preview: { asEnum: _Enums_scMode__WEBPACK_IMPORTED_MODULE_0__[\"scMode\"].Preview, asString: 'preview' },\n    },\n    Notify: {\n        Default: 'Complete',\n        PublishComplete: 'Publishing Complete',\n    },\n    Selector: {\n        XS: {\n            IdFieldSetDebug: '[id=id-fieldset-debug]',\n            iCBoxdSettingsShowDebugData: '[id=id-settings-show-debug-data]',\n        },\n        SC: {\n            ContentTreeNodeGlyph: '.scContentTreeNodeGlyph',\n            IdStartsWithTreeNode: '[id^=Tree_Node_]',\n            IframeContent: 'iframe[src*=content]',\n            JqueryModalDialogsFrame: '[id=jqueryModalDialogsFrame]',\n            ContentIframe0: '[id=scContentIframeId0]',\n            NextButton: '[id=NextButton]',\n            ContentIFrame1: '[id=scContentIframeId1]',\n            Ok: '[id=OK]',\n            Cancel: '[id=CancelButton]',\n            MenuButtonPublish: '[id=B414550BADAF4542C9ADF44BED5FA6CB3E_menu_button]',\n            MenuDropDownPublishItem: '[id=B414550BADAF4542C9ADF44BED5FA6CB3E_menu_98719A90225A4802A0625D3967E4DD47]',\n            NavPublishStrip: '[id*=_Nav_PublishStrip]',\n            StartMenuLeftOption: '.scStartMenuLeftOption',\n            Publish: {\n                TheItemHasBeenPublished: '[id=LastPage]:not([style*=\\'display:none\\'])',\n                SettingsHidden: '[id=Settings][style*=\\'display: none\\']',\n                PublishingHidden: '[id=Publishing][style*=\\'display: none\\']',\n            },\n            LoginBtn: {\n                sc920: null,\n                sc820: 'input.btn',\n            },\n            scStartButton: {\n                sc920: '[id=StartButton]',\n                sc820: '[id=startButton]'\n            },\n        },\n    },\n    Storage: {\n        DefaultDebugKeepDialogOpen: false,\n        SettingsSuffix: '.Settings',\n        ShowDebugData: false,\n        SnapShotSuffix: '.WindowSnapShot.',\n        WindowRoot: 'Xyyz',\n    },\n    MaxIter: 100,\n    MaxNullOrUndefinedIter: 100,\n    GuidEmpty: '00000000-0000-0000-0000-000000000000',\n    prop: {\n        AllTreeData: 'AllTreeData',\n    },\n    Names: {\n        SC: {\n            TreeGlyphPrefix: 'Tree_Glyph_',\n            TreeNodePrefix: 'Tree_Node_',\n            TreeExpandedPng: {\n                sc920: 'treemenu_expanded.png',\n                sc820: 'todo'\n            }\n        },\n        HtmlToInject: 'HtmlToInject',\n        StylesToInject: 'StylesToInject',\n        TreeMenuExpandedPng: 'treemenu_expanded.png',\n        TreeMenuCollapsedPng: 'treemenu_collapsed.png',\n        scDefaultAdminPassword: 'b',\n        scDefaultAdminUserName: 'admin',\n    }\n};\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Interfaces/InjectConst.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/AtticManager.js":
/*!*******************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/AtticManager.js ***!
  \*******************************************************************/
/*! exports provided: AtticManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AtticManager\", function() { return AtticManager; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n/* harmony import */ var _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Enums/scWindowType */ \"./dist.TsTranspiled/src/jstoInject/Enums/scWindowType.js\");\n\n\nclass AtticManager extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        super(xyyz);\n        xyyz.debug.FuncStart(AtticManager.name);\n        xyyz.debug.FuncEnd(AtticManager.name);\n    }\n    Init() {\n        this.eventAwesome = new CustomEvent('awesome', { detail: 'some detail' });\n    }\n    functioneventHandler(e) {\n        console.log('this data is ' + e.detail);\n    }\n    UpdateMenuCoords(menuData) {\n        var settings = this.CurrentSettings();\n        settings.MenuPrefs = menuData;\n        this.StoreSettings(settings);\n    }\n    UpdateNickname(self) {\n        self.debug().FuncStart(self.UpdateNickname);\n        var targetId = self.UiMan().GetIdOfSelectWindowSnapshot();\n        if (targetId) {\n            var storageMatch = self.GetFromStorageById(targetId);\n            if (storageMatch) {\n                var newNickname = self.UiMan().GetValueInNickname();\n                storageMatch.NickName = newNickname;\n                self.WriteToStorage(storageMatch);\n            }\n        }\n        self.debug().FuncEnd(self.UpdateNickname);\n    }\n    ToggleFavorite() {\n        this.debug().FuncStart(this.ToggleFavorite.name);\n        var targetId = this.UiMan().GetIdOfSelectWindowSnapshot();\n        if (targetId) {\n            var storageMatch = this.GetFromStorageById(targetId);\n            if (storageMatch) {\n                storageMatch.IsFavorite = !storageMatch.IsFavorite;\n                this.WriteToStorage(storageMatch);\n            }\n        }\n        this.debug().FuncEnd(this.ToggleFavorite.name);\n    }\n    DrawDebugDataPretty(source) {\n        this.debug().FuncStart(this.DrawDebugDataPretty.name, 'source not null: ' + this.debug().IsNullOrUndefined(source));\n        var allDebugData = this.__buildDebugDataPretty(source);\n        allDebugData = allDebugData.concat(this.__drawSettings());\n        for (var ldx = 0; ldx < allDebugData.length; ldx++) {\n            this.Xyyz.FeedbackMan.WriteLine(allDebugData[ldx]);\n        }\n        this.debug().FuncEnd(this.DrawDebugDataPretty.name);\n    }\n    __drawSettings() {\n        var toReturn = [];\n        var settings = this.CurrentSettings();\n        toReturn.push('----- Settings - Accordian ------');\n        for (var idx = 0; idx < settings.Accordian.length; idx++) {\n            toReturn.push(settings.Accordian[idx].ElemId + ':' + settings.Accordian[idx].isCollapsed.toString());\n        }\n        return toReturn;\n    }\n    __buildDebugDataPretty(dataOneWindow) {\n        this.debug().FuncStart(this.__buildDebugDataPretty.name, 'data not null? ' + this.debug().IsNullOrUndefined(dataOneWindow));\n        var toReturn = [];\n        if (dataOneWindow) {\n            toReturn.push('------ One Window Snap Shot Start -----');\n            toReturn.push('Id: ' + dataOneWindow.Id);\n            toReturn.push('TimeStamp: ' + dataOneWindow.TimeStamp);\n            toReturn.push('CE Count: ' + dataOneWindow.AllCEAr.length);\n            toReturn.push('Type: ' + _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"][dataOneWindow.WindowType]);\n            toReturn.push('Nickname: ' + dataOneWindow.NickName);\n            for (var jdx = 0; jdx < dataOneWindow.AllCEAr.length; jdx++) {\n                toReturn.push('\\t------ One CE Start -----');\n                var dataOneCE = dataOneWindow.AllCEAr[jdx];\n                toReturn.push('\\tId: ' + dataOneCE.Id.asString);\n                var allCeDebugDataAr = this.Xyyz.OneCEMan.GetDebugDataOneCE(dataOneCE);\n                for (var kdx = 0; kdx < allCeDebugDataAr.length; kdx++) {\n                    toReturn.push('\\t\\t' + allCeDebugDataAr[kdx]);\n                }\n                toReturn.push('\\t------ One CE End -----');\n            }\n            toReturn.push('------ One Window Snap Shot End -----');\n            this.debug().FuncEnd(this.__buildDebugDataPretty.name);\n        }\n        else {\n            this.debug().Error(this.__buildDebugDataPretty.name, 'missing data');\n        }\n        return toReturn;\n    }\n    __drawStorageRaw(ourData) {\n        this.debug().FuncStart('DrawStorageRaw');\n        for (var idx = 0; idx < ourData.length; idx++) {\n            this.debug().Log('key: \\t' + ourData[idx].key);\n            this.debug().Log('data: \\t' + ourData[idx].data);\n            this.debug().Log('------------');\n        }\n        this.debug().FuncEnd('DrawStorageRaw');\n    }\n    __drawStoragePretty(ourData) {\n        this.debug().FuncStart(this.__drawStoragePretty.name);\n        this.Xyyz.FeedbackMan.ClearTextArea();\n        for (var idx = 0; idx < ourData.length; idx++) {\n            this.debug().Log('key: \\t' + ourData[idx].key);\n            var parsed = JSON.parse(ourData[idx].data);\n            if (parsed) {\n                this.DrawDebugDataPretty(parsed);\n                this.debug().Log('------------');\n            }\n        }\n        this.debug().FuncEnd(this.__drawStoragePretty.name);\n    }\n    UpdateAccodianState(needleKey, isCollapsed) {\n        this.debug().FuncStart(this.UpdateAccodianState.name, needleKey + ' ' + isCollapsed);\n        var settings = this.CurrentSettings();\n        var accordianPairs = settings.Accordian;\n        var found = null;\n        for (var idx = 0; idx < accordianPairs.length; idx++) {\n            var candidate = accordianPairs[idx];\n            if (candidate.ElemId === needleKey) {\n                found = true;\n                candidate.isCollapsed = isCollapsed;\n                break;\n            }\n        }\n        if (!found) {\n            var newSetting = {\n                ElemId: needleKey,\n                isCollapsed: isCollapsed\n            };\n            accordianPairs.push(newSetting);\n        }\n        this.StoreSettings(settings);\n        this.debug().FuncStart(this.UpdateAccodianState.name);\n    }\n    StoreSettings(currentSettings) {\n        window.localStorage.setItem(this.Const().Storage.WindowRoot + this.Const().Storage.SettingsSuffix, JSON.stringify(currentSettings));\n    }\n    GetDefaultSettings() {\n        let defaultDebugSettings = {\n            KeepDialogOpen: this.Const().Storage.DefaultDebugKeepDialogOpen,\n            ShowDebugData: this.Const().Storage.ShowDebugData,\n        };\n        let defaultMenuPrefs = {\n            MenuHeight: null,\n            MenuWidth: null,\n            MenuX: null,\n            MenuY: null\n        };\n        let toReturn = {\n            DebugSettings: defaultDebugSettings,\n            Accordian: [],\n            MenuPrefs: defaultMenuPrefs\n        };\n        return toReturn;\n    }\n    CurrentSettings() {\n        var defaultSettings = this.GetDefaultSettings();\n        var toReturn;\n        var settingsRaw = window.localStorage.getItem(this.Const().Storage.WindowRoot + this.Const().Storage.SettingsSuffix);\n        if (settingsRaw) {\n            toReturn = JSON.parse(settingsRaw);\n        }\n        if (!toReturn) {\n            toReturn = defaultSettings;\n        }\n        this.debug().NotNullCheck('toReturn', toReturn);\n        if (!toReturn.DebugSettings) {\n            toReturn.DebugSettings = defaultSettings.DebugSettings;\n        }\n        if (!toReturn.DebugSettings.KeepDialogOpen) {\n            toReturn.DebugSettings.KeepDialogOpen = defaultSettings.DebugSettings.KeepDialogOpen;\n        }\n        if (!toReturn.DebugSettings.ShowDebugData) {\n            toReturn.DebugSettings.ShowDebugData = defaultSettings.DebugSettings.ShowDebugData;\n        }\n        if (!toReturn.Accordian) {\n            toReturn.Accordian = [];\n        }\n        if (!toReturn.MenuPrefs) {\n            toReturn.MenuPrefs = defaultSettings.MenuPrefs;\n        }\n        return toReturn;\n    }\n    DebugSettings(toReturn) {\n        this.debug().FuncStart(this.DebugSettings.name);\n        this.debug().LogVal('Settings', JSON.stringify(toReturn));\n        this.debug().FuncEnd(this.DebugSettings.name);\n    }\n    __getAllLocalStorageAsIOneStorageData() {\n        this.debug().FuncStart(this.__getAllLocalStorageAsIOneStorageData.name);\n        var toReturn = [];\n        for (var idx = 0; idx < window.localStorage.length; idx++) {\n            var candidate = {\n                data: '',\n                key: '',\n            };\n            candidate.key = window.localStorage.key(idx);\n            if (candidate.key.startsWith(this.Const().Storage.WindowRoot + this.Const().Storage.SnapShotSuffix)) {\n                candidate.data = window.localStorage.getItem(candidate.key);\n                toReturn.push(candidate);\n            }\n        }\n        this.debug().FuncEnd(this.__getAllLocalStorageAsIOneStorageData.name);\n        return toReturn;\n    }\n    WriteToStorage(dataOneWindow) {\n        this.debug().FuncStart(this.WriteToStorage);\n        var snapShotAsString = JSON.stringify(dataOneWindow);\n        this.debug().Log('snapShotAsString: ' + snapShotAsString);\n        window.localStorage.setItem(this.Const().Storage.WindowRoot + this.Const().Storage.SnapShotSuffix + dataOneWindow.Id.asString, snapShotAsString);\n        this.UiMan().RefreshUi();\n        this.debug().FuncEnd(this.WriteToStorage.name);\n    }\n    GetAllStorageAsIDataOneWindow() {\n        this.debug().FuncStart(this.GetAllStorageAsIDataOneWindow.name);\n        var toReturn = [];\n        var rawStorageData = this.__getAllLocalStorageAsIOneStorageData();\n        if (rawStorageData) {\n            for (var idx = 0; idx < rawStorageData.length; idx++) {\n                var oneRaw = rawStorageData[idx];\n                var candidate = JSON.parse(oneRaw.data);\n                if (candidate) {\n                    candidate.TimeStamp = new Date(candidate.TimeStamp);\n                    candidate.Id = this.Xyyz.GuidMan.ParseGuid(candidate.Id.asString);\n                    candidate.RawData = oneRaw;\n                    if (!candidate.WindowType) {\n                        candidate.WindowType = _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Unknown;\n                        candidate.WindowFriendly = _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"][candidate.WindowType];\n                    }\n                    if (!candidate.NickName) {\n                        candidate.NickName = '';\n                    }\n                    toReturn.push(candidate);\n                }\n            }\n        }\n        toReturn.sort((a, b) => +b.TimeStamp - +a.TimeStamp);\n        this.debug().FuncEnd(this.GetAllStorageAsIDataOneWindow.name);\n        return toReturn;\n    }\n    RemoveOneFromStorage() {\n        this.debug().FuncStart(this.RemoveOneFromStorage.name);\n        var targetId = this.UiMan().GetIdOfSelectWindowSnapshot();\n        if (targetId) {\n            var storageMatch = this.GetFromStorageById(targetId);\n            if (storageMatch) {\n                var result = confirm('Remove ?: ' + this.Xyyz.Utilities.TimeNicknameFavStr(storageMatch));\n                if (result === true) {\n                    window.localStorage.removeItem(storageMatch.RawData.key);\n                }\n            }\n        }\n        this.UiMan().RefreshUi();\n        this.debug().FuncEnd(this.RemoveOneFromStorage.name);\n    }\n    DrawStorage() {\n        this.debug().FuncStart('DrawStorage');\n        try {\n            var ourData = this.__getAllLocalStorageAsIOneStorageData();\n            if (ourData) {\n                this.__drawStorageRaw(ourData);\n                this.__drawStoragePretty(ourData);\n            }\n        }\n        catch (e) {\n            this.Xyyz.debug.Error(this.DrawStorage.name, e.message);\n        }\n        this.debug().FuncEnd('DrawStorage');\n    }\n    GetRawFromStorageById(needleId) {\n        this.debug().FuncStart(this.GetRawFromStorageById.name, needleId.asString);\n        var toReturn = null;\n        var foundStorage = this.__getAllLocalStorageAsIOneStorageData();\n        if (foundStorage) {\n            for (var idx = 0; idx < foundStorage.length; idx++) {\n                var candidate = foundStorage[idx];\n            }\n        }\n        this.debug().FuncEnd(this.GetRawFromStorageById.name);\n        return toReturn;\n    }\n    GetFromStorageById(needleId) {\n        this.debug().FuncStart(this.GetFromStorageById.name, needleId.asString);\n        var foundStorage = this.GetAllStorageAsIDataOneWindow();\n        var DateOneWinStoreMatch = null;\n        if (foundStorage) {\n            for (var idx = 0; idx < foundStorage.length; idx++) {\n                var candidate = foundStorage[idx];\n                if (candidate.Id.asString === needleId.asString) {\n                    DateOneWinStoreMatch = candidate;\n                    break;\n                }\n            }\n        }\n        if (DateOneWinStoreMatch) {\n            this.debug().Log('found match', this.Utilites().TimeNicknameFavStr(DateOneWinStoreMatch));\n        }\n        else {\n            this.debug().Error(this.GetFromStorageById.name, 'Match notfound');\n        }\n        this.debug().FuncEnd(this.GetFromStorageById.name);\n        return DateOneWinStoreMatch;\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/AtticManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/EventManager.js":
/*!*******************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/EventManager.js ***!
  \*******************************************************************/
/*! exports provided: EventManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventManager\", function() { return EventManager; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n/* harmony import */ var _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Enums/scWindowType */ \"./dist.TsTranspiled/src/jstoInject/Enums/scWindowType.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nclass EventManager extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        super(xyyz);\n    }\n    Init() {\n        this.__wireMenuButtons();\n    }\n    __wireMenuButtons() {\n        this.debug().FuncStart(EventManager.name + ' ' + this.__wireMenuButtons.name);\n        this.ScUiMan().AssignDblClickEvent(this.Const().ElemId.Hs.SelStateSnapShot, (evt) => { this.__hndlrRestoreClick(evt); });\n        this.ScUiMan().AssignDblClickEvent(this.Const().ElemId.Hs.TaDebug, () => { this.__cleardebugTextWithConfirm(); });\n        this.ScUiMan().AssignOnChangeEvent(this.Const().ElemId.Hs.SelStateSnapShot, (evt) => { this.Xyyz.UiMan.SelectChanged(); });\n        this.ScUiMan().AssignMenuWindowChanged((evt) => { this.__hndlrMenuWindowChanged(); });\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.BtnAdminB, () => { this.__handlrB(); });\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.BtnCancel, (evt) => { this.__hndlrCancelOperation(evt); });\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.BtnCE, () => { this.__hndlrOpenCE(); });\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.BtnDesktop, (evt) => { this.__hndlrDesktop(evt); });\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.BtnDrawStorage, this.AtticMan().DrawStorage);\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.BtnModeEdit, (evt) => this.__hndlrSetScMode(this.Const().ScMode.edit, evt));\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.BtnModeNorm, (evt) => this.__hndlrSetScMode(this.Const().ScMode.normal, evt));\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.BtnModePrev, (evt) => this.__hndlrSetScMode(this.Const().ScMode.preview, evt));\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.BtnQuickPublish, (evt) => { this.__hndlrQuickPublish(evt); });\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.BtnRemoveFromStorage, this.AtticMan().RemoveOneFromStorage);\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.BtnRestoreWindowState, (evt) => { this.__hndlrRestoreClick(evt); });\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.BtnSaveWindowState, this.__hndlrTakeSnapShot);\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.btnUpdateNicknameB, () => this.__updateNickName());\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.HsBtnBigRed, this.__hndlrAddCETab);\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.LgndDebug, (evt) => { this.__toggleAccordian(evt); });\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.LgndForeSite, (evt) => { this.__toggleAccordian(evt); });\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.LgndHindSite, (evt) => { this.__toggleAccordian(evt); });\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.LgndInSite, (evt) => { this.__toggleAccordian(evt); });\n        this.ScUiMan().AssignOnClickEvent(this.Const().ElemId.Hs.LgndSettings, (evt) => { this.__toggleAccordian(evt); });\n        this.debug().FuncEnd(this.__wireMenuButtons.name);\n    }\n    __hndlrSetScMode(newMode, evt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.__initNewOperation();\n            yield this.locMan().SetScMode(newMode, evt.ctrlKey)\n                .then(() => this.UiMan().NotifyComplete());\n        });\n    }\n    __updateNickName() {\n        var self = this.Xyyz.AtticMan;\n        this.Xyyz.AtticMan.UpdateNickname(self);\n    }\n    __cleardebugTextWithConfirm() {\n        this.Xyyz.debug.HndlrClearDebugText(this.debug(), true);\n    }\n    __cleardebugText() {\n        this.Xyyz.debug.HndlrClearDebugText(this.debug());\n    }\n    __toggleAccordian(evt) {\n        this.debug().FuncStart(this.__toggleAccordian.name);\n        var srcElem = (evt.target || evt.srcElement);\n        var foundContentSib = this.UiMan().GetAccordianContentElem(srcElem);\n        if (foundContentSib) {\n            var isCollapsed = foundContentSib.classList.contains(this.Const().ClassNames.HS.Collapsed);\n            var newVal = !isCollapsed;\n            this.UiMan().SetAccordianClass(foundContentSib, newVal);\n            this.AtticMan().UpdateAccodianState(srcElem.getAttribute('id'), newVal);\n        }\n        else {\n            this.debug().Error(this.__toggleAccordian.name, 'did not find sib');\n        }\n        this.debug().FuncEnd(this.__toggleAccordian.name);\n    }\n    __handlrB() {\n        this.locMan().AdminB(this.PageDataMan().TopLevelWindow().DataDocSelf, null);\n    }\n    __hndlrMenuWindowChanged() {\n        var menuData = {\n            MenuX: (window.screenX || window.screenLeft || 0),\n            MenuY: (window.screenY || window.screenTop || 0),\n            MenuHeight: window.innerHeight,\n            MenuWidth: window.innerWidth,\n        };\n        this.AtticMan().UpdateMenuCoords(menuData);\n    }\n    __hndlrDesktop(evt) {\n        this.__initNewOperation();\n        this.locMan().ChangeLocationSwitchBoard(_Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Desktop, this.PageDataMan().TopLevelWindow());\n    }\n    __hndlrCancelOperation(evt) {\n        this.UiMan().SetCancelFlag();\n    }\n    __hndlrQuickPublish(evt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.__initNewOperation();\n            var targetWin = this.PageDataMan().TopLevelWindow();\n            yield this.OneWinMan().PublishActiveCE(targetWin)\n                .then(() => {\n                this.UiMan().NotifyComplete(null, this.Const().Notify.PublishComplete);\n            });\n        });\n    }\n    __hndlrTakeSnapShot() {\n        this.__initNewOperation();\n        this.Xyyz.OneWindowMan.SaveWindowState(this.PageDataMan().TopLevelWindow());\n    }\n    __hndlrAddCETab() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.__initNewOperation();\n            yield this.PromiseGen().RaceWaitAndClick(this.Const().Selector.SC.scStartButton, this.PageDataMan().TopLevelWindow().DataDocSelf)\n                .then(() => { this.PromiseGen().WaitForThenClick(this.Const().Selector.SC.StartMenuLeftOption, this.PageDataMan().TopLevelWindow().DataDocSelf); });\n        });\n    }\n    __hndlrOpenCE() {\n        this.__initNewOperation();\n        this.locMan().ChangeLocationSwitchBoard(_Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].ContentEditor, this.PageDataMan().TopLevelWindow());\n    }\n    __initNewOperation() {\n        this.__cleardebugText();\n        this.UiMan().ClearCancelFlag();\n    }\n    __hndlrRestoreClick(evt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.__hndlrRestoreClick.name);\n            this.__initNewOperation();\n            try {\n                var idOfSelect = this.UiMan().GetIdOfSelectWindowSnapshot();\n                this.debug().MarkerA();\n                var dataOneWindowStorage = this.AtticMan().GetFromStorageById(idOfSelect);\n                this.debug().MarkerB();\n                var self = this;\n                var targetWindow = yield this.PageDataMan().GetTargetWindowAsync(evt.ctrlKey ? true : false, dataOneWindowStorage.WindowType);\n                if (targetWindow) {\n                    yield self.Xyyz.OneWindowMan.RestoreWindowStateToTarget(targetWindow, dataOneWindowStorage)\n                        .then(() => { this.UiMan().NotifyComplete(targetWindow); })\n                        .then(() => {\n                    });\n                }\n                else {\n                    self.debug().Error(this.__hndlrRestoreClick.name, 'no target window');\n                }\n            }\n            catch (ex) {\n                this.debug().Error(this.__hndlrRestoreClick.name, ex);\n            }\n            this.debug().FuncEnd(this.__hndlrRestoreClick.name);\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/EventManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/FeedbackManager.js":
/*!**********************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/FeedbackManager.js ***!
  \**********************************************************************/
/*! exports provided: FeedbackManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FeedbackManager\", function() { return FeedbackManager; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n\nclass FeedbackManager extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        super(xyyz);\n    }\n    __getTextArea() {\n        return document.getElementById(this.Const().ElemId.textAreaFeedback);\n    }\n    ClearTextArea() {\n        var ta = this.__getTextArea();\n        if (ta) {\n            ta.value = '';\n        }\n        else {\n            this.debug().Error(FeedbackManager.name, 'No text area found');\n        }\n    }\n    WriteLine(text) {\n        var ta = this.__getTextArea();\n        if (ta) {\n            ta.value += text + '\\n';\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/FeedbackManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/GuidManager.js":
/*!******************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/GuidManager.js ***!
  \******************************************************************/
/*! exports provided: GuidManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuidManager\", function() { return GuidManager; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n\nclass GuidManager extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        super(xyyz);\n    }\n    EmptyGuid() {\n        return this.ParseGuid(this.Const().GuidEmpty);\n    }\n    NewGuid() {\n        var toReturn;\n        var temp = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            var toReturn = v.toString(16);\n            return toReturn;\n        });\n        toReturn = this.ParseGuid(temp);\n        return toReturn;\n    }\n    ShortGuid(Id) {\n        var toReturn = '{error}';\n        if (Id && Id.asString.length > this.Const().Numbers.ShortGuidLength) {\n            toReturn = Id.asString.substr(0, this.Const().Numbers.ShortGuidLength);\n        }\n        return toReturn;\n    }\n    ParseGuid(val) {\n        let toReturn = {\n            asString: val,\n            asShort: ''\n        };\n        toReturn.asShort = this.ShortGuid(toReturn);\n        return toReturn;\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/GuidManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/Hub.js":
/*!**********************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/Hub.js ***!
  \**********************************************************/
/*! exports provided: Hub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Hub\", function() { return Hub; });\n/* harmony import */ var _Interfaces_InjectConst__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Interfaces/InjectConst */ \"./dist.TsTranspiled/src/jstoInject/Interfaces/InjectConst.js\");\n/* harmony import */ var _Managers_AtticManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Managers/AtticManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/AtticManager.js\");\n/* harmony import */ var _Managers_EventManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Managers/EventManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/EventManager.js\");\n/* harmony import */ var _Managers_FeedbackManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Managers/FeedbackManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/FeedbackManager.js\");\n/* harmony import */ var _Managers_GuidManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Managers/GuidManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/GuidManager.js\");\n/* harmony import */ var _Managers_LocationManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Managers/LocationManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/LocationManager.js\");\n/* harmony import */ var _Managers_MiscManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Managers/MiscManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/MiscManager.js\");\n/* harmony import */ var _Managers_OneCEManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Managers/OneCEManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/OneCEManager.js\");\n/* harmony import */ var _Managers_OneDesktopManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Managers/OneDesktopManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/OneDesktopManager.js\");\n/* harmony import */ var _Managers_OneTreeManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Managers/OneTreeManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/OneTreeManager.js\");\n/* harmony import */ var _Managers_OneWindowManager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Managers/OneWindowManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/OneWindowManager.js\");\n/* harmony import */ var _Managers_PageDataManager__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Managers/PageDataManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/PageDataManager.js\");\n/* harmony import */ var _Promises_PromiseGeneric__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Promises/PromiseGeneric */ \"./dist.TsTranspiled/src/jstoInject/Promises/PromiseGeneric.js\");\n/* harmony import */ var _Promises_PromiseOneStep__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../Promises/PromiseOneStep */ \"./dist.TsTranspiled/src/jstoInject/Promises/PromiseOneStep.js\");\n/* harmony import */ var _Managers_UiManager__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../Managers/UiManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/UiManager.js\");\n/* harmony import */ var _Classes_Utilities__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../Classes/Utilities */ \"./dist.TsTranspiled/src/jstoInject/Classes/Utilities.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass Hub {\n    constructor(sitecoreUiMan, debug) {\n        debug.FuncStart(Hub.name);\n        this.debug = debug;\n        this.SitecoreUiMan = sitecoreUiMan;\n        this.Start();\n        debug.FuncEnd(Hub.name);\n    }\n    Start() {\n        this.debug.FuncStart(this.Start.name);\n        this.AtticMan = new _Managers_AtticManager__WEBPACK_IMPORTED_MODULE_1__[\"AtticManager\"](this);\n        this.EventMan = new _Managers_EventManager__WEBPACK_IMPORTED_MODULE_2__[\"EventManager\"](this);\n        this.FeedbackMan = new _Managers_FeedbackManager__WEBPACK_IMPORTED_MODULE_3__[\"FeedbackManager\"](this);\n        this.GuidMan = new _Managers_GuidManager__WEBPACK_IMPORTED_MODULE_4__[\"GuidManager\"](this);\n        this.LocationMan = new _Managers_LocationManager__WEBPACK_IMPORTED_MODULE_5__[\"LocationManager\"](this);\n        this.MiscMan = new _Managers_MiscManager__WEBPACK_IMPORTED_MODULE_6__[\"MiscManager\"](this);\n        this.OneCEMan = new _Managers_OneCEManager__WEBPACK_IMPORTED_MODULE_7__[\"OneCEManager\"](this);\n        this.OneDesktopMan = new _Managers_OneDesktopManager__WEBPACK_IMPORTED_MODULE_8__[\"OneDesktopManager\"](this);\n        this.OneTreeMan = new _Managers_OneTreeManager__WEBPACK_IMPORTED_MODULE_9__[\"OneTreeManager\"](this);\n        this.OneWindowMan = new _Managers_OneWindowManager__WEBPACK_IMPORTED_MODULE_10__[\"OneWindowManager\"](this);\n        this.PageDataMan = new _Managers_PageDataManager__WEBPACK_IMPORTED_MODULE_11__[\"PageDataManager\"](this);\n        this.PromiseGeneric = new _Promises_PromiseGeneric__WEBPACK_IMPORTED_MODULE_12__[\"PromiseGeneric\"](this);\n        this.PromiseOneStep = new _Promises_PromiseOneStep__WEBPACK_IMPORTED_MODULE_13__[\"PromiseOneStep\"](this);\n        this.UiMan = new _Managers_UiManager__WEBPACK_IMPORTED_MODULE_14__[\"UiManager\"](this);\n        this.Utilities = new _Classes_Utilities__WEBPACK_IMPORTED_MODULE_15__[\"Utilities\"](this);\n        this.init();\n        this.debug.FuncEnd(this.Start.name);\n    }\n    init() {\n        this.debug.FuncStart(Hub.constructor.name + ' ' + this.init.name);\n        this.Const = _Interfaces_InjectConst__WEBPACK_IMPORTED_MODULE_0__[\"InjectConst\"].const;\n        this.AtticMan.Init();\n        this.debug.Enabled = this.AtticMan.CurrentSettings().DebugSettings.ShowDebugData;\n        this.UiMan.Init();\n        this.EventMan.Init();\n        this.PageDataMan.Init();\n        this.OneWindowMan.Init();\n        this.debug.FuncEnd(Hub.constructor.name + ' ' + this.init.name);\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/Hub.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/LocationManager.js":
/*!**********************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/LocationManager.js ***!
  \**********************************************************************/
/*! exports provided: LocationManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LocationManager\", function() { return LocationManager; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n/* harmony import */ var _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Enums/scWindowType */ \"./dist.TsTranspiled/src/jstoInject/Enums/scWindowType.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nclass LocationManager extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        super(xyyz);\n        xyyz.debug.FuncStart(LocationManager.name);\n        xyyz.debug.FuncEnd(LocationManager.name);\n    }\n    SetHref(href, callback, targetWindow, effortCount = this.Const().Iterations.MaxSetHrefEffort) {\n        this.debug().FuncStart(this.SetHref.name, href + ' : ' + effortCount + ' : has callback? ' + (callback !== null));\n        effortCount -= 1;\n        var isCorrectHref = targetWindow.Window.location.href = href;\n        var isReadyState = targetWindow.DataDocSelf.Document.readyState === 'complete';\n        if (effortCount > 0) {\n            if (isCorrectHref && isReadyState) {\n                this.debug().Log(this.SetHref.name, 'triggering callback');\n                callback();\n            }\n            else {\n                if (!isCorrectHref) {\n                    targetWindow.Window.location.href !== href;\n                }\n                var self = this;\n                setTimeout(function () {\n                    this.debug().Log('setting timeout');\n                    self.SetHref(href, callback, targetWindow, effortCount);\n                }, self.Const().Timeouts.SetHrefEffortWait);\n            }\n        }\n        else {\n            this.debug().Log('changing href unsuccessful. Dying');\n        }\n        this.debug().FuncEnd(this.SetHref.name);\n    }\n    ChangeLocationSwitchBoard(desiredPageType, targetWindow, iteration = this.Const().Iterations.MaxIterationSwitchBoard) {\n        this.debug().FuncStart(this.ChangeLocationSwitchBoard.name, 'desired = ' + _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"][desiredPageType] + ' iteration: ' + iteration + ':' + this.Const().Iterations.MaxIterationSwitchBoard);\n        if (iteration > 0) {\n            iteration -= 1;\n            var currentState = this.PageDataMan().GetCurrentPageType();\n            if (currentState === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].LoginPage) {\n                var self = this;\n                var callbackOnComplete = () => {\n                    this.debug().Log('callback triggered');\n                    self.ChangeLocationSwitchBoard(desiredPageType, targetWindow, iteration);\n                };\n                this.AdminB(targetWindow.DataDocSelf, callbackOnComplete);\n                var self = this;\n            }\n            else if (currentState === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Launchpad || currentState === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].ContentEditor || currentState === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Desktop) {\n                var self = this;\n                var callBackOnSuccessfulHrefChange = function () {\n                    self.debug().Log('Callback triggered');\n                    targetWindow = self.PageDataMan().SetWindowDataToCurrent(targetWindow.Window, targetWindow.DataDocSelf.Nickname);\n                    self.ChangeLocationSwitchBoard(desiredPageType, targetWindow, iteration);\n                };\n                if (desiredPageType === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Desktop && currentState !== _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Desktop) {\n                    this.SetHref(this.Const().UrlSuffix.Desktop, callBackOnSuccessfulHrefChange, targetWindow);\n                }\n                else if (desiredPageType === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].ContentEditor && currentState !== _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].ContentEditor) {\n                    this.SetHref(this.Const().UrlSuffix.CE, callBackOnSuccessfulHrefChange, targetWindow);\n                }\n                else if (currentState === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Desktop && desiredPageType === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Desktop) {\n                    this.debug().Log('On Desktop');\n                }\n            }\n        }\n        this.debug().FuncEnd(this.ChangeLocationSwitchBoard.name);\n    }\n    SetScMode(newValue, useOrigWindow) {\n        return new Promise(() => __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.SetScMode.name, newValue.asString);\n            var itemGuid;\n            var targetWindow;\n            var currentPageType = this.PageDataMan().GetCurrentPageType();\n            if (currentPageType === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].ContentEditor\n                ||\n                    currentPageType === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Desktop) {\n                var dataOneDoc = this.PageDataMan().TopLevelWindow().DataDocSelf;\n                var AllTreeNodeAr = this.Xyyz.OneTreeMan.GetOneLiveTreeData(dataOneDoc);\n                for (var idx = 0; idx < AllTreeNodeAr.length; idx++) {\n                    var candidate = AllTreeNodeAr[idx];\n                    if (candidate.IsActive) {\n                        itemGuid = candidate.NodeId;\n                        break;\n                    }\n                }\n                yield alert(itemGuid.asString);\n                if (itemGuid) {\n                    targetWindow = yield this.PageDataMan().GetTargetWindowAsync(useOrigWindow, _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Edit);\n                }\n            }\n            else if (currentPageType == _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Edit\n                || currentPageType == _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Normal\n                || currentPageType == _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Preview) {\n                if (targetWindow) {\n                    window.opener.location.href = window.opener.location.href.replace('=normal', newValue.asString).replace('=preview', newValue.asString).replace('=edit', newValue.asString);\n                }\n            }\n            this.debug().FuncEnd(this.SetScMode.name);\n        }));\n    }\n    GetLoginButton(targetDoc) {\n        this.debug().FuncStart(this.GetLoginButton.name);\n        var toReturn = targetDoc.Document.getElementById(this.Const().ElemId.sc.scLoginBtn.sc920);\n        if (!toReturn) {\n            toReturn = targetDoc.Document.querySelector(this.Const().Selector.SC.LoginBtn.sc820);\n        }\n        this.debug().Log('toReturn: ' + toReturn);\n        this.debug().FuncEnd(this.GetLoginButton.name);\n        return toReturn;\n    }\n    AdminB(targetDoc, callbackOnComplete) {\n        this.debug().FuncStart(this.AdminB.name, 'targetDoc: ' + targetDoc.XyyzId.asShort);\n        this.debug().Log('callback passed: ' + (callbackOnComplete !== null));\n        var userNameElem = targetDoc.Document.getElementById(this.Const().ElemId.sc.scLoginUserName);\n        var passwordElem = targetDoc.Document.getElementById(this.Const().ElemId.sc.scLoginPassword);\n        this.debug().Log('userNameElem: ' + userNameElem);\n        this.debug().Log('passwordElem: ' + passwordElem);\n        userNameElem.setAttribute('value', this.Const().Names.scDefaultAdminUserName);\n        passwordElem.setAttribute('value', this.Const().Names.scDefaultAdminPassword);\n        var loginButton = this.GetLoginButton(targetDoc);\n        if (loginButton) {\n            this.debug().Log('clicking');\n            loginButton.click();\n            if (callbackOnComplete) {\n                this.debug().Log('Triggering callback');\n                setTimeout(callbackOnComplete, this.Const().Timeouts.PostLoginBtnClick);\n            }\n            else {\n                this.debug().Log('no callback passed');\n            }\n        }\n        else {\n            this.debug().Error(this.AdminB.name, 'No loginButton');\n        }\n        this.debug().FuncEnd(this.AdminB.name);\n    }\n    QkID() {\n        return this.Const().ElemId;\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/LocationManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/MiscManager.js":
/*!******************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/MiscManager.js ***!
  \******************************************************************/
/*! exports provided: MiscManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MiscManager\", function() { return MiscManager; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n\nclass MiscManager extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        super(xyyz);\n    }\n    NotNullOrUndefined(subjectAnyOrAr, label = '', iterationCheck = null) {\n        var toReturn = false;\n        if (!iterationCheck) {\n            iterationCheck = this.Const().MaxNullOrUndefinedIter;\n        }\n        iterationCheck -= 1;\n        if (iterationCheck > 0) {\n            if (label === '') {\n                label = this.NotNullOrUndefined.name + ' : no labelprovided';\n            }\n            if (subjectAnyOrAr === 'undefined') {\n                this.debug().Error(label, 'Is undefined');\n            }\n            else if (!subjectAnyOrAr) {\n                this.debug().Error(label, 'Is Null');\n            }\n            else {\n                this.debug().LogVal(label, 'Passed');\n                toReturn = true;\n                if (Array.isArray(subjectAnyOrAr)) {\n                    for (var idx = 0; idx < subjectAnyOrAr.length; idx++) {\n                        toReturn = toReturn && this.NotNullOrUndefined(subjectAnyOrAr[idx], (idx + 1) + ':' + subjectAnyOrAr.length + ' ' + label, iterationCheck);\n                    }\n                }\n            }\n        }\n        else {\n            this.debug().Error(this.NotNullOrUndefined.name, 'max iteration hit');\n        }\n        return toReturn;\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/MiscManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/OneCEManager.js":
/*!*******************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/OneCEManager.js ***!
  \*******************************************************************/
/*! exports provided: OneCEManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OneCEManager\", function() { return OneCEManager; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n/* harmony import */ var _Classes_IterationHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Classes/IterationHelper */ \"./dist.TsTranspiled/src/jstoInject/Classes/IterationHelper.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nclass OneCEManager extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        super(xyyz);\n    }\n    WaitForNode(needleId, targetDoc, currentIteration, timeout, callbackOnComplete) {\n        this.debug().FuncStart(this.WaitForNode.name, 'looking for guid: iter: ' + currentIteration + ' ' + needleId.asString + ' on ' + this.GuidMan().ShortGuid(targetDoc.XyyzId));\n        currentIteration--;\n        var foundOnPage = targetDoc.Document.getElementById(needleId.asString);\n        if (foundOnPage) {\n            this.debug().Log('foundOnPage. Triggering callback on complete');\n            this.__expandNode(foundOnPage);\n            callbackOnComplete(foundOnPage);\n        }\n        else {\n            if (currentIteration > 0) {\n                this.debug().Log('not found on page...setting timeout: ' + timeout);\n                var self = this;\n                setTimeout(function () {\n                    currentIteration = currentIteration - 1;\n                    self.WaitForNode(needleId, targetDoc, currentIteration, timeout, callbackOnComplete);\n                }, timeout);\n            }\n            else {\n                this.debug().Log('Not Found. Triggering callback on complete');\n                callbackOnComplete(null);\n            }\n        }\n        this.debug().FuncEnd(this.WaitForNode.name);\n    }\n    __activateNode(hotTreeNode) {\n        this.debug().FuncStart(this.__activateNode.name);\n        this.debug().Log('clicking it');\n        hotTreeNode.click();\n        this.debug().FuncEnd(this.__activateNode.name);\n    }\n    __expandNode(foundOnPage) {\n        this.debug().FuncStart(this.__expandNode.name);\n        var currentSrc = foundOnPage.getAttribute('src');\n        this.debug().Log('currentSrc' + currentSrc);\n        if (currentSrc.indexOf(this.Const().Names.TreeMenuExpandedPng) < 0) {\n            this.debug().Log('clicking it');\n            foundOnPage.click();\n        }\n        this.debug().FuncEnd(this.__expandNode.name);\n    }\n    __collapseNode(element) {\n        var currentSrc = element.getAttribute('src');\n        this.debug().Log('currentSrc' + currentSrc);\n        if (currentSrc.indexOf(this.Const().Names.TreeMenuExpandedPng) > -1) {\n            this.debug().Log('clicking it');\n            element.click();\n        }\n    }\n    __collapseRootNode(targetCEDoc) {\n        var rootElem = targetCEDoc.Document.getElementById(this.Const().ElemId.sc.SitecoreRootGlyphId);\n        if (rootElem) {\n            this.__collapseNode(rootElem);\n        }\n        else {\n            this.debug().Error(this.__collapseRootNode.name, 'Root glyph not found ' + this.Const().ElemId.sc.SitecoreRootGlyphId);\n        }\n    }\n    WaitForAndRestoreOneNode(nextNode, dataOneDocTarget) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.WaitForAndRestoreOneNode.name, dataOneDocTarget.XyyzId.asShort);\n            var treeGlyphTargetId = this.Const().Names.SC.TreeGlyphPrefix + nextNode.NodeId.asString;\n            this.debug().Log('looking for: ' + treeGlyphTargetId + ' ' + nextNode.NodeFriendly + ' in ' + dataOneDocTarget.XyyzId.asShort);\n            this.debug().Log('document not null ' + (dataOneDocTarget.Document != null));\n            var iterHelper = new _Classes_IterationHelper__WEBPACK_IMPORTED_MODULE_1__[\"IterationHelper\"](this.Xyyz, 2, this.WaitForAndRestoreOneNode.name);\n            var foundOnPageTreeGlyph = null;\n            while (!foundOnPageTreeGlyph && iterHelper.DecrementAndKeepGoing()) {\n                this.debug().Log('looking for: *' + treeGlyphTargetId + '* ' + nextNode.NodeFriendly + ' in *' + dataOneDocTarget.XyyzId.asShort + '*');\n                foundOnPageTreeGlyph = dataOneDocTarget.Document.getElementById(treeGlyphTargetId);\n                if (foundOnPageTreeGlyph) {\n                    if (nextNode.IsExpanded) {\n                        this.__expandNode(foundOnPageTreeGlyph);\n                    }\n                    if (nextNode.IsActive) {\n                        var hotTreeNodeId = this.Const().Names.SC.TreeNodePrefix + nextNode.NodeId.asString;\n                        var hotTreeNode = dataOneDocTarget.Document.getElementById(hotTreeNodeId);\n                        if (hotTreeNode) {\n                            this.__activateNode(hotTreeNode);\n                        }\n                    }\n                }\n                else {\n                    this.debug().Log('not Found...waiting: ');\n                    yield iterHelper.Wait();\n                }\n            }\n            this.debug().FuncEnd(this.WaitForAndRestoreOneNode.name, dataOneDocTarget.XyyzId.asShort);\n        });\n    }\n    WaitForAndRestoreManyAllNodes(storageData, dataOneDocTarget, iterHelper = null) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.WaitForAndRestoreManyAllNodes.name, dataOneDocTarget.XyyzId.asShort);\n            if (!iterHelper) {\n                iterHelper = new _Classes_IterationHelper__WEBPACK_IMPORTED_MODULE_1__[\"IterationHelper\"](this.Xyyz, 10, this.WaitForAndRestoreManyAllNodes.name);\n            }\n            while (storageData.AllTreeNodeAr.length > 0 && iterHelper.DecrementAndKeepGoing()) {\n                var nextNode = storageData.AllTreeNodeAr.shift();\n                yield this.WaitForAndRestoreOneNode(nextNode, dataOneDocTarget);\n            }\n            this.debug().FuncEnd(this.WaitForAndRestoreManyAllNodes.name);\n        });\n    }\n    RestoreCEStateAsync(dataToRestore, dataOneDocTarget) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.RestoreCEStateAsync.name, dataOneDocTarget.XyyzId.asShort);\n            var toReturn = false;\n            this.debug().Log('Node Count in storage data: ' + dataToRestore.AllTreeNodeAr.length);\n            yield this.WaitForAndRestoreManyAllNodes(dataToRestore, dataOneDocTarget);\n            this.debug().FuncEnd(this.RestoreCEStateAsync.name);\n            return toReturn;\n        });\n    }\n    SaveStateOneContentEditor(id, dataOneDoc) {\n        this.debug().FuncStart('SaveOneContentEditor');\n        this.debug().Log('SaveOneContentEditor');\n        ;\n        this.debug().Log('docElem is null: ' + (dataOneDoc === null));\n        ;\n        var CeSnapShot = this.Xyyz.OneCEMan.MakeNewData(id);\n        CeSnapShot.AllTreeNodeAr = this.Xyyz.OneTreeMan.GetOneLiveTreeData(dataOneDoc);\n        this.Xyyz.OneWindowMan.PutCEDataToCurrentSnapShot(CeSnapShot);\n        this.debug().FuncEnd('SaveOneContentEditor');\n    }\n    MakeNewData(id) {\n        this.debug().FuncStart('MakeNewData: ' + id);\n        var toReturn = {\n            Id: id,\n            AllTreeNodeAr: []\n        };\n        this.debug().FuncEnd('MakeNewData: ' + id);\n        return toReturn;\n    }\n    DebugDataOneNode(dataOneTreeNode) {\n        this.debug().FuncStart(this.DebugDataOneNode.name);\n        var activeOrNot = dataOneTreeNode.IsActive ? '* ' : '  ';\n        var expandedOrNot = dataOneTreeNode.IsExpanded ? '+ ' : '  ';\n        var toReturn = activeOrNot + expandedOrNot + dataOneTreeNode.NodeId.asString + ' ' + dataOneTreeNode.NodeFriendly;\n        this.debug().FuncEnd(this.DebugDataOneNode.name);\n        return toReturn;\n    }\n    GetDebugDataOneCE(dataOneCe) {\n        this.debug().FuncStart('GetDebugDataOneCE');\n        var toReturn = [];\n        toReturn.push('------ All Tree Nodes -----');\n        for (var idx = 0; idx < dataOneCe.AllTreeNodeAr.length; idx++) {\n            this.debug().Log('idx: ' + idx);\n            var oneVal = this.DebugDataOneNode(dataOneCe.AllTreeNodeAr[idx]);\n            this.debug().Log('oneVal : ' + oneVal);\n            toReturn.push(oneVal);\n        }\n        this.debug().FuncEnd(this.GetDebugDataOneCE.name);\n        return toReturn;\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/OneCEManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/OneDesktopManager.js":
/*!************************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/OneDesktopManager.js ***!
  \************************************************************************/
/*! exports provided: OneDesktopManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OneDesktopManager\", function() { return OneDesktopManager; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n/* harmony import */ var _Classes_IterationHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Classes/IterationHelper */ \"./dist.TsTranspiled/src/jstoInject/Classes/IterationHelper.js\");\n/* harmony import */ var _Promises_PromiseChainRestoreDesktop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Promises/PromiseChainRestoreDesktop */ \"./dist.TsTranspiled/src/jstoInject/Promises/PromiseChainRestoreDesktop.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\nclass OneDesktopManager extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        xyyz.debug.FuncStart(OneDesktopManager.name);\n        super(xyyz);\n        xyyz.debug.FuncEnd(OneDesktopManager.name);\n    }\n    RestoreDesktopStateAsync(targetWindow, dataToRestore) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.RestoreDesktopStateAsync.name);\n            ;\n            if (this.MiscMan().NotNullOrUndefined([targetWindow, dataToRestore, dataToRestore.AllCEAr], this.RestoreDesktopStateAsync.name)) {\n                for (var idx = 0; idx < dataToRestore.AllCEAr.length; idx++) {\n                    this.debug().Log('data idx: ' + idx + ':' + dataToRestore.AllCEAr.length);\n                    var desktopPromiser = new _Promises_PromiseChainRestoreDesktop__WEBPACK_IMPORTED_MODULE_2__[\"PromiseChainRestoreDesktop\"](this.Xyyz);\n                    yield desktopPromiser.RunOneChain(targetWindow, dataToRestore.AllCEAr[idx]);\n                }\n            }\n            this.debug().FuncEnd(this.RestoreDesktopStateAsync.name);\n        });\n    }\n    RestoreDataToOneIframeWorker(oneCEdata, newIframe) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.RestoreDataToOneIframeWorker.name, 'data not null: ' + (oneCEdata != null) + ' newFrame not null: ' + (newIframe !== null));\n            var toReturn = false;\n            this.debug().DebugDataOneIframe(newIframe);\n            if (oneCEdata && newIframe) {\n                yield this.Xyyz.OneCEMan.RestoreCEStateAsync(oneCEdata, newIframe.ContentDoc);\n                toReturn = true;\n            }\n            else {\n                this.debug().Error(this.RestoreDataToOneIframeWorker.name, 'bad data');\n                toReturn = false;\n            }\n            this.debug().FuncEnd(this.RestoreDataToOneIframeWorker.name, toReturn.toString());\n            return toReturn;\n        });\n    }\n    WaitForIframeCountDiffWorker(IFramesbefore, targetWin) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.WaitForIframeCountDiffWorker.name);\n            var toReturn = null;\n            var iterationJr = new _Classes_IterationHelper__WEBPACK_IMPORTED_MODULE_1__[\"IterationHelper\"](this.Xyyz, 10, this.WaitForIframeCountDiffWorker.name);\n            while (!toReturn && iterationJr.DecrementAndKeepGoing()) {\n                let beforeCount = IFramesbefore.length;\n                var allIframesAfter = this.GetAllLiveIframeData(targetWin);\n                var count = allIframesAfter.length;\n                this.debug().Log('iFrame count before: ' + IFramesbefore.length);\n                this.debug().Log('iFrame count after: ' + allIframesAfter.length);\n                if (count > beforeCount) {\n                    var newIframes = allIframesAfter.filter(e => !IFramesbefore.includes(e));\n                    toReturn = newIframes[0];\n                }\n                else {\n                    var self = this;\n                    yield iterationJr.Wait();\n                }\n            }\n            this.debug().FuncEnd(this.WaitForIframeCountDiffWorker.name);\n            return toReturn;\n        });\n    }\n    GetAllLiveIframeData(targetWindow) {\n        this.debug().FuncStart(this.GetAllLiveIframeData.name);\n        var toReturn = [];\n        var iframeAr = targetWindow.DataDocSelf.Document.querySelectorAll(this.Const().Selector.SC.IframeContent);\n        if (iframeAr) {\n            this.debug().Log('iframeAr: ' + iframeAr.length);\n            for (var ifrIdx = 0; ifrIdx < iframeAr.length; ifrIdx++) {\n                this.debug().Log('pushing: ' + ifrIdx);\n                var iframeElem = iframeAr[ifrIdx];\n                var dataOneIframe = this.Utilites().DateOneIframeFactory(iframeElem, targetWindow.DataDocSelf, 'desktop Iframe_' + ifrIdx);\n                dataOneIframe.ContentDoc.HasParentDesktop = true;\n                dataOneIframe.ContentDoc.IsCEDoc = true;\n                toReturn.push(dataOneIframe);\n            }\n        }\n        this.debug().FuncEnd(this.GetAllLiveIframeData.name, 'count:  ' + toReturn.length);\n        return toReturn;\n    }\n    SaveStateOneDesktop(targetWindow) {\n        this.debug().FuncStart(this.SaveStateOneDesktop.name);\n        ;\n        this.debug().Log('SaveOneDesktop');\n        ;\n        var livingIframeAr = this.GetAllLiveIframeData(targetWindow);\n        if (livingIframeAr && livingIframeAr.length > 0) {\n            for (var iframeIdx = 0; iframeIdx < livingIframeAr.length; iframeIdx++) {\n                this.debug().Log('iframeIdx: ' + iframeIdx);\n                var targetIframeObj = livingIframeAr[iframeIdx];\n                this.Xyyz.OneCEMan.SaveStateOneContentEditor(targetIframeObj.Id, targetIframeObj.ContentDoc);\n            }\n        }\n        this.debug().FuncEnd(this.SaveStateOneDesktop.name);\n    }\n}\n;\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/OneDesktopManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/OneTreeManager.js":
/*!*********************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/OneTreeManager.js ***!
  \*********************************************************************/
/*! exports provided: OneTreeManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OneTreeManager\", function() { return OneTreeManager; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n\nclass OneTreeManager extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        super(xyyz);\n        xyyz.debug.FuncStart(OneTreeManager.name);\n        xyyz.debug.FuncEnd(OneTreeManager.name);\n    }\n    GetFriendlyNameFromNode(inputNode) {\n        this.debug().FuncStart(this.GetFriendlyNameFromNode.name);\n        var toReturn = 'unknown';\n        var parentNode = inputNode.parentNode;\n        var treeNode = parentNode.querySelector(this.Const().Selector.SC.IdStartsWithTreeNode);\n        if (treeNode) {\n            toReturn = treeNode.innerText;\n        }\n        else {\n            this.debug().Log('No treeNode');\n        }\n        this.debug().FuncEnd(this.GetFriendlyNameFromNode.name, toReturn);\n        return toReturn;\n    }\n    __isActive(targetNode) {\n        var toReturn = false;\n        var firstNodeActiveTest = targetNode.querySelector(this.Const().Selector.SC.IdStartsWithTreeNode);\n        if (firstNodeActiveTest) {\n            var className = firstNodeActiveTest.className;\n            if (className.indexOf(this.Const().ClassNames.SC.scContentTreeNodeActive) > -1) {\n                toReturn = true;\n                this.debug().Log('** isActive ' + targetNode.innerText);\n            }\n        }\n        return toReturn;\n    }\n    __isExpanded(firstImg) {\n        var toReturn = false;\n        if (firstImg) {\n            var srcAttr = firstImg.getAttribute('src');\n            if (srcAttr.indexOf(this.Const().Names.SC.TreeExpandedPng.sc920) > -1) {\n                toReturn = true;\n            }\n            return toReturn;\n        }\n    }\n    __isContentTreeNode(targetNode) {\n        var toReturn = false;\n        var className = targetNode.className;\n        if (className === this.Const().ClassNames.ContentTreeNode) {\n            toReturn = true;\n        }\n        return toReturn;\n    }\n    WalkNodeRecursive(targetNode, depth) {\n        var toReturn = [];\n        depth = depth - 1;\n        if (targetNode) {\n            var firstImg = targetNode.querySelector(this.Const().Selector.SC.ContentTreeNodeGlyph);\n            if (this.__isContentTreeNode(targetNode)) {\n                var newData = {\n                    IsExpanded: this.__isExpanded(firstImg),\n                    IsActive: this.__isActive(targetNode),\n                    NodeFriendly: '',\n                    NodeId: null\n                };\n                if (newData.IsExpanded || newData.IsActive) {\n                    this.debug().LogVal('isExpanded', newData.IsExpanded.toString());\n                    this.debug().LogVal('isActive', newData.IsActive.toString());\n                    newData.NodeFriendly = this.GetFriendlyNameFromNode(firstImg);\n                    this.debug().LogVal('friendlyName', newData.NodeFriendly);\n                    var apparentId = firstImg.id.replace(this.Const().Names.SC.TreeGlyphPrefix, '');\n                    newData.NodeId = this.Xyyz.GuidMan.ParseGuid(apparentId);\n                    toReturn.push(newData);\n                }\n            }\n            var childNodes = targetNode.children;\n            if (childNodes && childNodes.length > 0 && depth > 0) {\n                for (var jdx = 0; jdx < childNodes.length; jdx++) {\n                    var oneChild = childNodes[jdx];\n                    toReturn = toReturn.concat(this.WalkNodeRecursive(oneChild, depth));\n                }\n            }\n        }\n        return toReturn;\n    }\n    GetOneLiveTreeData(targetDoc) {\n        this.debug().FuncStart(this.GetOneLiveTreeData.name);\n        this.debug().Log('targetDoc isnull: ' + (targetDoc === null));\n        var toReturn = [];\n        if (targetDoc) {\n            var rootNode = targetDoc.Document.getElementById(this.Const().ElemId.sc.SitecoreRootNodeId);\n            if (rootNode) {\n                this.debug().Log('rootNode: ' + rootNode.innerHTML);\n                var rootParent = rootNode.parentElement;\n                toReturn = this.WalkNodeRecursive(rootParent, this.Const().MaxIter);\n                this.debug().Log('foundNodes count: ' + toReturn.length);\n            }\n            else {\n                this.debug().Error(this.GetOneLiveTreeData.name, 'no root node');\n            }\n        }\n        else {\n            this.debug().Error(this.GetOneLiveTreeData.name, 'no targetDoc');\n        }\n        this.debug().FuncEnd(this.GetOneLiveTreeData.name);\n        return toReturn;\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/OneTreeManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/OneWindowManager.js":
/*!***********************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/OneWindowManager.js ***!
  \***********************************************************************/
/*! exports provided: OneWindowManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OneWindowManager\", function() { return OneWindowManager; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n/* harmony import */ var _Promises_PromiseChainQuickPublish__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Promises/PromiseChainQuickPublish */ \"./dist.TsTranspiled/src/jstoInject/Promises/PromiseChainQuickPublish.js\");\n/* harmony import */ var _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Enums/scWindowType */ \"./dist.TsTranspiled/src/jstoInject/Enums/scWindowType.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\nclass OneWindowManager extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        super(xyyz);\n        xyyz.debug.FuncStart(OneWindowManager.name);\n        xyyz.debug.FuncEnd(OneWindowManager.name);\n    }\n    SaveWindowState(targetWindow) {\n        this.debug().FuncStart(this.SaveWindowState.name);\n        var currentPageType = this.PageDataMan().GetCurrentPageType();\n        this.Xyyz.OneWindowMan.CreateNewWindowSnapShot(currentPageType);\n        if (currentPageType === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_2__[\"scWindowType\"].ContentEditor) {\n            this.debug().Log('is Content Editor');\n            var id = this.Xyyz.GuidMan.EmptyGuid();\n            this.Xyyz.OneCEMan.SaveStateOneContentEditor(id, targetWindow.DataDocSelf);\n        }\n        else if (currentPageType === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_2__[\"scWindowType\"].Desktop) {\n            this.debug().Log('is Desktop');\n            this.Xyyz.OneDesktopMan.SaveStateOneDesktop(targetWindow);\n        }\n        else {\n            this.debug().Error(this.SaveWindowState.name, 'Invalid page location ' + currentPageType);\n        }\n        this.debug().FuncEnd(this.SaveWindowState.name);\n        ;\n    }\n    __getTopLevelIframe(targetWindow) {\n        var toReturn = null;\n        var allIframe = this.DesktopMan().GetAllLiveIframeData(targetWindow);\n        var maxZVal = -1;\n        if (allIframe && allIframe.length > 0) {\n            for (var idx = 0; idx < allIframe.length; idx++) {\n                var candidateIframe = allIframe[idx];\n                if (candidateIframe && candidateIframe.Zindex > maxZVal) {\n                    toReturn = candidateIframe;\n                    maxZVal = candidateIframe.Zindex;\n                }\n            }\n        }\n        return toReturn;\n    }\n    PublishActiveCE(targetWindow) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.PublishActiveCE.name);\n            var currentWindowType = this.PageDataMan().GetCurrentPageType();\n            var docToPublish = null;\n            if (currentWindowType == _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_2__[\"scWindowType\"].Desktop) {\n                var topIframe = this.__getTopLevelIframe(targetWindow);\n                if (topIframe) {\n                    docToPublish = topIframe.ContentDoc;\n                }\n            }\n            else {\n                docToPublish = this.PageDataMan().TopLevelWindow().DataDocSelf;\n            }\n            this.debug().Log('docToPublish', this.debug().IsNullOrUndefined(docToPublish));\n            if (docToPublish) {\n                var publishChain = new _Promises_PromiseChainQuickPublish__WEBPACK_IMPORTED_MODULE_1__[\"PromiseChainQuickPublish\"](this.Xyyz);\n                yield publishChain.PublishCE(docToPublish);\n            }\n            this.debug().FuncEnd(this.PublishActiveCE.name);\n        });\n    }\n    RestoreWindowStateToTarget(targetWindow, dataToRestore) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.RestoreWindowStateToTarget.name);\n            if (dataToRestore) {\n                if (dataToRestore.WindowType === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_2__[\"scWindowType\"].ContentEditor) {\n                    yield this.Xyyz.OneCEMan.RestoreCEStateAsync(dataToRestore.AllCEAr[0], targetWindow.DataDocSelf);\n                }\n                else if (dataToRestore.WindowType === _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_2__[\"scWindowType\"].Desktop) {\n                    yield this.Xyyz.OneDesktopMan.RestoreDesktopStateAsync(targetWindow, dataToRestore);\n                }\n                else {\n                    this.debug().Error(this.RestoreWindowStateToTarget.name, 'No match found for snap shot');\n                }\n                this.debug().FuncEnd(this.RestoreWindowStateToTarget.name);\n            }\n        });\n    }\n    PutCEDataToCurrentSnapShot(oneCeData) {\n        this.debug().FuncStart(this.PutCEDataToCurrentSnapShot.name);\n        this.debug().Log('PutCEDataToCurrentSnapShot');\n        var matchingCeData = this.FindMatchingCeData(oneCeData);\n        if (matchingCeData) {\n            matchingCeData = oneCeData;\n        }\n        else {\n            this.__activeWindowSnapShot.AllCEAr.push(oneCeData);\n        }\n        this.UpdateStorage();\n        this.AtticMan().DrawDebugDataPretty(this.__activeWindowSnapShot);\n        this.debug().FuncEnd(this.PutCEDataToCurrentSnapShot.name);\n    }\n    ShowDebugDataOneWindow() {\n        this.debug().FuncStart('ShowDebugDataOneWindow');\n        var toReturn = [];\n        toReturn.push(this.__activeWindowSnapShot.TimeStamp.toJSON());\n        for (var jdx = 0; jdx < this.__activeWindowSnapShot.AllCEAr.length; jdx++) {\n            var oneCE = this.__activeWindowSnapShot.AllCEAr[jdx];\n            toReturn = toReturn.concat(this.Xyyz.OneCEMan.GetDebugDataOneCE(oneCE));\n        }\n        for (var kdx = 0; kdx < toReturn.length; kdx++) {\n            this.debug().Log(toReturn[kdx]);\n        }\n        this.debug().FuncEnd('ShowDebugDataOneWindow');\n        return toReturn;\n    }\n    UpdateStorage() {\n        this.debug().FuncStart(this.UpdateStorage.name);\n        this.AtticMan().WriteToStorage(this.__activeWindowSnapShot);\n        this.UiMan().RefreshUi();\n        this.debug().FuncEnd(this.UpdateStorage.name);\n    }\n    FindMatchingCeData(oneCeData) {\n        var toReturn = null;\n        for (var idx = 0; idx < this.__activeWindowSnapShot.AllCEAr.length; idx++) {\n            var candidate = this.__activeWindowSnapShot.AllCEAr[idx];\n            if (candidate.Id === oneCeData.Id) {\n                toReturn = candidate;\n                break;\n            }\n        }\n        this.debug().Log('match found :' + (toReturn !== null));\n        return toReturn;\n    }\n    Init() {\n        var currentPageType = this.PageDataMan().GetCurrentPageType();\n        this.CreateNewWindowSnapShot(currentPageType);\n    }\n    CreateNewWindowSnapShot(windowType) {\n        this.debug().FuncStart('CreateNewWindowSnapShot');\n        var dateToUse = new Date();\n        var newGuid = this.Xyyz.GuidMan.NewGuid();\n        this.__activeWindowSnapShot = {\n            TimeStamp: dateToUse,\n            WindowType: windowType,\n            WindowFriendly: windowType[windowType],\n            AllCEAr: [],\n            Id: newGuid,\n            IsFavorite: false,\n            NickName: '',\n            RawData: null\n        };\n        this.debug().FuncEnd('CreateNewWindowSnapShot');\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/OneWindowManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/PageDataManager.js":
/*!**********************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/PageDataManager.js ***!
  \**********************************************************************/
/*! exports provided: PageDataManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PageDataManager\", function() { return PageDataManager; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n/* harmony import */ var _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Enums/scWindowType */ \"./dist.TsTranspiled/src/jstoInject/Enums/scWindowType.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nclass PageDataManager extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        super(xyyz);\n        this.debug().CtorName(this.constructor.name);\n    }\n    GetTargetWindowAsync(useOrigWindow, windowType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.GetTargetWindowAsync.name);\n            var targetWindow;\n            if (useOrigWindow) {\n                this.debug().Log('target window is self');\n                targetWindow = this.TopLevelWindow();\n            }\n            else {\n                this.debug().Log('target window is new');\n                let newWindowUrl = this.GetUrlForWindowType(windowType);\n                yield this.__getNewTargetWindowAsync(newWindowUrl)\n                    .then((data) => targetWindow = data);\n            }\n            this.debug().FuncEnd(this.GetTargetWindowAsync.name, 'child window id: ' + targetWindow.DataDocSelf.XyyzId.asShort);\n            return targetWindow;\n        });\n    }\n    __getNewTargetWindowAsync(newWindowUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => {\n                this.debug().FuncStart(this.__getNewTargetWindowAsync.name);\n                this.debug().LogVal('newWindowUrl', newWindowUrl);\n                var newWindow = this.__winDataParent.Window.open(newWindowUrl);\n                var self = this;\n                newWindow.addEventListener('load', () => {\n                    var toReturn = self.SetWindowDataToCurrent(newWindow, 'newly spawned window');\n                    resolve(toReturn);\n                });\n                this.debug().FuncEnd(this.__getNewTargetWindowAsync.name);\n            });\n        });\n    }\n    SetWindowDataToCurrent(window, nickname) {\n        var toReturn = {\n            Friendly: 'New Tab',\n            Window: window,\n            WindowType: _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Unknown,\n            DataDocSelf: {\n                ParentDoc: null,\n                Document: window.document,\n                HasParentDesktop: false,\n                XyyzId: this.GuidMan().NewGuid(),\n                IsCEDoc: false,\n                ParentDesktop: null,\n                Nickname: nickname\n            },\n        };\n        toReturn.DataDocSelf.ParentDoc = toReturn.DataDocSelf;\n        return toReturn;\n    }\n    TopLevelWindow() {\n        return this.__winDataParent;\n    }\n    Init() {\n        this.debug().FuncStart(this.Init.name);\n        if (window.opener) {\n            this.__winDataParent = {\n                Window: window.opener,\n                Friendly: 'Parent Window',\n                WindowType: _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Unknown,\n                DataDocSelf: {\n                    ParentDoc: null,\n                    Document: (window.opener).document,\n                    HasParentDesktop: false,\n                    XyyzId: this.GuidMan().NewGuid(),\n                    IsCEDoc: false,\n                    ParentDesktop: null,\n                    Nickname: 'Original Target Page'\n                }\n            };\n            this.__winDataParent.DataDocSelf.ParentDoc = this.__winDataParent.DataDocSelf;\n        }\n        else {\n            this.debug().Error(this.constructor.name, 'No Opener Page');\n        }\n        this.UiMan().SetParentInfo(this.__winDataParent);\n        console.log('PageData C');\n        this.DebugInfo();\n        this.debug().FuncEnd(this.Init.name);\n    }\n    GetPageTypeOfTargetWindow(targetWindow) {\n        this.debug().FuncStart(this.GetPageTypeOfTargetWindow.name, targetWindow.location.href);\n        var toReturn;\n        var currentLoc = targetWindow.location.href;\n        if (currentLoc.indexOf(this.Const().UrlSuffix.Login) > -1) {\n            toReturn = _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].LoginPage;\n        }\n        else if (currentLoc.toLowerCase().indexOf(this.Const().UrlSuffix.Desktop.toLowerCase()) > -1) {\n            this.debug().Log('Testing for Desktop editor');\n            this.debug().Log('currentLoc.toLowerCase()' + currentLoc.toLowerCase());\n            this.debug().Log('this.Const().Url.Desktop.toLowerCase()' + this.Const().UrlSuffix.Desktop.toLowerCase());\n            toReturn = _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Desktop;\n        }\n        else if (new RegExp(this.Const().Regex.ContentEditor).test(currentLoc)) {\n            toReturn = _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].ContentEditor;\n        }\n        else if (currentLoc.toLowerCase().indexOf(this.Const().UrlSuffix.LaunchPad.toLowerCase()) > -1) {\n            toReturn = _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Launchpad;\n        }\n        else {\n            toReturn = _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Unknown;\n        }\n        this.debug().FuncEnd(this.GetPageTypeOfTargetWindow.name, _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"][toReturn]);\n        return toReturn;\n    }\n    GetUrlForWindowType(windowType) {\n        var toReturn;\n        this.debug().NotNullCheck('this.__winDataParent.DataDocSelf.Document', this.__winDataParent.DataDocSelf.Document);\n        var hostName = this.__winDataParent.DataDocSelf.Document.location.origin;\n        switch (windowType) {\n            case _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].ContentEditor:\n                toReturn = hostName + this.Const().UrlSuffix.CE;\n                break;\n            case _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Desktop:\n                toReturn = hostName + this.Const().UrlSuffix.Desktop;\n                break;\n            case _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Edit:\n                toReturn = hostName + this.Const().UrlSuffix.None;\n                break;\n            case _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Preview:\n                toReturn = hostName + this.Const().UrlSuffix.None;\n                break;\n            case _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Normal:\n                toReturn = hostName + this.Const().UrlSuffix.None;\n                break;\n            default:\n                toReturn = hostName;\n                this.debug().Error(this.GetUrlForWindowType.name, 'unaccounted for window type');\n                break;\n        }\n        return toReturn;\n    }\n    GetCurrentPageType() {\n        this.debug().FuncStart(this.GetCurrentPageType.name);\n        var toReturn = _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"].Unknown;\n        if (this.__winDataParent && this.__winDataParent && this.__winDataParent.Window && this.__winDataParent.DataDocSelf) {\n            toReturn = this.GetPageTypeOfTargetWindow(this.__winDataParent.Window);\n        }\n        this.debug().FuncEnd(this.GetCurrentPageType.name + ' (' + toReturn + ') ' + _Enums_scWindowType__WEBPACK_IMPORTED_MODULE_1__[\"scWindowType\"][toReturn]);\n        return toReturn;\n    }\n    DebugInfo() {\n        this.debug().FuncStart(this.DebugInfo.name);\n        this.debug().Log(this.__winDataParent.Window);\n        this.debug().Log(this.__winDataParent.DataDocSelf);\n        this.debug().FuncEnd(this.DebugInfo.name);\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/PageDataManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/SitecoreUiManager.js":
/*!************************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/SitecoreUiManager.js ***!
  \************************************************************************/
/*! exports provided: SitecoreUiManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SitecoreUiManager\", function() { return SitecoreUiManager; });\nclass SitecoreUiManager {\n    constructor(debug) {\n        debug.FuncStart(SitecoreUiManager.name);\n        this.debug = debug;\n        debug.FuncEnd(SitecoreUiManager.name);\n    }\n    AssignMenuWindowChanged(handler) {\n        window.addEventListener('click', (evt) => { handler(); });\n        window.addEventListener('resize', (evt) => { handler(); });\n    }\n    AssignOnClickEvent(targetId, handler) {\n        var targetElem = document.getElementById(targetId);\n        if (!targetElem) {\n            this.debug.Error(this.AssignOnClickEvent.name, 'No Id: ' + targetId);\n        }\n        else {\n            targetElem.addEventListener('click', (evt) => { handler(evt); });\n        }\n    }\n    AssignOnChangeEvent(targetId, handler) {\n        var targetElem = document.getElementById(targetId);\n        if (!targetElem) {\n            this.debug.Error(this.AssignOnClickEvent.name, 'No Id: ' + targetId);\n        }\n        else {\n            targetElem.onchange = () => { handler; };\n        }\n    }\n    AssignDblClickEvent(targetId, handler) {\n        var targetElem = document.getElementById(targetId);\n        if (!targetElem) {\n            this.debug.Error(this.AssignOnClickEvent.name, 'No Id: ' + targetId);\n        }\n        else {\n            targetElem.ondblclick = (evt) => { handler(evt); };\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/SitecoreUiManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Managers/UiManager.js":
/*!****************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Managers/UiManager.js ***!
  \****************************************************************/
/*! exports provided: UiManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UiManager\", function() { return UiManager; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n\nclass UiManager extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        super(xyyz);\n        this.__selectSnapshotIndex = 0;\n        xyyz.debug.FuncStart(UiManager.name);\n        xyyz.debug.FuncEnd(UiManager.name);\n    }\n    Init() {\n        var self = this;\n        this.debug().AddDebugTextChangedCallback(self, this.HndlrDebugTextChanged);\n        var prefs = this.AtticMan().CurrentSettings().MenuPrefs;\n        if (prefs.MenuX && prefs.MenuY) {\n            var currentX = window.screenLeft;\n            var currentY = window.screenTop;\n            var deltaX = Math.abs(prefs.MenuX - currentX);\n            var deltaY = Math.abs(prefs.MenuY - currentY);\n            window.moveTo(Math.abs(prefs.MenuX), Math.abs(prefs.MenuY));\n        }\n        if (prefs.MenuWidth && prefs.MenuHeight) {\n            window.resizeTo(Math.abs(prefs.MenuWidth), Math.abs(prefs.MenuHeight));\n        }\n        this.RefreshUi();\n        this.debug().LogVal('dddd', 'dddd');\n    }\n    __getTextArea() {\n        return document.getElementById(this.Const().ElemId.Hs.TaDebug);\n    }\n    HndlrDebugTextChanged(caller, data) {\n        var self = caller;\n        var ta = self.__getTextArea();\n        if (ta) {\n            if (data.Append) {\n                ta.value += data.NewText + '\\n';\n            }\n            else {\n                ta.value = data.NewText + '\\n';\n            }\n            ta.scrollTop = ta.scrollHeight;\n        }\n    }\n    SetParentInfo(winDataParent) {\n        var targetSpan = document.getElementById(this.Const().ElemId.HindSiteParentInfo);\n        if (targetSpan) {\n            targetSpan.innerHTML = ' | Parent Id: ' + this.GuidMan().ShortGuid(winDataParent.DataDocSelf.XyyzId) + ' | ' + winDataParent.Window.location.href;\n        }\n    }\n    NotifyComplete(targetWindow = null, Message = this.Const().Notify.Default) {\n        if (!targetWindow) {\n            targetWindow = this.PageDataMan().TopLevelWindow();\n        }\n        let bodyTag = targetWindow.DataDocSelf.Document.getElementsByTagName('body')[0];\n        var flagElem = targetWindow.DataDocSelf.Document.createElement('div');\n        flagElem.innerHTML = '<div>' + Message + '</div>';\n        flagElem.style.position = 'absolute';\n        flagElem.style.top = '100px';\n        flagElem.style.left = '100px';\n        flagElem.style.backgroundColor = 'yellow';\n        flagElem.style.zIndex = '999';\n        flagElem.style.fontSize = '40px';\n        console.log(flagElem.toString());\n        setTimeout(function () {\n            flagElem.remove();\n        }, this.Const().Timeouts.WaitBeforeRemovingCompleteFlag);\n        bodyTag.appendChild(flagElem);\n    }\n    SetAccordianClass(targetElem, isCollapsed) {\n        if (!isCollapsed) {\n            targetElem.classList.remove(this.Const().ClassNames.HS.Collapsed);\n        }\n        else {\n            targetElem.classList.add(this.Const().ClassNames.HS.Collapsed);\n        }\n    }\n    GetAccordianContentElem(sib) {\n        var toReturn;\n        if (sib) {\n            var siblings = sib.parentElement.getElementsByClassName('accordian-content');\n            if (siblings) {\n                var toReturn = siblings[0];\n            }\n        }\n        return toReturn;\n    }\n    RestoreAccordianStates() {\n        var accordianSettings = this.AtticMan().CurrentSettings().Accordian;\n        for (var idx = 0; idx < accordianSettings.length; idx++) {\n            var candidate = accordianSettings[idx];\n            var target = document.getElementById(candidate.ElemId);\n            if (target) {\n                var contentSib = this.GetAccordianContentElem(target);\n                if (contentSib) {\n                    this.SetAccordianClass(contentSib, candidate.isCollapsed);\n                }\n            }\n        }\n    }\n    UpdateAtticFromUi() {\n        this.debug().FuncStart(this.UpdateAtticFromUi.name);\n        let currentSettings = this.AtticMan().CurrentSettings();\n        let currentVal = document.querySelector(this.Const().Selector.XS.iCBoxdSettingsShowDebugData).checked;\n        this.debug().LogVal('currentVal', currentVal.toString());\n        currentSettings.DebugSettings.ShowDebugData = currentVal;\n        this.AtticMan().StoreSettings(currentSettings);\n        this.RefreshUi();\n        this.debug().FuncEnd(this.UpdateAtticFromUi.name);\n    }\n    SelectChanged() {\n        this.debug().FuncStart(this.SelectChanged.name);\n        this.__selectSnapshotIndex = this.__getSelectElem().selectedIndex;\n        this.debug().Log('new index :' + this.__selectSnapshotIndex);\n        this.RefreshUi();\n        this.debug().FuncEnd(this.SelectChanged.name);\n    }\n    __GetCancelButton() {\n        return document.getElementById(this.Const().ElemId.Hs.BtnCancel);\n    }\n    SetCancelFlag() {\n        this.OperationCancelled = true;\n        var btn = this.__GetCancelButton();\n        if (btn) {\n            btn.classList.add('red');\n        }\n    }\n    ClearCancelFlag() {\n        var btn = this.__GetCancelButton();\n        if (btn) {\n            btn.classList.remove('red');\n        }\n        this.UiMan().OperationCancelled = false;\n    }\n    __refreshSettings() {\n        this.debug().FuncStart(this.__refreshSettings.name);\n        let debugFieldSet = window.document.querySelector(this.Const().Selector.XS.IdFieldSetDebug);\n        let currentSettings = this.AtticMan().CurrentSettings();\n        if (currentSettings) {\n            if (debugFieldSet) {\n                let newDisplay = this.AtticMan().CurrentSettings().DebugSettings.ShowDebugData ? '' : 'none';\n                debugFieldSet.style.display = newDisplay;\n            }\n            let checkBoxShowDebug = window.document.querySelector(this.Const().Selector.XS.iCBoxdSettingsShowDebugData);\n            if (checkBoxShowDebug) {\n                this.debug().LogVal('before', checkBoxShowDebug.checked.toString());\n                checkBoxShowDebug.checked = currentSettings.DebugSettings.ShowDebugData;\n                this.debug().LogVal('after', checkBoxShowDebug.checked.toString());\n            }\n            else {\n                this.debug().Error(this.RefreshUi.name, 'no checkbox found');\n            }\n        }\n        else {\n            this.debug().Error(this.RefreshUi.name, 'no settings found');\n        }\n        this.debug().FuncEnd(this.__refreshSettings.name);\n    }\n    RefreshUi() {\n        this.debug().FuncStart(this.__drawCorrectNicknameInUI.name);\n        this.__populateStateSel();\n        this.__drawCorrectNicknameInUI();\n        this.__refreshSettings();\n        this.RestoreAccordianStates();\n        this.debug().FuncEnd(this.__drawCorrectNicknameInUI.name);\n    }\n    __drawCorrectNicknameInUI() {\n        this.debug().FuncStart(this.__drawCorrectNicknameInUI.name);\n        var targetId = this.UiMan().GetIdOfSelectWindowSnapshot();\n        if (targetId) {\n            this.debug().Log('targetId : ' + targetId.asString);\n            var storageValue = this.AtticMan().GetFromStorageById(targetId);\n            if (storageValue) {\n                var inputElem = window.document.getElementById(this.Const().ElemId.InputNickname);\n                if (inputElem) {\n                    inputElem.value = storageValue.NickName;\n                }\n            }\n        }\n        this.debug().FuncEnd(this.__drawCorrectNicknameInUI.name);\n    }\n    GetValueInNickname() {\n        var toReturn = '';\n        toReturn = window.document.getElementById(this.Const().ElemId.InputNickname).value;\n        return toReturn;\n    }\n    __getSelectElem() {\n        return window.document.getElementById(this.Const().ElemId.Hs.SelStateSnapShot);\n    }\n    GetIdOfSelectWindowSnapshot() {\n        this.debug().FuncStart(this.GetIdOfSelectWindowSnapshot.name);\n        var targetSel = this.__getSelectElem();\n        var toReturn = null;\n        if (targetSel) {\n            var temp = targetSel.options[this.__selectSnapshotIndex].value;\n            toReturn = this.GuidMan().ParseGuid(temp);\n        }\n        this.debug().FuncEnd(this.GetIdOfSelectWindowSnapshot.name, 'idOfSelect: ' + toReturn.asString);\n        return toReturn;\n    }\n    __populateStateSel() {\n        this.debug().FuncStart(this.__populateStateSel.name, this.__selectSnapshotIndex.toString());\n        var targetSel = this.__getSelectElem();\n        if (targetSel) {\n            var header = window.document.createElement('optgroup');\n            header.label = this.Utilites().SelectHeaderStr();\n            var snapShots = this.AtticMan().GetAllStorageAsIDataOneWindow();\n            if (snapShots && snapShots.length > 0) {\n                targetSel.options.length = 0;\n                this.debug().Log('targetSel.options.length : ' + targetSel.options.length);\n                for (var idx = 0; idx < snapShots.length; idx++) {\n                    var data = snapShots[idx];\n                    var el = window.document.createElement('option');\n                    el.innerHTML = this.Xyyz.Utilities.TimeNicknameFavStr(data);\n                    el.value = data.Id.asString;\n                    if (idx === this.__selectSnapshotIndex) {\n                        el.selected = true;\n                    }\n                    header.appendChild(el);\n                }\n            }\n            targetSel.appendChild(header);\n        }\n        this.debug().FuncEnd(this.__populateStateSel.name);\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Managers/UiManager.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Promises/PromiseChainQuickPublish.js":
/*!*******************************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Promises/PromiseChainQuickPublish.js ***!
  \*******************************************************************************/
/*! exports provided: PromiseChainQuickPublish */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PromiseChainQuickPublish\", function() { return PromiseChainQuickPublish; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nclass PromiseChainQuickPublish extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        super(xyyz);\n    }\n    __debugDataPublishChain(dataPublishChain, nickname) {\n        this.debug().FuncStart(this.__debugDataPublishChain.name, nickname);\n        this.debug().LogVal('docToPublish', this.debug().IsNullOrUndefined(dataPublishChain.docToPublish));\n        this.debug().LogVal('jqIframe', this.debug().IsNullOrUndefined(dataPublishChain.jqIframe) + ' ' + (dataPublishChain.jqIframe ? dataPublishChain.jqIframe.IframeElem.src : ''));\n        this.debug().LogVal('Iframe0blueIframe', this.debug().IsNullOrUndefined(dataPublishChain.Iframe0Blue) + ' ' + (dataPublishChain.Iframe0Blue ? dataPublishChain.Iframe0Blue.IframeElem.src : ''));\n        this.debug().LogVal('messageDialogIframeRed', this.debug().IsNullOrUndefined(dataPublishChain.messageDialogIframeRed) + ' ' + (dataPublishChain.messageDialogIframeRed ? dataPublishChain.messageDialogIframeRed.IframeElem.src : ''));\n        this.debug().FuncEnd(this.__debugDataPublishChain.name);\n        return dataPublishChain;\n    }\n    PublishCE(docToPublish) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.PublishCE.name);\n            var dataPublishChain = {\n                docToPublish: docToPublish,\n                TopLevelDoc: this.PageDataMan().TopLevelWindow().DataDocSelf,\n                Iframe0Blue: null,\n                jqIframe: null,\n                messageDialogIframeRed: null\n            };\n            yield this.PromiseOneStep().ClickPublishOnNav(dataPublishChain)\n                .then((dataPublishChain) => this.PromiseOneStep().ClickMenuButtonPublishDropDown(dataPublishChain))\n                .then((dataPublishChain) => this.__debugDataPublishChain(dataPublishChain, 'post ClickMenuButtonPublishDropDown'))\n                .then((dataPublishChain) => this.PromiseOneStep().ClickMenuDropDownPublishItem(dataPublishChain))\n                .then((dataPublishChain) => this.__debugDataPublishChain(dataPublishChain, 'post MenuDropDownPublishItem'))\n                .then((dataPublishChain) => this.PromiseOneStep().GetThePublishItemDialog(dataPublishChain))\n                .then((dataPublishChain) => this.__debugDataPublishChain(dataPublishChain, 'post PublishItemDialog'))\n                .then((dataPublishChain) => this.GetDialogIframe0Blue(dataPublishChain))\n                .then((dataPublishChain) => this.__WaitForAndClickPublishNextButton(dataPublishChain))\n                .then((dataPublishChain) => this.GetMessageDialog(dataPublishChain))\n                .then((dataPublishChain) => this.__waitForAndClickOk(dataPublishChain))\n                .then((dataPublishChain) => this.__waitForAndClickClose(dataPublishChain))\n                .catch(ex => {\n                this.debug().Error(this.PublishCE.name, ex);\n            });\n            this.debug().FuncEnd(this.PublishCE.name);\n        });\n    }\n    __waitForAndClickClose(dataPublishChain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.PromiseGen().WaitForAndReturnFoundElem(dataPublishChain.Iframe0Blue.ContentDoc, this.Const().Selector.SC.Publish.SettingsHidden)\n                .then(() => __awaiter(this, void 0, void 0, function* () {\n                yield this.PromiseGen().WaitForAndReturnFoundElem(dataPublishChain.Iframe0Blue.ContentDoc, this.Const().Selector.SC.Publish.TheItemHasBeenPublished, this.Const().IterHelper.MaxCount.OverridePublishing);\n            }))\n                .then(() => __awaiter(this, void 0, void 0, function* () {\n                yield this.PromiseGen().WaitForThenClick(this.Const().Selector.SC.Cancel, dataPublishChain.Iframe0Blue.ContentDoc);\n            }));\n            return dataPublishChain;\n        });\n    }\n    __waitForAndClickOk(dataPublishChain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.PromiseGen().WaitForThenClick(this.Const().Selector.SC.Ok, dataPublishChain.messageDialogIframeRed.ContentDoc);\n            return dataPublishChain;\n        });\n    }\n    __WaitForAndClickPublishNextButton(dataPublishChain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.PromiseGen().WaitForThenClick(this.Const().Selector.SC.NextButton, dataPublishChain.Iframe0Blue.ContentDoc);\n            return dataPublishChain;\n        });\n    }\n    GetMessageDialog(dataPublishChain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            dataPublishChain.messageDialogIframeRed = yield this.PromiseGen().WaitForAndReturnReadyIframe(dataPublishChain.jqIframe.ContentDoc, this.Const().Selector.SC.ContentIFrame1, 'iframeRed');\n            return dataPublishChain;\n        });\n    }\n    GetDialogIframe0Blue(dataPublishChain = null) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.GetDialogIframe0Blue.name);\n            dataPublishChain.Iframe0Blue = yield this.PromiseGen().WaitForAndReturnReadyIframe(dataPublishChain.jqIframe.ContentDoc, this.Const().Selector.SC.ContentIframe0, 'Iframe0Blue');\n            this.debug().DebugDataOneIframe(dataPublishChain.Iframe0Blue);\n            this.debug().FuncEnd(this.GetDialogIframe0Blue.name);\n            return dataPublishChain;\n        });\n    }\n    __waitForThenFunc(selector, targetDoc, dataPublishChain, optionFunc) {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.__waitForThenFunc.name, selector);\n            this.debug().DebugIDataDoc(targetDoc);\n            var found = null;\n            var found = yield this.PromiseGen().WaitForAndReturnFoundElem(targetDoc, selector);\n            if (found) {\n                this.debug().Log('found');\n                if (optionFunc) {\n                    this.debug().Log('executing func');\n                    dataPublishChain = yield optionFunc(found, dataPublishChain);\n                }\n                this.__debugDataPublishChain(dataPublishChain, this.__waitForThenFunc.name);\n                this.debug().FuncEnd(this.__waitForThenFunc.name, selector);\n                resolve(dataPublishChain);\n            }\n            else {\n                reject('not found');\n            }\n        }));\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Promises/PromiseChainQuickPublish.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Promises/PromiseChainRestoreDesktop.js":
/*!*********************************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Promises/PromiseChainRestoreDesktop.js ***!
  \*********************************************************************************/
/*! exports provided: PromiseChainRestoreDesktop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PromiseChainRestoreDesktop\", function() { return PromiseChainRestoreDesktop; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nclass PromiseChainRestoreDesktop extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        xyyz.debug.FuncStart(PromiseChainRestoreDesktop.name);\n        super(xyyz);\n        xyyz.debug.FuncEnd(PromiseChainRestoreDesktop.name);\n    }\n    __waitForAndClickRedStartButtonPromise(promiseBucket) {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.__waitForAndClickRedStartButtonPromise.name);\n            if (this.MiscMan().NotNullOrUndefined([promiseBucket, promiseBucket.targetDoc], this.__waitForAndClickRedStartButtonPromise.name)) {\n                yield this.PromiseGen().RaceWaitAndClick(this.Const().Selector.SC.scStartButton, promiseBucket.targetDoc)\n                    .then(() => resolve(promiseBucket))\n                    .catch(ex => {\n                    this.debug().Error(this.__waitForAndClickRedStartButtonPromise.name, ex);\n                    reject();\n                });\n            }\n            else {\n                reject();\n            }\n            this.debug().FuncEnd(this.__waitForAndClickRedStartButtonPromise.name);\n        }));\n    }\n    __waitForIframeReady(promiseBucket) {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.__waitForIframeReady.name, 'promiseBucket not null: ' + (promiseBucket !== null));\n            this.debug().PromiseBucketDebug(promiseBucket, this.__waitForIframeReady.name);\n            var success = yield this.PromiseGen().WaitForReadyIframe(promiseBucket.NewIframe);\n            if (success) {\n                this.debug().Log('resolved! : ');\n                promiseBucket.NewIframe.ContentDoc.Document = promiseBucket.NewIframe.IframeElem.contentDocument;\n                this.debug().DebugDataOneIframe(promiseBucket.NewIframe);\n                resolve(promiseBucket);\n            }\n            else {\n                this.debug().Log('rejected ! : ');\n                reject(this.__waitForIframeReady.name);\n            }\n            this.debug().FuncEnd(this.__waitForIframeReady.name);\n        }));\n    }\n    __waitForIframeCountDiffPromise(promiseBucket) {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.__waitForIframeCountDiffPromise.name);\n            this.debug().MarkerA();\n            var success = yield this.DesktopMan().WaitForIframeCountDiffWorker(promiseBucket.IFramesbefore, promiseBucket.targetWindow);\n            this.debug().MarkerB();\n            if (success) {\n                this.debug().MarkerC();\n                promiseBucket.NewIframe = success;\n                this.debug().DebugDataOneIframe(promiseBucket.NewIframe);\n                resolve(promiseBucket);\n            }\n            else {\n                reject(this.__waitForIframeCountDiffPromise.name);\n            }\n            this.debug().FuncEnd(this.__waitForIframeCountDiffPromise.name);\n        }));\n    }\n    __waitForAndThenClickCEFromMenuPromise(promiseBucket) {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            yield this.PromiseGen().WaitForThenClick(this.Const().Selector.SC.StartMenuLeftOption, promiseBucket.targetWindow.DataDocSelf)\n                .then(() => { resolve(promiseBucket); })\n                .catch((ex) => { reject(this.__waitForAndThenClickCEFromMenuPromise.name); });\n        }));\n    }\n    __restoreDataToOneIframe(promiseBucket) {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.__restoreDataToOneIframe.name);\n            this.debug().DebugDataOneIframe(promiseBucket.NewIframe);\n            var success = yield this.DesktopMan().RestoreDataToOneIframeWorker(promiseBucket.oneCEdata, promiseBucket.NewIframe);\n            if (success) {\n                resolve(promiseBucket);\n            }\n            else {\n                reject(this.__restoreDataToOneIframe.name);\n            }\n            this.debug().FuncEnd(this.__restoreDataToOneIframe.name);\n        }));\n    }\n    RunOneChain(targetWindow, dataToRestore) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.RunOneChain.name);\n            if (this.MiscMan().NotNullOrUndefined([targetWindow, dataToRestore], this.RunOneChain.name)) {\n                var allIframeData = this.DesktopMan().GetAllLiveIframeData(targetWindow);\n                var dataBucket = {\n                    targetWindow: targetWindow,\n                    targetDoc: targetWindow.DataDocSelf,\n                    IFramesbefore: allIframeData,\n                    oneCEdata: dataToRestore,\n                    NewIframe: null,\n                    LastChainLinkSuccessful: false,\n                };\n                yield this.__waitForAndClickRedStartButtonPromise(dataBucket)\n                    .then(dataBucket => this.__waitForAndThenClickCEFromMenuPromise(dataBucket))\n                    .then(dataBucket => this.__waitForIframeCountDiffPromise(dataBucket))\n                    .then(dataBucket => this.__waitForIframeReady(dataBucket))\n                    .then(dataBucket => this.__restoreDataToOneIframe(dataBucket))\n                    .catch(ex => {\n                    this.debug().Error(this.RunOneChain.name, ex);\n                });\n                this.debug().FuncEnd(this.RunOneChain.name);\n            }\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Promises/PromiseChainRestoreDesktop.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Promises/PromiseGeneric.js":
/*!*********************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Promises/PromiseGeneric.js ***!
  \*********************************************************************/
/*! exports provided: PromiseGeneric */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PromiseGeneric\", function() { return PromiseGeneric; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n/* harmony import */ var _Classes_IterationHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Classes/IterationHelper */ \"./dist.TsTranspiled/src/jstoInject/Classes/IterationHelper.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nclass PromiseGeneric extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        xyyz.debug.FuncStart(PromiseGeneric.name);\n        super(xyyz);\n        xyyz.debug.FuncEnd(PromiseGeneric.name);\n    }\n    WaitForReadyIframe(dataOneIframe) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                this.debug().FuncStart(this.WaitForReadyIframe.name, dataOneIframe.Nickname + ' ' + dataOneIframe.Id.asShort);\n                this.debug().DebugDataOneIframe(dataOneIframe);\n                var iterationJr = new _Classes_IterationHelper__WEBPACK_IMPORTED_MODULE_1__[\"IterationHelper\"](this.Xyyz, 10, this.WaitForReadyIframe.name);\n                var isReady = false;\n                this.debug().MarkerA();\n                while (iterationJr.DecrementAndKeepGoing() && !isReady) {\n                    this.debug().MarkerB();\n                    var currentReadyState = dataOneIframe.IframeElem.contentDocument.readyState.toString();\n                    var isReadyStateComplete = currentReadyState === 'complete';\n                    this.debug().Log('currentReadyState : ' + currentReadyState);\n                    ;\n                    this.debug().MarkerC();\n                    this.debug().Log('isReadyStateComplete: ' + isReadyStateComplete);\n                    if (isReadyStateComplete) {\n                        this.debug().Log('toReturn A is true');\n                        isReady = true;\n                        dataOneIframe.ContentDoc = this.Utilites().DataOneContentDocFactoryFromIframe(dataOneIframe.IframeElem, dataOneIframe.ContentDoc.ParentDoc, dataOneIframe.Nickname);\n                    }\n                    else {\n                        yield iterationJr.Wait();\n                    }\n                }\n                this.debug().DebugDataOneIframe(dataOneIframe);\n                this.debug().FuncEnd(this.WaitForReadyIframe.name, dataOneIframe.Nickname + ' : ' + currentReadyState + ' is ready: ' + isReady.toString());\n                ;\n                resolve(dataOneIframe);\n            }));\n        });\n    }\n    WaitForAndReturnReadyIframe(targetDoc, selector, nickname) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                var iframeData;\n                yield this.WaitForAndReturnFoundElem(targetDoc, selector)\n                    .then((foundElem) => __awaiter(this, void 0, void 0, function* () {\n                    if (foundElem) {\n                        iframeData = this.Utilites().DateOneIframeFactory(foundElem, targetDoc, nickname);\n                        this.debug().DebugDataOneIframe(iframeData);\n                        return iframeData;\n                    }\n                }))\n                    .then((iframeData) => __awaiter(this, void 0, void 0, function* () {\n                    iframeData = yield this.PromiseGen().WaitForReadyIframe(iframeData);\n                    resolve(iframeData);\n                }));\n            }));\n        });\n    }\n    WaitForAndReturnFoundElem(targetDoc, selector, overrideIterCount = 8) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.debug().FuncStart(this.WaitForAndReturnFoundElem.name, 'selector: ' + selector + ' nickname: ' + targetDoc.Nickname);\n                var found = null;\n                var iterationJr = new _Classes_IterationHelper__WEBPACK_IMPORTED_MODULE_1__[\"IterationHelper\"](this.Xyyz, overrideIterCount, this.WaitForAndReturnFoundElem.name);\n                while (!found && iterationJr.DecrementAndKeepGoing()) {\n                    this.debug().LogVal('targetDoc.Document', targetDoc.Document.toString());\n                    this.debug().LogVal('targetDoc.Document.location', targetDoc.Document.location.toString());\n                    this.debug().LogVal('targetDoc.Document.location.href', targetDoc.Document.location.href);\n                    found = targetDoc.Document.querySelector(selector);\n                    if (found) {\n                        this.debug().Log('found');\n                        this.debug().LogVal('found.style.display', found.style.display);\n                        this.debug().FuncEnd(this.WaitForAndReturnFoundElem.name, selector + targetDoc.Document.location.href);\n                        resolve(found);\n                    }\n                    else {\n                        yield iterationJr.Wait();\n                    }\n                }\n                if (!found && iterationJr.IsExhausted) {\n                    this.debug().FuncEnd(this.WaitForAndReturnFoundElem.name, selector + targetDoc.Document.location.href);\n                    reject('exhausted');\n                }\n            }));\n        });\n    }\n    WaitForPageReadyNative(targetWindow) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.debug().FuncStart(this.WaitForPageReadyNative.name);\n                let iterationJr = new _Classes_IterationHelper__WEBPACK_IMPORTED_MODULE_1__[\"IterationHelper\"](this.Xyyz, 5, this.WaitForThenClick.name);\n                var loaded = false;\n                if (this.MiscMan().NotNullOrUndefined(targetWindow, this.WaitForPageReadyNative.name + ' document')) {\n                }\n            }));\n        });\n    }\n    WaitForAndClickWithPayload(selector, targetDoc, payload) {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.WaitForAndClickWithPayload.name, selector);\n            yield this.PromiseGen().WaitForThenClick(selector, targetDoc)\n                .then(() => resolve(payload))\n                .catch(ex => {\n                this.debug().Error(this.WaitForAndClickWithPayload.name, ex);\n                reject(ex);\n            });\n        }));\n    }\n    WaitForPageReady(targetWindow) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.debug().FuncStart(this.WaitForPageReady.name);\n                this.debug().NotNullCheck('toReturn', targetWindow);\n                this.debug().NotNullCheck('toReturn', targetWindow.DataDocSelf);\n                this.debug().NotNullCheck('toReturn', targetWindow.DataDocSelf.Document);\n                this.debug().NotNullCheck('toReturn', targetWindow.DataDocSelf.Document.location);\n                this.debug().NotNullCheck('toReturn', targetWindow.DataDocSelf.Document.location.href);\n                this.debug().LogVal('targetWindow.DataDocSelf.Document.location.href', targetWindow.DataDocSelf.Document.location.href);\n                if (targetWindow) {\n                    yield this.WaitForPageReadyNative(targetWindow)\n                        .then(() => resolve())\n                        .catch((ex) => {\n                        reject(ex);\n                    });\n                }\n                this.debug().FuncEnd(this.WaitForPageReady.name);\n            }));\n        });\n    }\n    RaceWaitAndClick(selector, targetDoc, resolveFn = null) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.debug().FuncStart(this.RaceWaitAndClick.name);\n            var prom1 = this.WaitForThenClick(selector.sc920, targetDoc, resolveFn);\n            var prom2 = this.WaitForThenClick(selector.sc820, targetDoc, resolveFn);\n            this.debug().FuncEnd(this.RaceWaitAndClick.name);\n            return yield Promise.race([prom1, prom2]);\n        });\n    }\n    WaitForThenClick(selector, targetDoc, resolveFn = null) {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            if (targetDoc) {\n                this.debug().FuncStart(this.WaitForThenClick.name, selector);\n                var found = null;\n                var iterationJr = new _Classes_IterationHelper__WEBPACK_IMPORTED_MODULE_1__[\"IterationHelper\"](this.Xyyz, 10, this.WaitForThenClick.name);\n                while (!found && iterationJr.DecrementAndKeepGoing() && !this.UiMan().OperationCancelled) {\n                    found = targetDoc.Document.querySelector(selector);\n                    if (found) {\n                        this.debug().Log('found and clicking');\n                        found.click();\n                        this.debug().FuncEnd(this.WaitForThenClick.name, selector);\n                        if (resolveFn) {\n                            resolveFn();\n                        }\n                        resolve();\n                    }\n                    else {\n                        yield iterationJr.Wait();\n                    }\n                }\n            }\n            else {\n                reject();\n            }\n            this.debug().FuncEnd(this.WaitForThenClick.name, selector);\n            if (!found && iterationJr.IsExhausted) {\n                reject('exhausted');\n            }\n        }));\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Promises/PromiseGeneric.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/Promises/PromiseOneStep.js":
/*!*********************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/Promises/PromiseOneStep.js ***!
  \*********************************************************************/
/*! exports provided: PromiseOneStep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PromiseOneStep\", function() { return PromiseOneStep; });\n/* harmony import */ var _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_first/_ManagerBase */ \"./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js\");\n/* harmony import */ var _PromiseGeneric__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PromiseGeneric */ \"./dist.TsTranspiled/src/jstoInject/Promises/PromiseGeneric.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nclass PromiseOneStep extends _first_ManagerBase__WEBPACK_IMPORTED_MODULE_0__[\"ManagerBase\"] {\n    constructor(xyyz) {\n        xyyz.debug.FuncStart(_PromiseGeneric__WEBPACK_IMPORTED_MODULE_1__[\"PromiseGeneric\"].name);\n        super(xyyz);\n        xyyz.debug.FuncEnd(_PromiseGeneric__WEBPACK_IMPORTED_MODULE_1__[\"PromiseGeneric\"].name);\n    }\n    ClickPublishOnNav(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.PromiseGen().WaitForThenClick(this.Const().Selector.SC.NavPublishStrip, payload.docToPublish);\n            return payload;\n        });\n    }\n    ClickMenuButtonPublishDropDown(payload = null) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.PromiseGen().WaitForThenClick(this.Const().Selector.SC.MenuButtonPublish, payload.docToPublish);\n            return payload;\n        });\n    }\n    ClickMenuDropDownPublishItem(payload = null) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.PromiseGen().WaitForAndClickWithPayload(this.Const().Selector.SC.MenuDropDownPublishItem, payload.docToPublish, payload);\n        });\n    }\n    GetThePublishItemDialog(dataPublishChain = null) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.PromiseGen().WaitForAndReturnFoundElem(dataPublishChain.TopLevelDoc, this.Const().Selector.SC.JqueryModalDialogsFrame)\n                .then((found) => {\n                dataPublishChain.jqIframe = this.Utilites().DateOneIframeFactory(found, dataPublishChain.docToPublish.ParentDoc, 'jqIframe');\n                return dataPublishChain;\n            })\n                .then((payload) => __awaiter(this, void 0, void 0, function* () {\n                yield this.PromiseGen().WaitForReadyIframe(payload.jqIframe);\n                dataPublishChain = payload;\n            }));\n            return dataPublishChain;\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/Promises/PromiseOneStep.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js":
/*!*****************************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js ***!
  \*****************************************************************/
/*! exports provided: ManagerBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ManagerBase\", function() { return ManagerBase; });\nclass ManagerBase {\n    constructor(xyyz) {\n        this.Xyyz = xyyz;\n    }\n    AtticMan() { return this.Xyyz.AtticMan; }\n    Const() { return this.Xyyz.Const; }\n    debug() { return this.Xyyz.debug; }\n    DesktopMan() { return this.Xyyz.OneDesktopMan; }\n    GuidMan() { return this.Xyyz.GuidMan; }\n    locMan() { return this.Xyyz.LocationMan; }\n    OneCEMan() { return this.Xyyz.OneCEMan; }\n    OneWinMan() { return this.Xyyz.OneWindowMan; }\n    PageDataMan() { return this.Xyyz.PageDataMan; }\n    UiMan() { return this.Xyyz.UiMan; }\n    Utilites() { return this.Xyyz.Utilities; }\n    MiscMan() { return this.Xyyz.MiscMan; }\n    PromiseGen() { return this.Xyyz.PromiseGeneric; }\n    PromiseOneStep() { return this.Xyyz.PromiseOneStep; }\n    ScUiMan() { return this.Xyyz.SitecoreUiMan; }\n}\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/_first/_ManagerBase.js?");

/***/ }),

/***/ "./dist.TsTranspiled/src/jstoInject/zLast.js":
/*!***************************************************!*\
  !*** ./dist.TsTranspiled/src/jstoInject/zLast.js ***!
  \***************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Managers_SitecoreUiManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Managers/SitecoreUiManager */ \"./dist.TsTranspiled/src/jstoInject/Managers/SitecoreUiManager.js\");\n/* harmony import */ var _Managers_Hub__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Managers/Hub */ \"./dist.TsTranspiled/src/jstoInject/Managers/Hub.js\");\n/* harmony import */ var _Classes_debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Classes/debug */ \"./dist.TsTranspiled/src/jstoInject/Classes/debug.js\");\n\n\n\nvar xyyz = xyyz || {};\nlet debug = new _Classes_debug__WEBPACK_IMPORTED_MODULE_2__[\"Debug\"](window.opener);\nlet SitecoreUiMan = new _Managers_SitecoreUiManager__WEBPACK_IMPORTED_MODULE_0__[\"SitecoreUiManager\"](debug);\nxyyz.HubObj = new _Managers_Hub__WEBPACK_IMPORTED_MODULE_1__[\"Hub\"](SitecoreUiMan, debug);\n\n\n//# sourceURL=webpack:///./dist.TsTranspiled/src/jstoInject/zLast.js?");

/***/ })

/******/ });