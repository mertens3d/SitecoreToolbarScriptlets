(self["webpackChunksitecoretoolbarscriptlets"] = self["webpackChunksitecoretoolbarscriptlets"] || []).push([[437],{

/***/ 5779:
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _Shared_scripts_Agents_DeepHotKey_DeepHotKeyAgent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8443);
/* harmony import */ var _Shared_scripts_Classes_CoreFactory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2474);
/* harmony import */ var _DOMJacket_scripts_UrlJacket__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7396);



var ContentAllEntry = (function () {
    function ContentAllEntry() {
    }
    ContentAllEntry.prototype.StartUpContent = function () {
        var commonCore = _Shared_scripts_Classes_CoreFactory__WEBPACK_IMPORTED_MODULE_1__/* .CoreFactory.BuildCommonCore */ .A.BuildCommonCore();
        var urlJacket = new _DOMJacket_scripts_UrlJacket__WEBPACK_IMPORTED_MODULE_2__/* .UrlJacket */ .d(commonCore, document.URL);
        this.DeepHotKeyAgent = new _Shared_scripts_Agents_DeepHotKey_DeepHotKeyAgent__WEBPACK_IMPORTED_MODULE_0__/* .DeepHotKeyAgent */ .$(commonCore, urlJacket);
    };
    return ContentAllEntry;
}());
if (window.top != window.self) {
    var contentAllEntry = new ContentAllEntry();
    contentAllEntry.StartUpContent();
}


/***/ }),

/***/ 7396:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => /* binding */ UrlJacket
/* harmony export */ });
/* harmony import */ var _Shared_scripts_Enums_QueryStrKey__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(474);
/* harmony import */ var _Shared_scripts_SharedConst__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5077);
/* harmony import */ var _Shared_scripts_CommonCoreBase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6679);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var UrlJacket = (function (_super) {
    __extends(UrlJacket, _super);
    function UrlJacket(commonCore, url) {
        var _this = _super.call(this, commonCore) || this;
        _this.Logger.CTORStart(UrlJacket.name);
        _this.OriginalURL = url;
        _this.ErrorHand.ThrowIfNullOrUndefined(UrlJacket.name, url);
        _this.Init_GenericUrlAgent();
        _this.Logger.CTOREnd(UrlJacket.name);
        return _this;
    }
    UrlJacket.prototype.Init_GenericUrlAgent = function () {
        try {
            this.SetFromHref(this.OriginalURL);
        }
        catch (err) {
            this.ErrorHand.HandleFatalError(this.Init_GenericUrlAgent.name, err);
        }
    };
    UrlJacket.prototype.GetUrlParts = function () {
        return this.UrlParts;
    };
    UrlJacket.prototype.GetOriginalURL = function () {
        return this.OriginalURL;
    };
    UrlJacket.prototype.QueryStringHasKey = function (key) {
        var toReturn = false;
        if (key !== null) {
            var keyAsStr = _Shared_scripts_Enums_QueryStrKey__WEBPACK_IMPORTED_MODULE_0__/* .QueryStrKey */ .a[key];
            if (keyAsStr) {
                toReturn = this.UrlParts && this.UrlParts.UrlSearchParameters && this.UrlParts.UrlSearchParameters.has(keyAsStr);
            }
        }
        return toReturn;
    };
    UrlJacket.prototype.GetQueryStringValueByKey = function (key) {
        var toReturn = '';
        if (this.QueryStringHasKey(key)) {
            var keyAsStr = _Shared_scripts_Enums_QueryStrKey__WEBPACK_IMPORTED_MODULE_0__/* .QueryStrKey */ .a[key];
            toReturn = this.UrlParts.UrlSearchParameters.get(keyAsStr);
        }
        return toReturn;
    };
    UrlJacket.prototype.SetParameterValueByKey = function (key, newValue) {
        if (this.UrlParts) {
            this.UrlParts.UrlSearchParameters.set(_Shared_scripts_Enums_QueryStrKey__WEBPACK_IMPORTED_MODULE_0__/* .QueryStrKey */ .a[key], newValue);
        }
        else {
            this.ErrorHand.HandleFatalError(this.SetParameterValueByKey.name, 'No URLParts ' + _Shared_scripts_Enums_QueryStrKey__WEBPACK_IMPORTED_MODULE_0__/* .QueryStrKey */ .a[key] + ' ' + newValue);
        }
    };
    UrlJacket.prototype.SetFilePath = function (newFilePath) {
        this.UrlParts.FilePath = newFilePath;
    };
    UrlJacket.prototype.SetFromHref = function (href) {
        var parser = document.createElement('a');
        parser.href = href;
        this.UrlParts = {
            OriginalRaw: href,
            Protocol: parser.protocol,
            HostAndPort: parser.host,
            UrlSearchParameters: new URLSearchParams(parser.search),
            FilePath: parser.pathname,
            Anchor: parser.hash,
            HasError: false,
        };
    };
    UrlJacket.prototype.BuildFullUrlFromParts = function () {
        var toReturn = {
            AbsUrl: '',
            RelativeUrl: '',
        };
        if (this.UrlParts) {
            if (this.UrlParts && !this.UrlParts.HasError) {
                toReturn.AbsUrl = this.UrlParts.Protocol + '//' + this.UrlParts.HostAndPort;
                toReturn.RelativeUrl = '';
                if (this.UrlParts.FilePath.length > 0) {
                    toReturn.AbsUrl += this.UrlParts.FilePath;
                    toReturn.RelativeUrl += this.UrlParts.FilePath;
                }
                if (this.UrlParts.UrlSearchParameters) {
                    toReturn.AbsUrl += '?' + this.UrlParts.UrlSearchParameters.toString();
                    toReturn.RelativeUrl += '?' + this.UrlParts.UrlSearchParameters.toString();
                }
                if (this.UrlParts.Anchor.length > 0) {
                    toReturn.AbsUrl += '#' + this.UrlParts.Anchor;
                    toReturn.RelativeUrl += '#' + this.UrlParts.Anchor;
                }
            }
        }
        else {
            this.ErrorHand.HandleFatalError(this.BuildFullUrlFromParts.name, 'Null UrlParts');
        }
        return toReturn;
    };
    UrlJacket.prototype.ExtractParameters = function (url) {
        var toReturn = [];
        if (url) {
            var splitStr = url.split('?');
            if (splitStr.length > 1) {
                var paramString = splitStr[1].replace(_Shared_scripts_SharedConst__WEBPACK_IMPORTED_MODULE_1__/* .SharedConst.Const.Regex.QueryStrSeparatorQuest */ .v.Const.Regex.QueryStrSeparatorQuest, '');
                var pairStr = paramString.split('&');
                if (pairStr && pairStr.length > 0) {
                    for (var idx = 0; idx < pairStr.length; idx++) {
                        var oneParamAr = pairStr[idx].split('=');
                        var paramPair = {
                            Key: '',
                            value: ''
                        };
                        if (oneParamAr) {
                            paramPair.Key = oneParamAr[0];
                            if (oneParamAr.length > 1) {
                                paramPair.value = oneParamAr[1];
                            }
                            toReturn.push(paramPair);
                        }
                    }
                }
            }
        }
        return toReturn;
    };
    return UrlJacket;
}(_Shared_scripts_CommonCoreBase__WEBPACK_IMPORTED_MODULE_2__/* ._CommonBase */ .a));



/***/ }),

/***/ 8443:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "$": () => /* binding */ DeepHotKeyAgent
});

// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/_CommonCoreBase.js
var _CommonCoreBase = __webpack_require__(6679);
// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Enums/70 - TypeDiscriminator.js
var _70_TypeDiscriminator = __webpack_require__(8162);
// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Events/_HindSiteEvent/HindeSiteEvent_Subject.js
var HindeSiteEvent_Subject = __webpack_require__(4697);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Events/KeyBoardComboEvent/KeyBoardComboEvent_Subject.js
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var KeyBoardComboEvent_Subject = (function (_super) {
    __extends(KeyBoardComboEvent_Subject, _super);
    function KeyBoardComboEvent_Subject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.TypeDiscriminator = _70_TypeDiscriminator/* TypeDiscriminator.KeyBoardComboEvent_Subject */.g.KeyBoardComboEvent_Subject;
        _this.ShowLogActions = true;
        return _this;
    }
    return KeyBoardComboEvent_Subject;
}(HindeSiteEvent_Subject/* HindeSiteEvent_Subject */.U));


// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/DOMJacket/scripts/KeyPressJacket.js
var KeyPressJacket_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var KeyPressJacket = (function (_super) {
    KeyPressJacket_extends(KeyPressJacket, _super);
    function KeyPressJacket(commoncore, keyPressCombosToListenFor) {
        var _this = _super.call(this, commoncore) || this;
        _this.KeyPressCombos = keyPressCombosToListenFor;
        _this.Instantiate();
        _this.WireEvents();
        return _this;
    }
    KeyPressJacket.prototype.Instantiate = function () {
        this.KeyBoardComboEvent_Subject = new KeyBoardComboEvent_Subject(this.CommonCore);
    };
    KeyPressJacket.prototype.WireEvents = function () {
        var _this = this;
        window.addEventListener('keyup', (function (event) { return _this.CallBackOnNativeKeyPress(event); }), false);
    };
    KeyPressJacket.prototype.CallBackOnNativeKeyPress = function (event) {
        var _this = this;
        var inComing = {
            IsShiftKey: false,
            IsAltKey: false,
            IsCtrlKey: false,
            Which: -1,
        };
        inComing.IsShiftKey = event.shiftKey;
        inComing.IsCtrlKey = event.ctrlKey;
        inComing.IsAltKey = event.altKey;
        inComing.Which = event.which;
        var matchingCombos = [];
        this.KeyPressCombos.forEach(function (userKeyPressCombo) {
            if ((inComing.Which === userKeyPressCombo.KeyWhich)
                && (inComing.IsCtrlKey === userKeyPressCombo.IsCtrlKey)
                && (inComing.IsAltKey === userKeyPressCombo.IsAltKey)
                && (inComing.IsShiftKey === userKeyPressCombo.IsShiftKey)) {
                matchingCombos.push(userKeyPressCombo.HotKeyCommandFlag);
            }
        });
        if (matchingCombos.length > 0) {
            this.Logger.LogImportant('call back native');
            matchingCombos.forEach(function (commandFlag) {
                var keyBoardComboEvent_Payload = {
                    ReqCommandMsgFlag: commandFlag
                };
                _this.KeyBoardComboEvent_Subject.NotifyObserversAsync(keyBoardComboEvent_Payload);
            });
        }
    };
    return KeyPressJacket;
}(_CommonCoreBase/* _CommonBase */.a));


// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Enums/10 - MessageFlag.js
var _10_MessageFlag = __webpack_require__(8979);
// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Events/_HindSiteEvent/HindSiteEvent_Observer.js
var HindSiteEvent_Observer = __webpack_require__(2005);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Events/KeyBoardComboEvent/KeyBoardComboEvent_Observer.js
var KeyBoardComboEvent_Observer_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var KeyBoardComboEvent_Observer = (function (_super) {
    KeyBoardComboEvent_Observer_extends(KeyBoardComboEvent_Observer, _super);
    function KeyBoardComboEvent_Observer(commonCore, callback) {
        return _super.call(this, commonCore, KeyBoardComboEvent_Observer.name, callback) || this;
    }
    return KeyBoardComboEvent_Observer;
}(HindSiteEvent_Observer/* HindSiteEvent_Observer */.z));


// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/SharedConst.js
var SharedConst = __webpack_require__(5077);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Agents/DeepHotKey/HotKeys.js

var HotKeys = (function () {
    function HotKeys() {
    }
    HotKeys.AllHotKeys = [
        { Friendly: 'Go Selected - Ctrl+Alt+G', IsAltKey: true, IsCtrlKey: true, IsShiftKey: false, HotKeyCommandFlag: _10_MessageFlag/* ReqCommandMsgFlag.ReqGoToSelected */.r.ReqGoToSelected, KeyWhich: 71 },
        { Friendly: 'Take Snap Shot - Ctrl+Alt+P', IsAltKey: true, IsCtrlKey: true, IsShiftKey: false, HotKeyCommandFlag: _10_MessageFlag/* ReqCommandMsgFlag.ReqTakeSnapShot */.r.ReqTakeSnapShot, KeyWhich: 80 },
        { Friendly: 'Presentation Details - Ctrl+Alt+D', IsAltKey: true, IsCtrlKey: true, IsShiftKey: false, HotKeyCommandFlag: _10_MessageFlag/* ReqCommandMsgFlag.OpenCERibbonPresentationDetails */.r.OpenCERibbonPresentationDetails, KeyWhich: 68 },
        { Friendly: 'Navigate Links - Ctrl+Alt+L', IsAltKey: true, IsCtrlKey: true, IsShiftKey: false, HotKeyCommandFlag: _10_MessageFlag/* ReqCommandMsgFlag.OpenCERibbonNavigateLinks */.r.OpenCERibbonNavigateLinks, KeyWhich: 76 },
        { Friendly: 'Toggle Raw Values - Ctrl+Alt+{ ([)', IsAltKey: true, IsCtrlKey: true, IsShiftKey: false, HotKeyCommandFlag: _10_MessageFlag/* ReqCommandMsgFlag.ReqToggleRawValues */.r.ReqToggleRawValues, KeyWhich: 219 },
        { Friendly: 'Navigate Back - Ctrl+Alt+Left Arrow,)', IsAltKey: true, IsCtrlKey: true, IsShiftKey: false, HotKeyCommandFlag: _10_MessageFlag/* ReqCommandMsgFlag.ReqNavigateBack */.r.ReqNavigateBack, KeyWhich: 37 },
        { Friendly: 'Navigate Forward - Ctrl+Alt+Right Arrow', IsAltKey: true, IsCtrlKey: true, IsShiftKey: false, HotKeyCommandFlag: _10_MessageFlag/* ReqCommandMsgFlag.ReqNavigateForward */.r.ReqNavigateForward, KeyWhich: 39 },
        { Friendly: 'Navigate Up - Ctrl+Alt+Up Arrow', IsAltKey: true, IsCtrlKey: true, IsShiftKey: false, HotKeyCommandFlag: _10_MessageFlag/* ReqCommandMsgFlag.ReqNavigateUp */.r.ReqNavigateUp, KeyWhich: 38 },
    ];
    return HotKeys;
}());


// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Events/HotKeyEvent/HotKeyEvent_Subject.js
var HotKeyEvent_Subject_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var HotKeyEvent_Subject = (function (_super) {
    HotKeyEvent_Subject_extends(HotKeyEvent_Subject, _super);
    function HotKeyEvent_Subject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.TypeDiscriminator = _70_TypeDiscriminator/* TypeDiscriminator.HotKeyEvent_Subject */.g.HotKeyEvent_Subject;
        _this.ShowLogActions = true;
        return _this;
    }
    return HotKeyEvent_Subject;
}(HindeSiteEvent_Subject/* HindeSiteEvent_Subject */.U));


// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Agents/DeepHotKey/DeepHotKeyAgent.js
var DeepHotKeyAgent_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};







var DeepHotKeyAgent = (function (_super) {
    DeepHotKeyAgent_extends(DeepHotKeyAgent, _super);
    function DeepHotKeyAgent(commonCore, urlJacket) {
        var _this = _super.call(this, commonCore) || this;
        _this.Logger.CTORStart(DeepHotKeyAgent.name);
        _this.UrlJacket = urlJacket;
        _this.Instantiate();
        _this.WireEvents();
        _this.Logger.CTOREnd(DeepHotKeyAgent.name);
        return _this;
    }
    DeepHotKeyAgent.prototype.Instantiate = function () {
        this.KeyPressJacket = new KeyPressJacket(this.CommonCore, HotKeys.AllHotKeys);
        this.KeyPressJacket_Observer = new KeyBoardComboEvent_Observer(this.CommonCore, this.CallBackOnKeyboardComboEvent.bind(this));
        this.HotKeyEvent_Subject = new HotKeyEvent_Subject(this.CommonCore);
    };
    DeepHotKeyAgent.prototype.WireEvents = function () {
        var _this = this;
        this.Logger.FuncStart(this.WireEvents.name, 'Is top? ' + (window.self === window.top).toString());
        this.KeyPressJacket.KeyBoardComboEvent_Subject.RegisterObserver(this.KeyPressJacket_Observer);
        window.addEventListener(SharedConst/* SharedConst.Const.KeyWords.Javascript.Events.Message */.v.Const.KeyWords.Javascript.Events.Message, (function (messageEvent) { return _this.CallBackOnMessageFromFrame(messageEvent); }));
        this.Logger.FuncEnd(this.WireEvents.name, 'Is top? ' + (window.self === window.top).toString());
    };
    DeepHotKeyAgent.prototype.CallBackOnMessageFromFrame = function (event) {
        console.log(this.CallBackOnMessageFromFrame.name);
        if (event && event.origin === this.GetDomain()) {
            var deepHotKeydata = event.data;
            if (deepHotKeydata) {
                var hotKeyPayload = {
                    ReqCommandMsgFlag: deepHotKeydata.ReqCommandMsgFlag,
                    SelectText: window.getSelection ? window.getSelection().toString() : '',
                };
                this.HotKeyEvent_Subject.NotifyObserversAsync(hotKeyPayload);
            }
            else {
                console.log('incorrect data');
            }
        }
        else {
            console.log('not a valid domain: ' + event.origin);
        }
    };
    DeepHotKeyAgent.prototype.CallBackOnKeyboardComboEvent = function (keyboardComboEvent_Payload) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.Logger.FuncStart(this.CallBackOnKeyboardComboEvent.name);
                this.Logger.LogVal('keyBoardComboEvent ', _10_MessageFlag/* ReqCommandMsgFlag */.r[keyboardComboEvent_Payload.ReqCommandMsgFlag]);
                this.HandleHotKeyPayload(keyboardComboEvent_Payload);
                this.Logger.FuncEnd(this.CallBackOnKeyboardComboEvent.name);
                return [2];
            });
        });
    };
    DeepHotKeyAgent.prototype.HandleTopWindow = function (hotKeyPayload) {
        this.Logger.LogImportant('hotkey received at top');
    };
    DeepHotKeyAgent.prototype.GetDomain = function () {
        var urlParts = this.UrlJacket.GetUrlParts();
        var combined = urlParts.Protocol + '//' + urlParts.HostAndPort;
        return combined;
    };
    DeepHotKeyAgent.prototype.BubbleMessageUp = function (hotKeyPayload) {
        this.Logger.FuncStart(this.BubbleMessageUp.name);
        var maxIter = 100;
        var currIter = 0;
        var candidateHasParent = true;
        window.top.postMessage(hotKeyPayload, this.GetDomain());
        this.Logger.FuncEnd(this.BubbleMessageUp.name);
    };
    DeepHotKeyAgent.prototype.HandleHotKeyPayload = function (hotKeyPayload) {
        if (hotKeyPayload) {
            if (window.self !== window.top) {
                this.BubbleMessageUp(hotKeyPayload);
            }
        }
        else {
            this.HandleTopWindow(hotKeyPayload);
        }
    };
    return DeepHotKeyAgent;
}(_CommonCoreBase/* _CommonBase */.a));



/***/ }),

/***/ 2474:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "A": () => /* binding */ CoreFactory
});

// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Enums/70 - TypeDiscriminator.js
var _70_TypeDiscriminator = __webpack_require__(8162);
// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/SharedConst.js
var SharedConst = __webpack_require__(5077);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Agents/ErrorHandler/ErrorHandlerAgent.js
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};


var ErrorHandlerAgent = (function () {
    function ErrorHandlerAgent() {
        this.TypeDiscriminator = _70_TypeDiscriminator/* TypeDiscriminator.IErrorHandler */.g.IErrorHandler;
        this.ErrorStack = [];
        this.errorContents = null;
    }
    ErrorHandlerAgent.prototype.IntroduceSiblings = function (logger, taskMonitor) {
        this.Logger = logger;
        this.TaskMonitor = taskMonitor;
    };
    ErrorHandlerAgent.prototype.ThrowIfNullOrUndefined = function (title, testSubject) {
        var _this = this;
        if (testSubject instanceof Array) {
            testSubject.forEach(function (testSubject) { return _this.ThrowIfNullOrUndefined(title, testSubject); });
        }
        else {
            if (typeof testSubject === 'undefined' || testSubject === null) {
                try {
                    if (this.TaskMonitor) {
                        this.TaskMonitor.RequestCancel(ErrorHandlerAgent.name + '.' + this.ThrowIfNullOrUndefined.name + '-' + title);
                    }
                    else {
                        console.log('No Task Monitor found');
                    }
                }
                catch (err) {
                    console.log('Error in: ' + this.ThrowIfNullOrUndefined.name + '  ' + err);
                }
                this.HandleFatalError(title, 'Failed Null check A');
            }
            else {
            }
        }
    };
    ErrorHandlerAgent.prototype.CommonThrow = function (errorMessage) {
        this.CreateFlag();
        throw (errorMessage);
    };
    ErrorHandlerAgent.prototype.ThrowIfNullOrUndefinedStatic = function (title, testSubject) {
        var _this = this;
        if (testSubject instanceof Array) {
            testSubject.forEach(function (testSubject) { return _this.ThrowIfNullOrUndefinedStatic(title, testSubject); });
        }
        else {
            if (typeof testSubject === 'undefined' || testSubject === null) {
                this.CommonThrow(title + ' Failed Null check B');
            }
        }
    };
    ErrorHandlerAgent.prototype.WarningAndContinue = function (container, text) {
        if (!container) {
            container = 'unknown';
        }
        if (!text) {
            text = 'unknown';
        }
        this.ErrorLogger('');
        this.ErrorLogger('\t\t** WARNING ** ' + container + ' ' + text);
        this.ErrorLogger('');
    };
    ErrorHandlerAgent.prototype.StyleFormat = function (colorAr, text) {
        var toReturn = '';
        toReturn = '';
        colorAr.forEach(function (color) {
            toReturn += SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleEsc */.v.Const.Colors.ConsoleStyles.StyleEsc + color;
        });
        toReturn += text + SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleEsc */.v.Const.Colors.ConsoleStyles.StyleEsc + SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleReset */.v.Const.Colors.ConsoleStyles.StyleReset;
        return toReturn;
    };
    ErrorHandlerAgent.prototype.DrawErrorMessage = function (container, text) {
        var _this = this;
        if (!container) {
            container = 'unknown';
        }
        var textToRender = [];
        if (!text) {
            text = ['unknown'];
        }
        if (!Array.isArray(text)) {
            textToRender = [text];
        }
        else {
            textToRender = text;
        }
        this.ErrorLogger('');
        this.ErrorLogger('\t\ts) '
            + this.StyleFormat([SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleBgRed */.v.Const.Colors.ConsoleStyles.StyleBgRed], '** ERROR **'));
        this.ErrorLogger('\t\t  container: ' + container);
        this.ErrorLogger('');
        textToRender.forEach(function (message) {
            _this.ErrorStack.push({
                ContainerFunc: container,
                ErrorString: message
            });
            _this.ErrorLogger('\t\t' + message);
        });
        this.ErrorLogger('');
        this.ErrorLogger('\t\te)** ERROR container: ** ' + container);
        this.ErrorLogger('');
    };
    ErrorHandlerAgent.prototype.ErrorAndContinue = function (container, text) {
        this.DrawErrorMessage(container, text);
    };
    ErrorHandlerAgent.prototype.ErrorLogger = function (text) {
        console.log('********** ' + text + ' **********');
    };
    ErrorHandlerAgent.prototype.FormatRejectMessage = function (container, err) {
        var toReturn = '';
        if (Array.isArray(container)) {
            var isFirstInArray_1 = true;
            container.forEach(function (arrayItem) {
                if (!isFirstInArray_1) {
                    toReturn += '.';
                }
                isFirstInArray_1 = false;
                toReturn += arrayItem;
            });
        }
        else {
            toReturn = container;
        }
        toReturn += ' | ' + err;
        return toReturn;
    };
    ErrorHandlerAgent.prototype.DisplayErrorFlag = function () {
    };
    ErrorHandlerAgent.prototype.CreateFlag = function () {
        this.Logger.FuncStart(this.CreateFlag.name);
        var BodyTag = document.getElementsByTagName(SharedConst/* SharedConst.Const.KeyWords.Html.Tags.Body */.v.Const.KeyWords.Html.Tags.Body)[0];
        this.errorFlagContainer = this.CreateContainer();
        this.CreateFlagContents();
        this.CreateResetButton();
        this.errorContents.appendChild(this.CancelButtonElem);
        BodyTag.appendChild(this.errorFlagContainer);
        this.Logger.FuncEnd(this.CreateFlag.name);
    };
    ErrorHandlerAgent.prototype.Reset = function () {
        alert('reset code needed');
    };
    ErrorHandlerAgent.prototype.CreateResetButton = function () {
        var _this = this;
        this.CancelButtonElem = document.createElement('input');
        this.CancelButtonElem.type = "button";
        this.CancelButtonElem.value = "Reset";
        this.CancelButtonElem.addEventListener('click', (function () { return _this.Reset(); }));
    };
    ErrorHandlerAgent.prototype.CreateFlagContents = function () {
        this.errorContents = document.createElement('div');
        this.errorContents.classList.add('error-contents');
        var closeButton = this.CreateCloseButton();
        var headerElem = document.createElement('div');
        headerElem.innerText = "HindSite";
        headerElem.classList.add("header");
        var headWrapper = document.createElement('div');
        headWrapper.classList.add("header-wrapper");
        this.MessageDiv = document.createElement('div');
        this.MessageDiv.innerText = "";
        this.MessageDiv.classList.add("message");
        this.FlagTextDiv = document.createElement('div');
        headWrapper.appendChild(headerElem);
        headWrapper.appendChild(closeButton);
        this.errorContents.appendChild(headWrapper);
        this.errorContents.appendChild(this.MessageDiv);
        this.errorContents.appendChild(this.FlagTextDiv);
    };
    ErrorHandlerAgent.prototype.HideErrorFlag = function (message) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.Logger.FuncStart(this.HideErrorFlag.name);
                if (this.errorFlagContainer) {
                    this.errorFlagContainer.style.display = 'none';
                }
                this.Logger.FuncEnd(this.HideErrorFlag.name);
                return [2];
            });
        });
    };
    ErrorHandlerAgent.prototype.CreateCloseButton = function () {
        var _this = this;
        var closeButtonElem = document.createElement('input');
        closeButtonElem.type = "button";
        closeButtonElem.value = "X";
        closeButtonElem.classList.add("close-btn");
        closeButtonElem.addEventListener('click', (function () { return _this.CallbackOnCloseButton(); }));
        return closeButtonElem;
    };
    ErrorHandlerAgent.prototype.CallbackOnCloseButton = function () {
        this.HideErrorFlag('Closing');
    };
    ErrorHandlerAgent.prototype.CreateContainer = function () {
        var flagContainer = document.createElement('div');
        flagContainer.classList.add('error-flag');
        return flagContainer;
    };
    ErrorHandlerAgent.prototype.HandleTopLevelTryCatch = function (container, text) {
        console.log('Top level Try/Catch');
    };
    ErrorHandlerAgent.prototype.HandleFatalError = function (container, text) {
        var stack = new Error().stack;
        var containerTextToRender = '';
        if (Array.isArray(container)) {
            var isFirstInArray_2 = true;
            container.forEach(function (subContainer) {
                if (!isFirstInArray_2) {
                    containerTextToRender += '.';
                }
                isFirstInArray_2 = false;
                containerTextToRender += subContainer;
            });
        }
        else {
            containerTextToRender = container;
        }
        this.DrawErrorMessage(containerTextToRender, [text, stack]);
        try {
            this.TaskMonitor.RequestCancel(ErrorHandlerAgent.name + '.' + this.HandleFatalError.name);
        }
        catch (err) {
            console.log(err);
        }
        console.log('----- sigh...sad face ');
    };
    ErrorHandlerAgent.prototype.HandleCancelReaction = function (arg0, arg1) {
        console.log('Reacting to cancel');
    };
    return ErrorHandlerAgent;
}());


// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Classes/StaticHelpers.js
var StaticHelpers = __webpack_require__(1579);
// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Enums/BufferChar.js
var BufferChar = __webpack_require__(9702);
// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Enums/BufferDirection.js
var BufferDirection = __webpack_require__(2580);
// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Helpers/GuidData.js
var GuidData = __webpack_require__(2070);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Agents/LoggerAgent/LogWriterBuffer.js
var LogWriterBuffer = (function () {
    function LogWriterBuffer() {
        this.FriendlyName = LogWriterBuffer.name;
        this.LogPreInitBuffer = [];
        this.bufferPrefix = '* ';
    }
    LogWriterBuffer.prototype.WriteText = function (text) {
        this.LogPreInitBuffer.push(this.bufferPrefix + text);
    };
    LogWriterBuffer.prototype.GetBuffer = function () {
        var iterCheckMax = 1000;
        var toReturn = [];
        while (this.LogPreInitBuffer.length > 0 && iterCheckMax > 0) {
            iterCheckMax--;
            toReturn.push(this.LogPreInitBuffer.shift());
        }
        return toReturn;
    };
    return LogWriterBuffer;
}());


// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Agents/LoggerAgent/LoggerTimer.js

var LoggerTimer = (function () {
    function LoggerTimer() {
        this.TimeStart = new Date();
        this.TimeLast = this.TimeStart.getTime();
        this.TimeMarkStart = this.TimeLast;
    }
    LoggerTimer.prototype.GetTimeDiff = function () {
        var toReturn = '';
        var timeNow = new Date().getTime();
        var timeDiffSinceLastMs = timeNow - this.TimeLast;
        var timeDiffOVerAll = timeNow - this.TimeMarkStart;
        var toReturnSinceLast;
        var toReturnSinceStart;
        var padLength = 5;
        if (timeDiffSinceLastMs >= SharedConst/* SharedConst.Const.Logger.MinTimeDiffMs */.v.Const.Logger.MinTimeDiffMs) {
            toReturnSinceLast = this.padFront(timeDiffSinceLastMs, padLength);
        }
        else {
            toReturnSinceLast = this.padFront(' ', padLength, ' ');
        }
        ;
        toReturnSinceStart = this.padFront(timeDiffOVerAll, padLength, '0');
        toReturn = toReturnSinceStart + ' ' + toReturnSinceLast;
        this.TimeLast = timeNow;
        return toReturn;
    };
    LoggerTimer.prototype.padFront = function (input, desiredLength, padChar) {
        if (desiredLength === void 0) { desiredLength = 2; }
        if (padChar === void 0) { padChar = '0'; }
        var toReturn = input.toString();
        var maxIter = 10;
        while ((toReturn.length < desiredLength) && maxIter > 0) {
            maxIter--;
            toReturn = padChar + toReturn;
        }
        return toReturn;
    };
    LoggerTimer.prototype.LogTimeStamp = function () {
        var result = this.padFront(this.TimeStart.getDate()) + "/" + this.padFront(this.TimeStart.getMonth() + 1) + "/" + this.TimeStart.getFullYear() + " " + this.padFront(this.TimeStart.getHours()) + ":" + this.padFront(this.TimeStart.getMinutes());
        return result;
    };
    return LoggerTimer;
}());


// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Agents/LoggerAgent/LoggerAgent.js
var LoggerAgent_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var LoggerAgent_generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








var LoggerAgent = (function () {
    function LoggerAgent() {
        this.__debugTextChangedCallbacks = [];
        this.AllLogWriters = [];
        this.MaxIndent = 20;
        this.TypeDiscriminator = _70_TypeDiscriminator/* TypeDiscriminator.ILoggerAgent */.g.ILoggerAgent;
        this.UseTimeStamp = true;
        this.MaxDepthBeforeThrow = 2000;
        this.Instantiate();
    }
    LoggerAgent.prototype.Instantiate = function () {
        this.Timer = new LoggerTimer;
        this.BufferWriter = new LogWriterBuffer();
        this.AddWriter(this.BufferWriter);
        this.__callDepth = -1;
        this.LogVal('TimeStamp', this.Timer.LogTimeStamp());
    };
    LoggerAgent.prototype.IntroduceSiblings = function (taskMonitor, errorHand) {
        this.TaskMonitor = taskMonitor;
        this.ErrorHand = errorHand;
    };
    LoggerAgent.prototype.FlushBuffer = function () {
        this.RemoveWriter(this.BufferWriter);
        this.LogVal('TimeStamp B', Date.now());
        var bufferAr = this.BufferWriter.GetBuffer();
        for (var idx = 0; idx < bufferAr.length; idx++) {
            this.Log(bufferAr[idx]);
        }
    };
    LoggerAgent.prototype.RemoveWriter = function (BufferWriter) {
        for (var idx = 0; idx < this.AllLogWriters.length; idx++) {
            var candidate = this.AllLogWriters[idx];
            if (candidate == BufferWriter) {
                this.AllLogWriters.splice(idx, 1);
                break;
            }
        }
    };
    LoggerAgent.prototype.AddWriter = function (writter) {
        this.HasWriters = true;
        this.AllLogWriters.push(writter);
    };
    LoggerAgent.prototype.SectionMarker = function (sectionTag) {
        this.Log("");
        this.Log("======================= " + sectionTag + " =======================");
        this.Log("");
    };
    LoggerAgent.prototype.IsNotNullOrUndefinedBool = function (title, subject) {
        var toReturn = false;
        if (subject) {
            if ((typeof subject) === 'undefined') {
                this.LogVal(title + ' Is Not Undefined', '!!! false !!!');
            }
            else {
                toReturn = true;
            }
        }
        else {
            this.LogVal(title + ' Is Not Null', '!!! false !!!');
        }
        return toReturn;
    };
    LoggerAgent.prototype.HandlerClearDebugText = function (self, verify) {
        if (verify === void 0) { verify = false; }
        this.FuncStart(this.HandlerClearDebugText.name);
        var proceed = true;
        if (verify) {
            proceed = confirm('Clear Debug TextArea ?');
        }
        if (proceed) {
            var newText = '--- Debug Text Reset ---';
        }
        this.FuncEnd(this.HandlerClearDebugText.name);
    };
    LoggerAgent.prototype.MarkerA = function () { this.__markerRaw('A'); };
    LoggerAgent.prototype.MarkerB = function () { this.__markerRaw('B'); };
    LoggerAgent.prototype.MarkerC = function () { this.__markerRaw('C'); };
    LoggerAgent.prototype.MarkerD = function () { this.__markerRaw('D'); };
    LoggerAgent.prototype.MarkerE = function () { this.__markerRaw('E'); };
    LoggerAgent.prototype.MarkerF = function () { this.__markerRaw('F'); };
    LoggerAgent.prototype.__markerRaw = function (marker) {
        this.Log('Marker ' + marker);
    };
    LoggerAgent.prototype.LogAsJsonPretty = function (texValName, jsonObj) {
        try {
            this.LogVal(texValName, JSON.stringify(jsonObj, null, 2));
        }
        catch (err) {
            this.Log('Unable to stringify obj');
        }
    };
    LoggerAgent.prototype.LogVal = function (textValName, textVal) {
        if (typeof textVal === 'undefined') {
            textVal = '{undefined}';
        }
        else if (textVal === null) {
            textVal = '{null}';
        }
        else {
            var asGuid = textVal;
            if (typeof asGuid === typeof GuidData/* GuidData */.k) {
                textVal = asGuid.Raw;
            }
        }
        textVal = textVal.toString();
        textValName = StaticHelpers/* StaticHelpers.BufferString */.y.BufferString(textValName.toString(), 26, BufferChar/* BufferChar.space */.D.space, BufferDirection/* BufferDirection.right */.z.right);
        var debugPrefix = '~~ ';
        var rawText = debugPrefix + textValName + ' : ' + textVal;
        if (this.AltColor === SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleFgBlue */.v.Const.Colors.ConsoleStyles.StyleFgBlue) {
            this.AltColor = SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleFgMagenta */.v.Const.Colors.ConsoleStyles.StyleFgMagenta;
        }
        else {
            this.AltColor = SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleFgBlue */.v.Const.Colors.ConsoleStyles.StyleFgBlue;
        }
        var formattedText = this.StyleFormat(this.AltColor, rawText);
        this.Log(formattedText);
    };
    LoggerAgent.prototype.LogImportant = function (text) {
        text = this.StyleFormat(SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleBgYellow */.v.Const.Colors.ConsoleStyles.StyleBgYellow, text);
        this.Log(text);
    };
    LoggerAgent.prototype.Log = function (text, hasPrefix) {
        if (hasPrefix === void 0) { hasPrefix = false; }
        return LoggerAgent_awaiter(this, void 0, void 0, function () {
            var indent, indentDepth, idx, prefixLength, idx, timeDiff;
            return LoggerAgent_generator(this, function (_a) {
                if (this.HasWriters) {
                    indent = '  ';
                    indentDepth = this.__callDepth % this.MaxIndent;
                    for (idx = 0; idx < indentDepth; idx++) {
                        text = indent + text;
                    }
                    prefixLength = 3;
                    if (!hasPrefix) {
                        for (idx = 0; idx < prefixLength; idx++) {
                            text = ' ' + text;
                        }
                    }
                    this.__triggerAllDebugTextChangedCallbacks({
                        NewText: text,
                        Append: true
                    });
                    if (this.UseTimeStamp) {
                        timeDiff = this.Timer.GetTimeDiff() + '  ';
                        text = timeDiff + text;
                    }
                    this.WriteToAllWriters(text);
                }
                return [2];
            });
        });
    };
    LoggerAgent.prototype.WriteToAllWriters = function (text) {
        var _this = this;
        if (this.AllLogWriters) {
            this.AllLogWriters.forEach(function (oneWriter) {
                if (oneWriter) {
                    try {
                        oneWriter.WriteText(text);
                    }
                    catch (err) {
                        console.log(_this.WriteToAllWriters.name + ' ' + oneWriter.FriendlyName + ' | ' + err);
                    }
                }
                else {
                    console.log('Null writer');
                }
            });
        }
    };
    LoggerAgent.prototype.__triggerAllDebugTextChangedCallbacks = function (data) {
        for (var idx = 0; idx < this.__debugTextChangedCallbacks.length; idx++) {
            var oneCallback = this.__debugTextChangedCallbacks[idx];
            oneCallback.Func(oneCallback.Caller, data);
        }
    };
    LoggerAgent.prototype.StyleFormat = function (color, text) {
        return SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleEsc */.v.Const.Colors.ConsoleStyles.StyleEsc + color + text + SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleEsc */.v.Const.Colors.ConsoleStyles.StyleEsc + SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleReset */.v.Const.Colors.ConsoleStyles.StyleReset;
    };
    LoggerAgent.prototype.CtorName = function (ctorName) {
        this.Log('Constructor: ' + ctorName);
    };
    LoggerAgent.prototype.resolveFuncText = function (text) {
        var displayText = '';
        if (Array.isArray(text)) {
            var isFirst_1 = true;
            text.forEach(function (oneText) {
                if (!isFirst_1) {
                    displayText += '.';
                }
                isFirst_1 = false;
                displayText += oneText;
            });
        }
        else {
            displayText = text.toString();
        }
        return displayText;
    };
    LoggerAgent.prototype.AddOptionalValueToText = function (text, optionalValue) {
        var toReturn = text;
        if (optionalValue) {
            optionalValue = optionalValue.toString();
            if (optionalValue.length > 0) {
                toReturn = toReturn + ' : ' + optionalValue;
            }
        }
        return toReturn;
    };
    LoggerAgent.prototype.FuncStart = function (text, optionalValue) {
        text = this.resolveFuncText(text);
        if (optionalValue) {
            text = this.AddOptionalValueToText(text, optionalValue);
        }
        text = 's' + ' ' + this.__callDepth + ') ' + text;
        var formatted = this.StyleFormat(SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleFgGreen */.v.Const.Colors.ConsoleStyles.StyleFgGreen, text);
        this.Log(formatted, true);
        this.__callDepth++;
        if (this.__callDepth > this.MaxDepthBeforeThrow) {
            throw ('Logger - Max Depth Exceeded: ' + this.__callDepth);
        }
    };
    LoggerAgent.prototype.CTORStart = function (text) {
        this.FuncStart("[CTOR] " + text);
    };
    LoggerAgent.prototype.CTOREnd = function (text) {
        this.FuncEnd("[CTOR] " + text);
    };
    LoggerAgent.prototype.FuncEnd = function (text, optionalValueInput) {
        text = this.resolveFuncText(text);
        this.__callDepth--;
        if (this.__callDepth < 0) {
            this.__callDepth = 0;
        }
        text = 'e' + ' ' + this.__callDepth + ') ' + text;
        if (optionalValueInput) {
            text = this.AddOptionalValueToText(text, optionalValueInput);
        }
        var formatted = this.StyleFormat(SharedConst/* SharedConst.Const.Colors.ConsoleStyles.StyleFgRed */.v.Const.Colors.ConsoleStyles.StyleFgRed, text);
        this.Log(formatted, true);
    };
    LoggerAgent.prototype.NotNullCheck = function (title, value) {
        if (typeof value === 'undefined') {
            this.LogVal(title, 'Is Undefined');
        }
        else if (!value) {
            this.LogVal(title, 'Is Null');
        }
        else {
            this.LogVal(title, 'Is Not Null');
        }
    };
    LoggerAgent.prototype.IsNullOrUndefined = function (subject) {
        var toReturn = '{unknown}';
        if (subject) {
            if ((typeof subject) === 'undefined') {
                toReturn = 'Is Undefined';
            }
            else {
                toReturn = 'Not Null';
            }
        }
        else {
            toReturn = 'Is Null';
        }
        return toReturn;
    };
    return LoggerAgent;
}());


// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Enums/TaskMutationType.js
var TaskMutationType = __webpack_require__(2573);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Agents/TaskMonitor/TaskMonitor.js


var TaskMonitor = (function () {
    function TaskMonitor() {
        this.TaskBucketStarted = [];
        this.TaskBucketCompleted = [];
        this.DelaySendMs = 20;
        this.CancelRequestedFlag = false;
        this.IdleNotificationSent = false;
        this.MinElapsedBeforeIsIdleMs = 20;
        this.TypeDiscriminator = _70_TypeDiscriminator/* TypeDiscriminator.TaskMonitor */.g.TaskMonitor;
    }
    TaskMonitor.prototype.IntroduceSiblings = function (logger, errorHand) {
        this.Logger = logger;
        this.ErrorHand = errorHand;
    };
    TaskMonitor.prototype.IntroduceCoreSiblings = function (logger, errorHand) {
        this.Logger = logger;
        this.ErrorHand = errorHand;
    };
    TaskMonitor.prototype.ResetCancel = function () {
        this.CancelRequestedFlag = false;
    };
    TaskMonitor.prototype.InitAfterErrorHand = function (taskMutationEvent_Subject) {
        this.TaskMutationEvent_Subject = taskMutationEvent_Subject;
    };
    TaskMonitor.prototype.AsyncTaskStarted = function (name) {
        this.MarkActivity();
        this.TaskBucketStarted.push(name);
        this.BuildAndSendPayload(TaskMutationType/* TaskMutationType.TaskAdded */.T.TaskAdded);
    };
    TaskMonitor.prototype.MarkActivity = function () {
        this.LastActivityTime = new Date().getTime();
        this.IdleNotificationSent = false;
    };
    TaskMonitor.prototype.NotifyWaiting = function (waitingMessage) {
        if (waitingMessage) {
            this.BuildAndSendPayload(TaskMutationType/* TaskMutationType.TaskWaitingYes */.T.TaskWaitingYes, waitingMessage);
        }
        else {
            this.BuildAndSendPayload(TaskMutationType/* TaskMutationType.TaskWaitingNo */.T.TaskWaitingNo, waitingMessage);
        }
    };
    TaskMonitor.prototype.IsTaskListEmpty = function () {
        return this.TaskBucketStarted.length === 0;
    };
    TaskMonitor.prototype.totalTaskCount = function () {
        return this.TaskBucketCompleted.length + this.TaskBucketStarted.length;
    };
    TaskMonitor.prototype.AsyncTaskCompleted = function (name) {
        this.MarkActivity();
        var foundIndex = this.TaskBucketStarted.indexOf(name);
        if (foundIndex > -1) {
            var toRemove = this.TaskBucketStarted.splice(foundIndex, 1);
            this.TaskBucketCompleted.push(toRemove[0]);
            this.SendIfEmpty();
        }
        else {
            console.log('Error - mismatch on tasks ' + name);
            console.log(JSON.stringify(this.TaskBucketStarted, null, 2));
        }
        this.BuildAndSendPayload(TaskMutationType/* TaskMutationType.TaskCompleted */.T.TaskCompleted);
    };
    TaskMonitor.prototype.LogValues = function () {
        this.Logger.LogImportant(this.LogValues.name + ' Task remaining : total - ' + this.TaskBucketStarted.length + ' : ' + this.totalTaskCount());
        if (this.AsyncTaskStarted.length < 20) {
            this.Logger.LogAsJsonPretty('TaskBucketStarted', this.TaskBucketStarted);
        }
    };
    TaskMonitor.prototype.SendIfEmpty = function () {
        if (this.IsTaskListEmpty()) {
            this.DelaySend();
        }
    };
    TaskMonitor.prototype.BuildAndSendPayload = function (mutationType, additionalMessage) {
        if (additionalMessage === void 0) { additionalMessage = false; }
        var payload = {
            MutationType: mutationType,
            IsTaskEmpty: this.IsTaskListEmpty(),
            RemainingTaskCount: this.TaskBucketStarted.length,
            TotalTaskCount: this.totalTaskCount(),
            CompletedCount: this.TaskBucketCompleted.length,
            AdditionalMessage: additionalMessage.toString(),
        };
        this.TaskMutationEvent_Subject.NotifyObserversAsync(payload);
    };
    TaskMonitor.prototype.TimeRemainingBeforeIdle = function () {
        var timeElapsedSinceLastActivity = new Date().getTime() - this.LastActivityTime;
        var timeRemainingBeforeIdle = this.MinElapsedBeforeIsIdleMs - timeElapsedSinceLastActivity;
        if (timeRemainingBeforeIdle < 0) {
            timeRemainingBeforeIdle = 0;
        }
        return timeRemainingBeforeIdle;
    };
    TaskMonitor.prototype.TasksHaveGoneIdle = function () {
        var timeRemaining = this.TimeRemainingBeforeIdle();
        var toReturn = timeRemaining < 1;
        return toReturn;
    };
    TaskMonitor.prototype.SendTaskHaveGoneIdle = function () {
        this.IdleNotificationSent = true;
        this.BuildAndSendPayload(TaskMutationType/* TaskMutationType.TasksHaveGoneIdle */.T.TasksHaveGoneIdle);
    };
    TaskMonitor.prototype.IsEmptyAndIdle = function () {
        var toReturn = this.IsTaskListEmpty() && this.TasksHaveGoneIdle();
        return toReturn;
    };
    TaskMonitor.prototype.DelaySend = function () {
        var _this = this;
        if (!this.IdleNotificationSent) {
            if (this.IsEmptyAndIdle()) {
                this.SendTaskHaveGoneIdle();
            }
            else {
                setTimeout(function () {
                    _this.DelaySend();
                }, this.DelaySendMs);
            }
        }
    };
    TaskMonitor.prototype.RequestCancel = function (requestor) {
        console.log("Cancel Requested by: " + requestor);
        this.CancelRequestedFlag = true;
    };
    TaskMonitor.prototype.IsCancelRequested = function () {
        return this.CancelRequestedFlag;
    };
    return TaskMonitor;
}());


// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Events/_HindSiteEvent/HindeSiteEvent_Subject.js
var HindeSiteEvent_Subject = __webpack_require__(4697);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Events/TaskListMutationEvent/TaskListMutationEvent_Subject.js
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var TaskListMutationEvent_Subject = (function (_super) {
    __extends(TaskListMutationEvent_Subject, _super);
    function TaskListMutationEvent_Subject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.TypeDiscriminator = _70_TypeDiscriminator/* TypeDiscriminator.TaskListMutationEvent_Subject */.g.TaskListMutationEvent_Subject;
        _this.ShowLogActions = false;
        _this.Friendly_Subject = TaskListMutationEvent_Subject.name;
        return _this;
    }
    return TaskListMutationEvent_Subject;
}(HindeSiteEvent_Subject/* HindeSiteEvent_Subject */.U));


// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/_CommonCoreBase.js
var _CommonCoreBase = __webpack_require__(6679);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Classes/CoreFactory.js





var CoreFactory = (function () {
    function CoreFactory() {
    }
    CoreFactory.BuildCommonCore = function () {
        var commonCore = new _CommonCoreBase/* CommonCore */.B();
        commonCore.Logger = new LoggerAgent();
        commonCore.TaskMonitor = new TaskMonitor();
        commonCore.ErrorHand = new ErrorHandlerAgent();
        commonCore.Logger.IntroduceSiblings(commonCore.TaskMonitor, commonCore.ErrorHand);
        commonCore.TaskMonitor.IntroduceSiblings(commonCore.Logger, commonCore.ErrorHand);
        commonCore.ErrorHand.IntroduceSiblings(commonCore.Logger, commonCore.TaskMonitor);
        var taskMutationEvent_Subject = new TaskListMutationEvent_Subject(commonCore);
        commonCore.TaskMonitor.InitAfterErrorHand(taskMutationEvent_Subject);
        return commonCore;
    };
    return CoreFactory;
}());



/***/ }),

/***/ 1579:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "y": () => /* binding */ StaticHelpers
/* harmony export */ });
/* harmony import */ var _Enums_10_MessageFlag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8979);
/* harmony import */ var _Enums_30_SettingKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8244);
/* harmony import */ var _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9702);
/* harmony import */ var _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2580);
/* harmony import */ var _Enums_50_scWindowType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7644);
/* harmony import */ var _Enums_SnapShotFlavor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(6189);






var StaticHelpers = (function () {
    function StaticHelpers() {
    }
    StaticHelpers.MinToMs = function (minutes) {
        return minutes * 60 * 1000;
    };
    StaticHelpers.FlavorAsString = function (flavor) {
        return 'Flavor.' + _Enums_SnapShotFlavor__WEBPACK_IMPORTED_MODULE_5__/* .SnapShotFlavor */ .n[flavor] + '(' + flavor + ')';
    };
    StaticHelpers.SettingKeyAsString = function (settingKey) {
        var toReturn = '';
        try {
            toReturn = 'SettingKey.' + _Enums_30_SettingKey__WEBPACK_IMPORTED_MODULE_1__/* .SettingKey */ .n[settingKey] + '(' + settingKey + ')';
        }
        catch (err) {
            toReturn = err;
        }
        return toReturn;
    };
    StaticHelpers.ScWindowTypeFriendly = function (windowType) {
        return _Enums_50_scWindowType__WEBPACK_IMPORTED_MODULE_4__/* .ScWindowType */ .D[windowType];
    };
    StaticHelpers.MakeFriendlyDate = function (date) {
        var toReturn = '';
        var workingDate = new Date(date);
        if (workingDate) {
            var month = StaticHelpers.BufferString((workingDate.getMonth() + 1).toString(), 2, _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Zero */ .D.Zero, _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__/* .BufferDirection.left */ .z.left);
            var day = StaticHelpers.BufferString(workingDate.getDate().toString(), 2, _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Zero */ .D.Zero, _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__/* .BufferDirection.left */ .z.left);
            var min = StaticHelpers.BufferString(workingDate.getMinutes().toString(), 2, _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Zero */ .D.Zero, _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__/* .BufferDirection.left */ .z.left);
            var hoursRaw = workingDate.getHours();
            var hourClean = hoursRaw ? hoursRaw : 12;
            var hourCleanStr = StaticHelpers.BufferString(hourClean.toString(), 2, _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Zero */ .D.Zero, _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__/* .BufferDirection.left */ .z.left);
            toReturn = month + '.' + day + ' ' + hourCleanStr + ':' + min;
        }
        else {
            toReturn = '{error}';
            throw (this.MakeFriendlyDate.name, 'no date provided');
        }
        return toReturn;
    };
    StaticHelpers.IsNullOrUndefined = function (testSubject) {
        var _this = this;
        var toReturn = false;
        try {
            if (testSubject instanceof Array) {
                testSubject.forEach(function (testSubject) { return toReturn = toReturn || _this.IsNullOrUndefined(testSubject); });
            }
            else {
                toReturn = (typeof testSubject === 'undefined' || testSubject === null);
            }
        }
        catch (err) {
            console.log(err);
        }
        return toReturn;
    };
    StaticHelpers.getBuffChar = function (buffCharEnum) {
        var buffChar = ' ';
        if (buffCharEnum === _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.space */ .D.space) {
            buffChar = ' ';
        }
        else if (buffCharEnum === _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Nbsp */ .D.Nbsp) {
            buffChar = '&nbsp;';
        }
        else if (buffCharEnum === _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Period */ .D.Period) {
            buffChar = '.';
        }
        else if (buffCharEnum === _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Zero */ .D.Zero) {
            buffChar = '0';
        }
        return buffChar;
    };
    StaticHelpers.BufferString = function (str, desiredLength, buffCharEnum, direction) {
        var toReturn = str;
        var buffChar = this.getBuffChar(buffCharEnum);
        if (toReturn.length > desiredLength) {
            if (desiredLength > 6) {
                toReturn = toReturn.substring(0, desiredLength - 3) + '...';
            }
            else {
                toReturn = toReturn.substring(0, desiredLength);
            }
        }
        if (toReturn.length < desiredLength) {
            var bufferCharNeeded = desiredLength - toReturn.length;
            for (var idx = 0; idx < bufferCharNeeded; idx++) {
                if (direction === _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__/* .BufferDirection.left */ .z.left) {
                    toReturn = buffChar + toReturn;
                }
                else {
                    toReturn = toReturn + buffChar;
                }
            }
        }
        return toReturn;
    };
    StaticHelpers.MsgFlagAsString = function (msg) {
        var toReturn = "{error}";
        if (msg) {
            try {
                toReturn = 'MsgFlag.' + _Enums_10_MessageFlag__WEBPACK_IMPORTED_MODULE_0__/* .ReqCommandMsgFlag */ .r[msg] + '(' + msg + ')';
            }
            catch (err) {
                console.log(this.MsgFlagAsString.name + ' ' + err);
            }
        }
        return 'flag: ' + toReturn;
    };
    return StaticHelpers;
}());



/***/ }),

/***/ 8979:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "r": () => /* binding */ ReqCommandMsgFlag
/* harmony export */ });
var ReqCommandMsgFlag;
(function (ReqCommandMsgFlag) {
    ReqCommandMsgFlag[ReqCommandMsgFlag["Unknown"] = 0] = "Unknown";
    ReqCommandMsgFlag[ReqCommandMsgFlag["GetAllStorageOneWindow"] = 10003063] = "GetAllStorageOneWindow";
    ReqCommandMsgFlag[ReqCommandMsgFlag["NewWindowTest"] = 10943188] = "NewWindowTest";
    ReqCommandMsgFlag[ReqCommandMsgFlag["Ping"] = 10100148] = "Ping";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqRemoveFromStorage"] = 10827628] = "ReqRemoveFromStorage";
    ReqCommandMsgFlag[ReqCommandMsgFlag["CancelCommand"] = 10125827] = "CancelCommand";
    ReqCommandMsgFlag[ReqCommandMsgFlag["OpenCERibbonNavigateLinks"] = 10391090] = "OpenCERibbonNavigateLinks";
    ReqCommandMsgFlag[ReqCommandMsgFlag["OpenCERibbonPresentationDetails"] = 10714851] = "OpenCERibbonPresentationDetails";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqAddCETab"] = 10625684] = "ReqAddCETab";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqAdminB"] = 10889199] = "ReqAdminB";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqClosePopUpWindow"] = 10700124] = "ReqClosePopUpWindow";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqDebugAutoSnapShot"] = 10463876] = "ReqDebugAutoSnapShot";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqDebugClearConsole"] = 10719358] = "ReqDebugClearConsole";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqDebugTriggerReload"] = 10591674] = "ReqDebugTriggerReload";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqGoDesktop"] = 10667844] = "ReqGoDesktop";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqLoginWithAdminB"] = 10587818] = "ReqLoginWithAdminB";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqOpenCE"] = 10466461] = "ReqOpenCE";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqQuickPublish"] = 10123608] = "ReqQuickPublish";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqSetScModeEdit"] = 10533683] = "ReqSetScModeEdit";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqSetScModeNormal"] = 10544213] = "ReqSetScModeNormal";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqSetScModePreview"] = 10151645] = "ReqSetScModePreview";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqSetStateOfSitecoreNewWindow"] = 10202348] = "ReqSetStateOfSitecoreNewWindow";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqSetStateOfSitecoreSameWindow"] = 10074231] = "ReqSetStateOfSitecoreSameWindow";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqTakeSnapShot"] = 10495640] = "ReqTakeSnapShot";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqToggleCompactCss"] = 10178105] = "ReqToggleCompactCss";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqToggleFavorite"] = 10462769] = "ReqToggleFavorite";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqUpdateNickName"] = 10899837] = "ReqUpdateNickName";
    ReqCommandMsgFlag[ReqCommandMsgFlag["SetStateFromMostRecent"] = 10611496] = "SetStateFromMostRecent";
    ReqCommandMsgFlag[ReqCommandMsgFlag["SetStateFromQueryString"] = 10754569] = "SetStateFromQueryString";
    ReqCommandMsgFlag[ReqCommandMsgFlag["SetStateFromStorage"] = 10984640] = "SetStateFromStorage";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqToggleRawValues"] = 10125894] = "ReqToggleRawValues";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqNavigateBack"] = 10238058] = "ReqNavigateBack";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqNavigateForward"] = 10304388] = "ReqNavigateForward";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqNavigateUp"] = 10872523] = "ReqNavigateUp";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqGoToSelected"] = 10615549] = "ReqGoToSelected";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqDebugContentFatalError"] = 10796656] = "ReqDebugContentFatalError";
    ReqCommandMsgFlag[ReqCommandMsgFlag["GetStateOfWindow"] = 10304388] = "GetStateOfWindow";
    ReqCommandMsgFlag[ReqCommandMsgFlag["__future"] = 10872523] = "__future";
})(ReqCommandMsgFlag || (ReqCommandMsgFlag = {}));


/***/ }),

/***/ 8244:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "n": () => /* binding */ SettingKey
/* harmony export */ });
var SettingKey;
(function (SettingKey) {
    SettingKey[SettingKey["unknown"] = 0] = "unknown";
    SettingKey[SettingKey["AutoLogin"] = 30415718] = "AutoLogin";
    SettingKey[SettingKey["DebugKeepDialogOpen"] = 3030395177] = "DebugKeepDialogOpen";
    SettingKey[SettingKey["AutoSaveIntervalMin"] = 880521] = "AutoSaveIntervalMin";
    SettingKey[SettingKey["UseCompactCss"] = 30605306] = "UseCompactCss";
    SettingKey[SettingKey["AutoSaveRetainDays"] = 30077911] = "AutoSaveRetainDays";
    SettingKey[SettingKey["AutoRenameCeButton"] = 30710590] = "AutoRenameCeButton";
    SettingKey[SettingKey["MaxAutoSaveCount"] = 30338682] = "MaxAutoSaveCount";
    SettingKey[SettingKey["EnableDebugging"] = 30775114] = "EnableDebugging";
    SettingKey[SettingKey["LgndBrowserState"] = 30226039] = "LgndBrowserState";
    SettingKey[SettingKey["LgndContentState"] = 30330190] = "LgndContentState";
    SettingKey[SettingKey["LgndForeSite"] = 30967099] = "LgndForeSite";
    SettingKey[SettingKey["LgndHindSite"] = 30669129] = "LgndHindSite";
    SettingKey[SettingKey["LgndMessages"] = 30755408] = "LgndMessages";
    SettingKey[SettingKey["LgndPopUpLog"] = 30243921] = "LgndPopUpLog";
    SettingKey[SettingKey["LgndPopUpState"] = 30868073] = "LgndPopUpState";
    SettingKey[SettingKey["LgndSettings"] = 30342605] = "LgndSettings";
    SettingKey[SettingKey["LastUsedLogToStorageKey"] = 30046822] = "LastUsedLogToStorageKey";
    SettingKey[SettingKey["AutoSnapshotBeforeWindowChange"] = 30966373] = "AutoSnapshotBeforeWindowChange";
    SettingKey[SettingKey["LgndPopUpDebug"] = 30583894] = "LgndPopUpDebug";
    SettingKey[SettingKey["AutoRestoreState"] = 30581057] = "AutoRestoreState";
})(SettingKey || (SettingKey = {}));


/***/ }),

/***/ 7644:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": () => /* binding */ ScWindowType
/* harmony export */ });
var ScWindowType;
(function (ScWindowType) {
    ScWindowType[ScWindowType["Unknown"] = 0] = "Unknown";
    ScWindowType[ScWindowType["AccessViewer"] = 50807454] = "AccessViewer";
    ScWindowType[ScWindowType["Archive"] = 50572312] = "Archive";
    ScWindowType[ScWindowType["ContentEditor"] = 50570457] = "ContentEditor";
    ScWindowType[ScWindowType["ControlPanel"] = 50180952] = "ControlPanel";
    ScWindowType[ScWindowType["Debug"] = 50053957] = "Debug";
    ScWindowType[ScWindowType["Desktop"] = 50670576] = "Desktop";
    ScWindowType[ScWindowType["DomainManager"] = 50904399] = "DomainManager";
    ScWindowType[ScWindowType["EmailExperienceManager"] = 50111451] = "EmailExperienceManager";
    ScWindowType[ScWindowType["ExperienceAnalytics"] = 50849816] = "ExperienceAnalytics";
    ScWindowType[ScWindowType["ExperienceEditor_Edit"] = 50739548] = "ExperienceEditor_Edit";
    ScWindowType[ScWindowType["ExperienceEditor_Normal"] = 50417587] = "ExperienceEditor_Normal";
    ScWindowType[ScWindowType["ExperienceEditor_Preview"] = 50495346] = "ExperienceEditor_Preview";
    ScWindowType[ScWindowType["ExperienceOptimization"] = 50860380] = "ExperienceOptimization";
    ScWindowType[ScWindowType["ExperienceProfile"] = 50307227] = "ExperienceProfile";
    ScWindowType[ScWindowType["FallBack"] = 50657295] = "FallBack";
    ScWindowType[ScWindowType["FederatedExperienceManager"] = 50999497] = "FederatedExperienceManager";
    ScWindowType[ScWindowType["Forms"] = 50698620] = "Forms";
    ScWindowType[ScWindowType["InstallationWizard"] = 50201337] = "InstallationWizard";
    ScWindowType[ScWindowType["InstalledLicenses"] = 50979897] = "InstalledLicenses";
    ScWindowType[ScWindowType["KeyboardMap"] = 50683086] = "KeyboardMap";
    ScWindowType[ScWindowType["Launchpad"] = 50206433] = "Launchpad";
    ScWindowType[ScWindowType["LicenseDetails"] = 50268242] = "LicenseDetails";
    ScWindowType[ScWindowType["ListManager"] = 50595779] = "ListManager";
    ScWindowType[ScWindowType["LoginPage"] = 50010467] = "LoginPage";
    ScWindowType[ScWindowType["LogViewer"] = 50500367] = "LogViewer";
    ScWindowType[ScWindowType["MarketingAutomation"] = 50921088] = "MarketingAutomation";
    ScWindowType[ScWindowType["MarketingControlPanel"] = 50528944] = "MarketingControlPanel";
    ScWindowType[ScWindowType["MediaLibrary"] = 50351702] = "MediaLibrary";
    ScWindowType[ScWindowType["PackageDesigner"] = 50363323] = "PackageDesigner";
    ScWindowType[ScWindowType["PathAnalyzer"] = 50854514] = "PathAnalyzer";
    ScWindowType[ScWindowType["Publish"] = 50797841] = "Publish";
    ScWindowType[ScWindowType["RecycleBin"] = 50374978] = "RecycleBin";
    ScWindowType[ScWindowType["RoleManager"] = 50017991] = "RoleManager";
    ScWindowType[ScWindowType["Run"] = 50340856] = "Run";
    ScWindowType[ScWindowType["ScanForBrokenLinks"] = 50599314] = "ScanForBrokenLinks";
    ScWindowType[ScWindowType["SecurityEditor"] = 50613652] = "SecurityEditor";
    ScWindowType[ScWindowType["TemplateManager"] = 50415542] = "TemplateManager";
    ScWindowType[ScWindowType["UpdateCenter"] = 50109795] = "UpdateCenter";
    ScWindowType[ScWindowType["UserManager"] = 50660151] = "UserManager";
    ScWindowType[ScWindowType["Workbox"] = 50799485] = "Workbox";
    ScWindowType[ScWindowType["InstallerBuildPackage"] = 50625341] = "InstallerBuildPackage";
    ScWindowType[ScWindowType["JqueryModalDialogs"] = 50130845] = "JqueryModalDialogs";
    ScWindowType[ScWindowType["ScContentProxy"] = 50807069] = "ScContentProxy";
    ScWindowType[ScWindowType["AppToolsInstallerDesigner"] = 50822813] = "AppToolsInstallerDesigner";
})(ScWindowType || (ScWindowType = {}));


/***/ }),

/***/ 8162:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "g": () => /* binding */ TypeDiscriminator
/* harmony export */ });
var TypeDiscriminator;
(function (TypeDiscriminator) {
    TypeDiscriminator[TypeDiscriminator["unknown"] = 700] = "unknown";
    TypeDiscriminator[TypeDiscriminator["__ContentTreeBasedProxyMutationEvent__Subject"] = 70859200] = "__ContentTreeBasedProxyMutationEvent__Subject";
    TypeDiscriminator[TypeDiscriminator["__ContentTreeBasedProxyMutationEvent_Observer"] = 70343448] = "__ContentTreeBasedProxyMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["_ContentTreeBasedProxyMutationEvent_Observer"] = 70087112] = "_ContentTreeBasedProxyMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["ApiCore"] = 70766948] = "ApiCore";
    TypeDiscriminator[TypeDiscriminator["BaseBrowserProxy"] = 70346293] = "BaseBrowserProxy";
    TypeDiscriminator[TypeDiscriminator["BrowserTabAgent"] = 70190816] = "BrowserTabAgent";
    TypeDiscriminator[TypeDiscriminator["CommandStartEndCancelEvent_Observer"] = 70048622] = "CommandStartEndCancelEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["CommandStartEndCancelEvent_Subject"] = 70280832] = "CommandStartEndCancelEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["ContentReplyReceivedEvent_Observer"] = 70078936] = "ContentReplyReceivedEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["ContentReplyReceivedEvent_Subject"] = 70675592] = "ContentReplyReceivedEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["ContentTreeMutationEvent_Subject"] = 70779372] = "ContentTreeMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["DesktopProxyMutationEvent_Observer"] = 70934648] = "DesktopProxyMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["DesktopProxyMutationEvent_Subject"] = 70792635] = "DesktopProxyMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["ElementJacketMutationEvent_Observer"] = 70624331] = "ElementJacketMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["ElementJacketMutationEvent_Subject"] = 70179738] = "ElementJacketMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["DTAreaProxyMutationEvent_Observer"] = 70508413] = "DTAreaProxyMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["DTAreaProxyMutationEvent_Subject"] = 70628210] = "DTAreaProxyMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["DTFrameProxyMutationEvent_Observer"] = 70531819] = "DTFrameProxyMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["DTFrameProxyMutationEvent_Subject"] = 70263565] = "DTFrameProxyMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["NativeAddRemoveEvent_Observer"] = 70311064] = "NativeAddRemoveEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["FrameJacketAddRemoveEvent_Subject"] = 70238984] = "FrameJacketAddRemoveEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["HotKeyEvent_Subject"] = 70295417] = "HotKeyEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["ICommonCore"] = 70599578] = "ICommonCore";
    TypeDiscriminator[TypeDiscriminator["IErrorHandler"] = 70186081] = "IErrorHandler";
    TypeDiscriminator[TypeDiscriminator["IHindeCore"] = 70357621] = "IHindeCore";
    TypeDiscriminator[TypeDiscriminator["ILoggerAgent"] = 70139390] = "ILoggerAgent";
    TypeDiscriminator[TypeDiscriminator["KeyBoardComboEvent_Subject"] = 70944720] = "KeyBoardComboEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["NativeClassNameChangeEvent_Observer"] = 70293692] = "NativeClassNameChangeEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["NativeClassNameChangeEvent_Subject"] = 70124976] = "NativeClassNameChangeEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["SelectSnapshotUiMutationEvent_Observer"] = 70452323] = "SelectSnapshotUiMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["SelectSnapUiMutationEvent_ObserverWithCallback"] = 70704978] = "SelectSnapUiMutationEvent_ObserverWithCallback";
    TypeDiscriminator[TypeDiscriminator["SelectSnapUiMutationEvent_Subject"] = 70143636] = "SelectSnapUiMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["SingleClickEvent_Observer"] = 70607050] = "SingleClickEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["SingleClickEvent_Subject"] = 70079372] = "SingleClickEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["TaskListMutationEvent_Observer"] = 70917862] = "TaskListMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["TaskListMutationEvent_Subject"] = 70797515] = "TaskListMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["TaskMonitor"] = 70969342] = "TaskMonitor";
    TypeDiscriminator[TypeDiscriminator["ToastAgent"] = 70906481] = "ToastAgent";
    TypeDiscriminator[TypeDiscriminator["UiCommandFlagRaisedEvent_Observer"] = 70622105] = "UiCommandFlagRaisedEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["UiCommandFlagRaisedEvent_Subject"] = 70692290] = "UiCommandFlagRaisedEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["UiModuleManagerPassThroughEvent_Observer"] = 70488938] = "UiModuleManagerPassThroughEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["UiModuleManagerPassThroughEvent_Subject"] = 70080260] = "UiModuleManagerPassThroughEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["UiSettingBasedModuleMutationEvent_Observer"] = 70154996] = "UiSettingBasedModuleMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["UiSettingBasedModuleMutationEvent_Subject"] = 70935505] = "UiSettingBasedModuleMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["zzFuture"] = 70187209] = "zzFuture";
    TypeDiscriminator[TypeDiscriminator["zzFutureb"] = 70897006] = "zzFutureb";
    TypeDiscriminator[TypeDiscriminator["zzFuturec"] = 70711064] = "zzFuturec";
})(TypeDiscriminator || (TypeDiscriminator = {}));


/***/ }),

/***/ 9702:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": () => /* binding */ BufferChar
/* harmony export */ });
var BufferChar;
(function (BufferChar) {
    BufferChar[BufferChar["space"] = 0] = "space";
    BufferChar[BufferChar["Nbsp"] = 1] = "Nbsp";
    BufferChar[BufferChar["Period"] = 2] = "Period";
    BufferChar[BufferChar["Zero"] = 3] = "Zero";
})(BufferChar || (BufferChar = {}));


/***/ }),

/***/ 2580:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "z": () => /* binding */ BufferDirection
/* harmony export */ });
var BufferDirection;
(function (BufferDirection) {
    BufferDirection[BufferDirection["left"] = 0] = "left";
    BufferDirection[BufferDirection["right"] = 1] = "right";
})(BufferDirection || (BufferDirection = {}));


/***/ }),

/***/ 474:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => /* binding */ QueryStrKey
/* harmony export */ });
var QueryStrKey;
(function (QueryStrKey) {
    QueryStrKey[QueryStrKey["he"] = 0] = "he";
    QueryStrKey[QueryStrKey["hsTargetSs"] = 1] = "hsTargetSs";
    QueryStrKey[QueryStrKey["mo"] = 2] = "mo";
    QueryStrKey[QueryStrKey["sc_debug"] = 3] = "sc_debug";
    QueryStrKey[QueryStrKey["sc_itemid"] = 4] = "sc_itemid";
    QueryStrKey[QueryStrKey["sc_lang"] = 5] = "sc_lang";
    QueryStrKey[QueryStrKey["sc_mode"] = 6] = "sc_mode";
    QueryStrKey[QueryStrKey["sc_site"] = 7] = "sc_site";
    QueryStrKey[QueryStrKey["xmlcontrol"] = 8] = "xmlcontrol";
})(QueryStrKey || (QueryStrKey = {}));


/***/ }),

/***/ 6189:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "n": () => /* binding */ SnapShotFlavor
/* harmony export */ });
var SnapShotFlavor;
(function (SnapShotFlavor) {
    SnapShotFlavor[SnapShotFlavor["Unknown"] = 0] = "Unknown";
    SnapShotFlavor[SnapShotFlavor["Autosave"] = 1] = "Autosave";
    SnapShotFlavor[SnapShotFlavor["Favorite"] = 2] = "Favorite";
    SnapShotFlavor[SnapShotFlavor["Manual"] = 3] = "Manual";
    SnapShotFlavor[SnapShotFlavor["Live"] = 4] = "Live";
})(SnapShotFlavor || (SnapShotFlavor = {}));


/***/ }),

/***/ 2573:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "T": () => /* binding */ TaskMutationType
/* harmony export */ });
var TaskMutationType;
(function (TaskMutationType) {
    TaskMutationType[TaskMutationType["TaskAdded"] = 0] = "TaskAdded";
    TaskMutationType[TaskMutationType["TaskCompleted"] = 1] = "TaskCompleted";
    TaskMutationType[TaskMutationType["TasksHaveGoneIdle"] = 2] = "TasksHaveGoneIdle";
    TaskMutationType[TaskMutationType["TaskWaitingNo"] = 3] = "TaskWaitingNo";
    TaskMutationType[TaskMutationType["TaskWaitingYes"] = 4] = "TaskWaitingYes";
})(TaskMutationType || (TaskMutationType = {}));


/***/ }),

/***/ 2005:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "z": () => /* binding */ HindSiteEvent_Observer
/* harmony export */ });
/* harmony import */ var _CommonCoreBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6679);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var HindSiteEvent_Observer = (function (_super) {
    __extends(HindSiteEvent_Observer, _super);
    function HindSiteEvent_Observer(hindeCore, friendly, callbackAsync) {
        if (callbackAsync === void 0) { callbackAsync = null; }
        var _this = _super.call(this, hindeCore) || this;
        _this.CallbackAsync = null;
        _this.CallbackAsync = callbackAsync;
        _this.Friendly = friendly;
        return _this;
    }
    HindSiteEvent_Observer.prototype.UpdateAsync = function (payload) {
        try {
            if (this.CallbackAsync) {
                this.CallbackAsync(payload);
            }
        }
        catch (err) {
            this.ErrorHand.ErrorAndContinue(HindSiteEvent_Observer.name, err);
        }
    };
    return HindSiteEvent_Observer;
}(_CommonCoreBase__WEBPACK_IMPORTED_MODULE_0__/* ._CommonBase */ .a));



/***/ }),

/***/ 4697:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "U": () => /* binding */ HindeSiteEvent_Subject
/* harmony export */ });
/* harmony import */ var _Classes_StaticHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1579);
/* harmony import */ var _Enums_70_TypeDiscriminator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8162);
/* harmony import */ var _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9702);
/* harmony import */ var _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2580);
/* harmony import */ var _CommonCoreBase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6679);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var HindeSiteEvent_Subject = (function (_super) {
    __extends(HindeSiteEvent_Subject, _super);
    function HindeSiteEvent_Subject(commonCore) {
        var _this = _super.call(this, commonCore) || this;
        _this.ObserverCollection = [];
        return _this;
    }
    HindeSiteEvent_Subject.prototype.DisableNotifications = function () {
        this.IsMuted = true;
    };
    HindeSiteEvent_Subject.prototype.EnableNotifications = function () {
        this.IsMuted = false;
    };
    HindeSiteEvent_Subject.prototype.HasObservers = function () {
        return this.ObserverCollection && this.ObserverCollection.length > 0;
    };
    HindeSiteEvent_Subject.prototype.RegisterObserver = function (observer) {
        if (observer) {
            if (this.ObserverCollection.indexOf(observer) < 0) {
                this.ObserverCollection.push(observer);
                this.Logger.Log(this.RegisterObserver.name + ' ' + observer.Friendly + ' to ' + _Enums_70_TypeDiscriminator__WEBPACK_IMPORTED_MODULE_1__/* .TypeDiscriminator */ .g[this.TypeDiscriminator] + ' - count after: ' + this.ObserverCollection.length.toString());
            }
            else {
                this.ErrorHand.WarningAndContinue(this.RegisterObserver.name, 'Observer already registered');
            }
        }
        else {
            this.ErrorHand.HandleFatalError(this.RegisterObserver.name, 'Observer is null');
        }
    };
    HindeSiteEvent_Subject.prototype.UnregisterObserver = function (observer) {
        this.Logger.FuncStart(this.UnregisterObserver.name);
        if (observer) {
            var observerIndex = this.ObserverCollection.indexOf(observer);
            if (observerIndex > -1) {
                this.ObserverCollection.splice(observerIndex, 1);
            }
        }
        this.Logger.FuncEnd(this.UnregisterObserver.name);
    };
    HindeSiteEvent_Subject.prototype.NotifyObserversAsync = function (payload) {
        var bufferedFriendly = _Classes_StaticHelpers__WEBPACK_IMPORTED_MODULE_0__/* .StaticHelpers.BufferString */ .y.BufferString(_Enums_70_TypeDiscriminator__WEBPACK_IMPORTED_MODULE_1__/* .TypeDiscriminator */ .g[this.TypeDiscriminator], 30, _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Period */ .D.Period, _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__/* .BufferDirection.right */ .z.right);
        if (this.ShowLogActions) {
            this.Logger.FuncStart(this.NotifyObserversAsync.name + ' of: ' + bufferedFriendly, ' obs. count: ' + this.ObserverCollection.length);
        }
        if (!this.IsMuted) {
            this.ObserverCollection.forEach(function (observer) {
                observer.UpdateAsync(payload);
            });
        }
        else {
            this.Logger.Log('not Notifying...Subject is muted');
        }
        this.Logger.FuncEnd(this.NotifyObserversAsync.name + ' of: ' + bufferedFriendly, ' obs. count: ' + this.ObserverCollection.length);
    };
    return HindeSiteEvent_Subject;
}(_CommonCoreBase__WEBPACK_IMPORTED_MODULE_4__/* ._CommonBase */ .a));



/***/ }),

/***/ 3473:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i": () => /* binding */ Guid
/* harmony export */ });
/* harmony import */ var _GuidData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2070);

var Guid = (function () {
    function Guid() {
    }
    Guid.NewRandomGuid = function () {
        var newGuid = new Guid();
        var randomStr = newGuid.GetRandomGuidString();
        var toReturn = new _GuidData__WEBPACK_IMPORTED_MODULE_0__/* .GuidData */ .k(randomStr);
        return toReturn;
    };
    Guid.GetEmptyGuid = function () {
        return new _GuidData__WEBPACK_IMPORTED_MODULE_0__/* .GuidData */ .k();
    };
    Guid.AsBracedGuid = function (guidData) {
        return '{' + guidData.Raw + "}";
    };
    Guid.IsValidGuidStr = function (candidateStr) {
        var toReturn = false;
        var regexGuid = '^[\}]?[0-9a-f]{8}[\-]?[0-9a-f]{4}[\-]?[0-9a-f]{4}[\-]?[0-9a-f]{4}[\-]?[0-9a-f]{12}[\}]?$';
        var pattern = new RegExp(regexGuid, 'i');
        toReturn = pattern.test(candidateStr);
        return toReturn;
    };
    Guid.AsShort = function (guidData) {
        var toReturn = '{error}';
        if (guidData) {
            if (this.IsValidGuidStr(guidData.Raw)) {
                toReturn = guidData.Raw.substr(0, Guid.ShortGuidLength);
            }
            else {
                toReturn = '{error - invalid guid string: ' + guidData.Raw + '}';
            }
        }
        return toReturn;
    };
    Guid.WithoutDashes = function (guiddata) {
        var withoutDashes = guiddata.Raw.replace(/-/g, '');
        return withoutDashes;
    };
    Guid.ParseGuid = function (val, throwOnError) {
        return new _GuidData__WEBPACK_IMPORTED_MODULE_0__/* .GuidData */ .k(val);
    };
    Guid.prototype.MakeNewRandomGuid = function () {
        var randomStr = this.GetRandomGuidString();
        return new _GuidData__WEBPACK_IMPORTED_MODULE_0__/* .GuidData */ .k(randomStr);
    };
    Guid.GuidStrWithDashes = function (val) {
        var toReturn = '';
        var withoutDashes = val.replace(/-/g, '');
        var parts = [];
        if (withoutDashes.length !== 32) {
            throw (this.GuidStrWithDashes.name + ' - Wrong count wanted: ' + 32 + " got: " + withoutDashes.length + ' (without dashes) ' + withoutDashes);
        }
        parts.push(withoutDashes.slice(0, 8));
        parts.push(withoutDashes.slice(8, 12));
        parts.push(withoutDashes.slice(12, 16));
        parts.push(withoutDashes.slice(16, 20));
        parts.push(withoutDashes.slice(20, 32));
        toReturn = parts.join('-');
        return toReturn;
    };
    Guid.prototype.GetRandomGuidString = function () {
        var toReturn;
        var temp = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';
        toReturn = temp.replace(/[xy]/g, function (c) {
            var r = Math.random() * 16 | 0;
            var v = c == 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
        return toReturn;
    };
    Guid.prototype.MakeGuidFromString = function (val, throwOnError) {
        var toReturn = new _GuidData__WEBPACK_IMPORTED_MODULE_0__/* .GuidData */ .k(val);
        return toReturn;
    };
    Guid.ShortGuidLength = 4;
    return Guid;
}());



/***/ }),

/***/ 2070:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "k": () => /* binding */ GuidData
/* harmony export */ });
/* harmony import */ var _Guid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3473);

var GuidData = (function () {
    function GuidData(raw) {
        if (raw === void 0) { raw = null; }
        if (!raw) {
            this.Raw = GuidData.ConstEmptyGuid;
        }
        else {
            if (_Guid__WEBPACK_IMPORTED_MODULE_0__/* .Guid.IsValidGuidStr */ .i.IsValidGuidStr(raw)) {
                this.Raw = _Guid__WEBPACK_IMPORTED_MODULE_0__/* .Guid.GuidStrWithDashes */ .i.GuidStrWithDashes(raw);
            }
            else {
                throw ('Invalid GUID string: ' + raw);
            }
        }
    }
    GuidData.ConstEmptyGuid = '00000000-0000-0000-0000-000000000000';
    return GuidData;
}());



/***/ }),

/***/ 5077:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v": () => /* binding */ SharedConst
/* harmony export */ });
var SharedConst = (function () {
    function SharedConst() {
    }
    SharedConst.Const = {
        Colors: {
            colorContent: 'cyan',
            colorLayout: 'lightsteelblue',
            colorMediaLibrary: 'chocolate',
            colorSystem: 'lightgreen',
            colorTemplates: 'white',
            ConsoleStyles: {
                StyleBgYellow: "[43m",
                StyleBgRed: "[41m",
                StyleEsc: "\x1b",
                StyleFgBlue: "[34m",
                StyleFgGreen: "[32m",
                StyleFgMagenta: "[35m",
                StyleFgRed: "[31m",
                StyleFgYellow: "[33m",
                StyleReset: "[0m",
            }
        },
        Debug: {
            ForceLoggingEnabled: true,
            SpeedUpAutoSaveIntervalFactor: 1,
        },
        IterHelper: {
            GrowthPerIteration: 0.5,
            MaxCount: {
                Default: 10,
                OverridePublishing: 15,
            },
            Timeouts: {
                Max: 3000,
                Default: 100,
            },
        },
        KeyWords: {
            Html: {
                Tags: {
                    Body: 'body',
                },
                beforeend: 'beforeend',
                optgroup: 'optgroup',
                Checkbox: 'checkbox',
                Checked: 'checked',
                Input: 'input',
                Label: 'label',
                For: 'for',
                Text: 'text',
                Number: 'number',
            },
            Javascript: {
                ReadyStates: {
                    Complete: "complete"
                },
                Events: {
                    Message: "message",
                },
            },
            NodeTagName: {
                IFrame: 'IFRAME',
            },
        },
        Logger: {
            MinTimeDiffMs: 100
        },
        ObjDiscriminator: {},
        Settings: {
            Defaults: {
                EnableDebugging: false,
                LogToStorage: false,
                UseCompactCss: false,
                LastUsedLogToStorageKey: 0
            }
        },
        QueryStringHeValues: {
            heTemplateManager: "template%20manager",
        },
        QueryStringKey: {
            XmlControl: 'xmlcontrol',
        },
        Regex: {
            ContentEditor: /Content.*?Editor/ig,
            CleanGuid: /{|-|}/ig,
            NbSp: /&nbsp;/ig,
            QueryStrSeparatorQuest: /\?/gi,
            Path: {
                PackageDesigner: /\/sitecore\/shell/ig,
            },
            PageType: {
                Shell: /\/sitecore\/shell/ig,
                Edit: /sc_itemid=.*sc_mode=edit/ig,
                Normal: /sc_itemid=.*sc_mode=normal/ig,
                Preview: /sc_itemid=.*sc_mode=preview/ig,
                XmlControl: /.*xmlcontrol=Application/ig,
                PackageDesigner: /.*xmlcontrol=Application&.*Package+Designer/ig,
                ContentManager: /\/sitecore\/shell\/Applications\/Content%20Manager/ig,
            },
        },
        UrlRelativePrefix: {
            IconCache: '/temp/iconcache/',
            IconShellStandardMedia: '/sitecore/shell/themes/standard/~/media/',
        },
        UrlSuffix: {
            Desktop: '/sitecore/shell/default.aspx',
            Login: '/sitecore/login',
            LaunchPad: '/client/applications/launchpad',
            CE: '/sitecore/shell/Applications/Content Editor.aspx?sc_bw=1',
            SitecoreShellApplicationsContentEditor: 'sitecore/shell/Applications/Content-Editor',
            None: '/',
            AboutBlank: 'about:blank',
        },
    };
    return SharedConst;
}());



/***/ }),

/***/ 6679:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "B": () => /* binding */ CommonCore,
/* harmony export */   "a": () => /* binding */ _CommonBase
/* harmony export */ });
var CommonCore = (function () {
    function CommonCore() {
        this.Logger = null;
        this.ErrorHand = null;
        this.TaskMonitor = null;
    }
    return CommonCore;
}());

var _CommonBase = (function () {
    function _CommonBase(commonCore) {
        this.CommonCore = null;
        this.Logger = null;
        this.ErrorHand = null;
        this.TaskMonitor = null;
        this.SetCore(commonCore);
    }
    _CommonBase.prototype.SetCore = function (commonCore) {
        if (commonCore !== null) {
            this.CommonCore = commonCore;
            this.Logger = commonCore.Logger;
            this.ErrorHand = commonCore.ErrorHand;
            this.TaskMonitor = commonCore.TaskMonitor;
        }
    };
    return _CommonBase;
}());



/***/ })

},
0,[[5779,407]]]);