(self["webpackChunksitecoretoolbarscriptlets"] = self["webpackChunksitecoretoolbarscriptlets"] || []).push([[54],{

/***/ 3967:
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";

// UNUSED EXPORTS: ElementAnchorJacket, ElementDivJacket

// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/DOMJacket/scripts/Elements/ElementJacketBaseOfType.js + 4 modules
var ElementJacketBaseOfType = __webpack_require__(6310);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/DOMJacket/scripts/Elements/ElementAnchorJacket.js

class ElementAnchorJacket extends (/* unused pure expression or super */ null && (ElementJacketOfType)) {
}

// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/DOMJacket/scripts/Elements/ElementDivJacket.js
var ElementDivJacket = __webpack_require__(3195);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/DOMJacket/scripts/DOMJacketEntry.js




/***/ }),

/***/ 3195:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "j": () => /* binding */ ElementDivJacket
/* harmony export */ });
/* harmony import */ var _ElementJacketBaseOfType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6310);

class ElementDivJacket extends _ElementJacketBaseOfType__WEBPACK_IMPORTED_MODULE_0__/* .ElementJacketOfType */ .X {
    constructor(commonCore, htmlElement) {
        super(commonCore, htmlElement);
    }
}


/***/ }),

/***/ 6310:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "X": () => /* binding */ ElementJacketOfType
});

// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Agents/Drones/IterationDrone/IterationDrone.js
var IterationDrone = __webpack_require__(442);
// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/_CommonCoreBase.js
var _CommonCoreBase = __webpack_require__(6679);
// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Events/_HindSiteEvent/HindeSiteEvent_Subject.js
var HindeSiteEvent_Subject = __webpack_require__(4697);
// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Enums/70 - TypeDiscriminator.js
var _70_TypeDiscriminator = __webpack_require__(8162);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/DOMJacket/scripts/Events/ElementJacketMutationEvent/ElementJacketMutationEvent_Subject.js


class ElementJacketMutationEvent_Subject extends HindeSiteEvent_Subject/* _HindeSiteEvent_Subject */.C {
    constructor() {
        super(...arguments);
        this.TypeDiscriminator = _70_TypeDiscriminator/* TypeDiscriminator.ElementJacketMutationEvent_Subject */.g.ElementJacketMutationEvent_Subject;
        this.ShowLogActions = true;
    }
}

// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/Events/_HindSiteEvent/HindSiteEvent_Observer.js
var HindSiteEvent_Observer = __webpack_require__(2005);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/DOMJacket/scripts/Events/NativeIFrameAddedEvent/NativeAddRemoveEvent_Observer.js


class NativeAddRemoveEvent_Observer extends HindSiteEvent_Observer/* _HindSiteEvent_Observer */.k {
    constructor(commonCore, callback) {
        super(commonCore, NativeAddRemoveEvent_Observer.name, callback);
        this.TypeDiscriminator = _70_TypeDiscriminator/* TypeDiscriminator.NativeAddRemoveEvent_Observer */.g.NativeAddRemoveEvent_Observer;
    }
}

// EXTERNAL MODULE: ./AutoBuild/TsTranspiled/Shared/scripts/SharedConst.js
var SharedConst = __webpack_require__(5077);
// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/DOMJacket/scripts/Events/NativeIFrameAddedEvent/NativeAddRemoveEvent_Subject.js




class NativeAddRemoveEvent_Subject extends HindeSiteEvent_Subject/* _HindeSiteEvent_Subject */.C {
    constructor(commonCore, elemJacket, watcherParams) {
        super(commonCore);
        this.TypeDiscriminator = _70_TypeDiscriminator/* TypeDiscriminator.FrameJacketAddRemoveEvent_Subject */.g.FrameJacketAddRemoveEvent_Subject;
        this.ShowLogActions = true;
        this.Logger.CTORStart(NativeAddRemoveEvent_Subject.name);
        if (!elemJacket) {
            this.ErrorHand.HandleFatalError(NativeAddRemoveEvent_Subject.name, 'No target doc');
        }
        this.ContainerElemJacket = elemJacket;
        this.WatcherParams = watcherParams;
        this.InitMutationObserver();
        this.Logger.CTOREnd(NativeAddRemoveEvent_Subject.name);
    }
    HandleRemovedNodes(removedNodes) {
        let removedIframeIds = [];
        removedNodes.forEach((removedNode) => {
            if (removedNode instanceof HTMLIFrameElement) {
                let htmlIFrameElement = removedNode;
                if (htmlIFrameElement) {
                    removedIframeIds.push(htmlIFrameElement.id);
                }
            }
        });
        return removedIframeIds;
    }
    HandleAddedNodes(addedNodes) {
        this.Logger.FuncStart([NativeAddRemoveEvent_Subject.name, this.HandleAddedNodes.name], 'for: ' + this.WatcherParams.OwnerFriendly);
        let addedElementJackets = [];
        addedNodes.forEach((addedNode) => {
            if (addedNode instanceof HTMLElement) {
                let passesFilterTest = true;
                let addedHtmlElement = addedNode;
                if (this.WatcherParams.TagFilter && this.WatcherParams.TagFilter.length > 0) {
                    passesFilterTest = (this.WatcherParams.TagFilter.indexOf(addedHtmlElement.tagName) > -1);
                }
                if (passesFilterTest && addedHtmlElement.tagName === SharedConst/* SharedConst.Const.KeyWords.NodeTagName.IFrame */.v.Const.KeyWords.NodeTagName.IFrame) {
                    passesFilterTest = passesFilterTest && addedHtmlElement.contentDocument !== null;
                }
                if (passesFilterTest) {
                    if (addedHtmlElement instanceof HTMLIFrameElement) {
                        addedElementJackets.push(new ElementJacketOfType(this.CommonCore, addedHtmlElement));
                    }
                }
            }
        });
        this.Logger.FuncEnd([NativeAddRemoveEvent_Subject.name, this.HandleAddedNodes.name], addedElementJackets.length + '  for: ' + this.WatcherParams.OwnerFriendly);
        return addedElementJackets;
    }
    CallBackOnNativeMutation(mutations) {
        this.Logger.FuncStart(this.CallBackOnNativeMutation.name);
        if (this.HasObservers()) {
            mutations.forEach((mutation, index) => {
                this.Logger.Log('processing mutation ' + (index + 1) + ':' + mutations.length);
                this.Logger.LogVal('mutation.addedNodes.length ', mutation.addedNodes.length);
                if (mutation.type === 'childList' && (mutation.addedNodes.length > 0 || mutation.removedNodes.length > 0)) {
                    let nativeDomAddRemoveEvent_Payload = {
                        AddedElementJacket: null,
                        RemovedIFrameId: null,
                        OnBehalfOfFriendly: this.WatcherParams.OwnerFriendly
                    };
                    if (mutation.addedNodes.length > 0) {
                        let addedNodes = this.HandleAddedNodes(mutation.addedNodes);
                        addedNodes.forEach((addedNode) => {
                            nativeDomAddRemoveEvent_Payload.AddedElementJacket = addedNode;
                            nativeDomAddRemoveEvent_Payload.RemovedIFrameId = null;
                            this.NotifyObserversAsync(nativeDomAddRemoveEvent_Payload);
                        });
                    }
                    if (mutation.removedNodes.length > 0) {
                        let removedNodeIds = this.HandleRemovedNodes(mutation.removedNodes);
                        removedNodeIds.forEach((removedNodeId) => {
                            nativeDomAddRemoveEvent_Payload.AddedElementJacket = null;
                            nativeDomAddRemoveEvent_Payload.RemovedIFrameId = removedNodeId;
                            this.Logger.LogAsJsonPretty('removed', nativeDomAddRemoveEvent_Payload);
                            this.NotifyObserversAsync(nativeDomAddRemoveEvent_Payload);
                        });
                    }
                }
            });
        }
        else {
            this.Logger.Log('No observers');
        }
        this.Logger.FuncEnd(this.CallBackOnNativeMutation.name);
    }
    InitMutationObserver() {
        this.Logger.FuncStart(this.InitMutationObserver.name);
        try {
            if (this.ContainerElemJacket) {
                let self = this;
                let mutationObserver = new MutationObserver((mutations) => { self.CallBackOnNativeMutation(mutations); });
                this.Logger.LogAsJsonPretty(this.InitMutationObserver.name, this.WatcherParams);
                if (this.WatcherParams) {
                    mutationObserver.observe(this.ContainerElemJacket.NativeElement, { attributes: this.WatcherParams.Attributes, subtree: this.WatcherParams.Subtree, childList: this.WatcherParams.ChildList });
                }
                else {
                    this.ErrorHand.HandleFatalError(this.InitMutationObserver.name, ' no params');
                }
            }
            else {
                this.ErrorHand.HandleFatalError(this.InitMutationObserver.name, 'no container element');
            }
        }
        catch (err) {
            this.ErrorHand.HandleFatalError(this.InitMutationObserver.name, err);
        }
        this.Logger.FuncEnd(this.InitMutationObserver.name);
    }
}

// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/DOMJacket/scripts/Document/ElementJacketWatcher.js
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




class ElementJacketWatcher extends _CommonCoreBase/* _CommonBase */.a {
    constructor(commonCore, elementJacket, watcherParams) {
        super(commonCore);
        this.ErrorHand.ThrowIfNullOrUndefined(ElementJacketWatcher.name, [elementJacket]);
        this.ElementJacket = elementJacket;
        this.WatcherParams = watcherParams;
        this.InstantiateInstance();
    }
    InstantiateInstance() {
        this.Logger.FuncStart(this.InstantiateInstance.name, ElementJacketWatcher.name);
        this.ElemJacketMutationEvent_Subject = new ElementJacketMutationEvent_Subject(this.CommonCore);
        this.NativeAddRemoveEvent_Subject = new NativeAddRemoveEvent_Subject(this.CommonCore, this.ElementJacket, this.WatcherParams);
        this.NativeAddRemoveEvent_Observer = new NativeAddRemoveEvent_Observer(this.CommonCore, this.CallBackOnNativeAddRemoveEventAsync.bind(this));
        this.WireInstanceEvents();
        this.Logger.FuncEnd(this.InstantiateInstance.name, ElementJacketWatcher.name);
    }
    WireInstanceEvents() {
        this.Logger.FuncStart([ElementJacketWatcher.name, this.WireInstanceEvents.name]);
        this.NativeAddRemoveEvent_Subject.RegisterObserver(this.NativeAddRemoveEvent_Observer);
        this.Logger.FuncEnd([ElementJacketWatcher.name, this.WireInstanceEvents.name]);
    }
    CallBackOnNativeAddRemoveEventAsync(nativeIFrameAddRemoveEvent_Payload) {
        return __awaiter(this, void 0, void 0, function* () {
            this.Logger.FuncStart([ElementJacketWatcher.name, this.CallBackOnNativeAddRemoveEventAsync.name], 'On Behalf of: ' + nativeIFrameAddRemoveEvent_Payload.OnBehalfOfFriendly);
            try {
                let payload = {
                    AddedGenericElemJacket: nativeIFrameAddRemoveEvent_Payload.AddedElementJacket,
                    RemovedIFrameId: nativeIFrameAddRemoveEvent_Payload.RemovedIFrameId
                };
                this.ElemJacketMutationEvent_Subject.NotifyObserversAsync(payload);
            }
            catch (err) {
                this.ErrorHand.HandleFatalError(this.CallBackOnNativeAddRemoveEventAsync.name, err);
            }
            this.Logger.FuncEnd([ElementJacketWatcher.name, this.CallBackOnNativeAddRemoveEventAsync.name], 'On Behalf of: ' + nativeIFrameAddRemoveEvent_Payload.OnBehalfOfFriendly);
        });
    }
}

// CONCATENATED MODULE: ./AutoBuild/TsTranspiled/DOMJacket/scripts/Elements/ElementJacketBaseOfType.js
var ElementJacketBaseOfType_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



class ElementJacketOfType extends _CommonCoreBase/* _CommonBase */.a {
    constructor(commonCore, htmlElement) {
        super(commonCore);
        this.ElemJacketWatchers = [];
        this.NativeElement = htmlElement;
        this.NodeTagName = htmlElement.tagName;
    }
    Click() {
        this.NativeElement.click();
    }
    AddWatcher(watcherParams) {
        return ElementJacketBaseOfType_awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                this.Logger.FuncStart([ElementJacketOfType.name, this.AddWatcher.name], (watcherParams && watcherParams.OwnerFriendly) ? watcherParams.OwnerFriendly : 'no watcher params');
                let jacketElemWatcher = new ElementJacketWatcher(this.CommonCore, this, watcherParams);
                this.ElemJacketWatchers.push(jacketElemWatcher);
                if (jacketElemWatcher) {
                    resolve(jacketElemWatcher.ElemJacketMutationEvent_Subject);
                }
                else {
                    reject(this.ErrorHand.FormatRejectMessage([ElementJacketOfType.name, this.AddWatcher.name], 'Unknown reason'));
                }
                this.Logger.FuncEnd([ElementJacketOfType.name, this.AddWatcher.name], (watcherParams && watcherParams.OwnerFriendly) ? watcherParams.OwnerFriendly : 'no watcher params');
            });
        });
    }
    querySelector(selector) {
        let toReturn = null;
        let candidate = this.NativeElement.querySelector(selector);
        if (candidate) {
            toReturn = new ElementJacketOfType(this.CommonCore, candidate);
        }
        return toReturn;
    }
    WaitFor(selector, friendly = '') {
        return ElementJacketBaseOfType_awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => ElementJacketBaseOfType_awaiter(this, void 0, void 0, function* () {
                let selectorAr = [];
                if (Array.isArray(selector)) {
                    selectorAr = selector;
                }
                else {
                    selectorAr.push(selector);
                }
                this.ErrorHand.ThrowIfNullOrUndefined([ElementJacketOfType.name, this.WaitFor.name], selectorAr);
                var toReturnElemJacket = null;
                var iterationJr = new IterationDrone/* IterationDrone */.v(this.CommonCore, this.WaitFor.name + ' : ' + selectorAr.join(',') + ' ' + friendly, false);
                let foundSelector = '';
                var foundHtmlElement = null;
                while (!toReturnElemJacket && iterationJr.DecrementAndKeepGoing()) {
                    for (var idx = 0; idx < selectorAr.length; idx++) {
                        foundSelector = selectorAr[idx];
                        foundHtmlElement = this.NativeElement.querySelector(foundSelector);
                        if (foundHtmlElement) {
                            toReturnElemJacket = new ElementJacketOfType(this.CommonCore, foundHtmlElement);
                            break;
                        }
                    }
                    yield iterationJr.Wait();
                }
                if (foundHtmlElement) {
                    resolve(toReturnElemJacket);
                }
                else {
                    if (iterationJr.IsExhausted) {
                        reject(iterationJr.IsExhaustedMsg);
                    }
                    else {
                        reject('unknown reason');
                    }
                }
            }));
        });
    }
    WaitForThenClick(selectorAr) {
        return new Promise((resolve, reject) => ElementJacketBaseOfType_awaiter(this, void 0, void 0, function* () {
            this.ErrorHand.ThrowIfNullOrUndefined(this.WaitForThenClick.name, [selectorAr]);
            yield this.WaitFor(selectorAr)
                .then((elemJacket) => elemJacket.Click())
                .then(() => resolve())
                .catch((err) => reject(this.ErrorHand.FormatRejectMessage(this.WaitForThenClick.name, err)));
        }));
    }
    RaceWaitAndClick(selector) {
        return ElementJacketBaseOfType_awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => ElementJacketBaseOfType_awaiter(this, void 0, void 0, function* () {
                yield this.WaitForThenClick([selector.sc920, selector.sc820])
                    .then(() => resolve())
                    .catch((err) => reject(this.RaceWaitAndClick.name + ' | ' + err));
            }));
        });
    }
    WaitForElemToHaveClassOrReject(classNames, friendly) {
        return ElementJacketBaseOfType_awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => ElementJacketBaseOfType_awaiter(this, void 0, void 0, function* () {
                this.Logger.FuncStart(this.WaitForElemToHaveClassOrReject.name, friendly + ' - ' + classNames);
                this.ErrorHand.ThrowIfNullOrUndefined(this.WaitForElemToHaveClassOrReject.name, [classNames]);
                var elemHasClassName = false;
                var iterationJr = new IterationDrone/* IterationDrone */.v(this.CommonCore, this.WaitForElemToHaveClassOrReject.name + ' : ' + classNames + ' ' + friendly, true);
                while (!elemHasClassName && iterationJr.DecrementAndKeepGoing()) {
                    let classList = this.NativeElement.classList;
                    classNames.forEach((className) => {
                        if (classList.contains(className)) {
                            elemHasClassName = true;
                        }
                    });
                    if (elemHasClassName) {
                        resolve();
                    }
                    else {
                        yield iterationJr.Wait();
                    }
                }
                if (iterationJr.IsExhausted) {
                    reject(iterationJr.IsExhaustedMsg);
                }
                this.Logger.FuncEnd(this.WaitForElemToHaveClassOrReject.name, friendly);
            }));
        });
    }
    ZindexAsInt() {
        let toReturn = -99;
        if (this.NativeElement.style && this.NativeElement.style.zIndex) {
            toReturn = parseInt(this.NativeElement.style.zIndex);
        }
        this.Logger.LogVal(this.ZindexAsInt.name, toReturn.toString());
        return toReturn;
    }
}


/***/ }),

/***/ 442:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v": () => /* binding */ IterationDrone
/* harmony export */ });
/* harmony import */ var _CommonCoreBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6679);
/* harmony import */ var _SharedConst__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5077);


class IterationDrone extends _CommonCoreBase__WEBPACK_IMPORTED_MODULE_1__/* ._CommonBase */ .a {
    constructor(hindeCore, nickname, logThisDroneInstance, maxIterations = null) {
        super(hindeCore);
        this.IsExhaustedMsg = 'Iteration helper exhausted';
        this.IsCanceled = false;
        this.LogThisDroneInstance = logThisDroneInstance;
        if (!maxIterations) {
            maxIterations = _SharedConst__WEBPACK_IMPORTED_MODULE_0__/* .SharedConst.Const.IterHelper.MaxCount.Default */ .v.Const.IterHelper.MaxCount.Default;
        }
        this.MaxIterations = maxIterations;
        this.CurrentIteration = maxIterations;
        this.Timeout = _SharedConst__WEBPACK_IMPORTED_MODULE_0__/* .SharedConst.Const.IterHelper.Timeouts.Default */ .v.Const.IterHelper.Timeouts.Default;
        this.NickName = nickname;
        this.IsExhausted = false;
    }
    DecrementAndKeepGoing() {
        var toReturn = false;
        if (this.CurrentIteration > 0 && !this.TaskMonitor.IsCancelRequested()) {
            this.CurrentIteration -= 1;
            this.Timeout += this.Timeout * _SharedConst__WEBPACK_IMPORTED_MODULE_0__/* .SharedConst.Const.IterHelper.GrowthPerIteration */ .v.Const.IterHelper.GrowthPerIteration;
            if (this.Timeout > _SharedConst__WEBPACK_IMPORTED_MODULE_0__/* .SharedConst.Const.IterHelper.Timeouts.Max */ .v.Const.IterHelper.Timeouts.Max) {
                this.Timeout = _SharedConst__WEBPACK_IMPORTED_MODULE_0__/* .SharedConst.Const.IterHelper.Timeouts.Max */ .v.Const.IterHelper.Timeouts.Max;
            }
            if (this.LogThisDroneInstance) {
                this.Logger.Log(this.DecrementAndKeepGoing.name + ' ' + this.NickName + ' ' + this.CurrentIteration + ':' + this.MaxIterations + ' | cur. timeout: ' + this.Timeout);
            }
            toReturn = true;
        }
        else {
            toReturn = false;
            if (this.TaskMonitor.IsCancelRequested()) {
                this.ErrorHand.HandleCancelReaction('CANCEL REQUESTED', '-----------------------------------');
                this.IsCanceled = true;
            }
            else {
                this.IsExhausted = true;
                this.NotifyExhausted();
            }
        }
        return toReturn;
    }
    CurrentTimeout() {
        return this.Timeout;
    }
    NotifyExhausted() {
        if (this.LogThisDroneInstance) {
            this.Logger.Log('Iteration: ' + this.NickName + ' counter exhausted ' + this.CurrentIteration + ':' + this.MaxIterations);
        }
    }
    WaitAndThen(timeoutFunction) {
        if (this.LogThisDroneInstance) {
            this.Logger.FuncStart(this.WaitAndThen.name, this.NickName + ' ' + timeoutFunction.name);
        }
        var self = this;
        setTimeout(timeoutFunction(), self.Timeout);
        if (this.LogThisDroneInstance) {
            this.Logger.FuncEnd(this.WaitAndThen.name, this.NickName);
        }
    }
    Wait() {
        if (!this.OperationCancelled) {
            this.TaskMonitor.NotifyWaiting(true);
            return new Promise((resolve) => {
                setTimeout(() => {
                    this.TaskMonitor.NotifyWaiting(false);
                    resolve();
                }, this.Timeout);
            });
        }
    }
}


/***/ }),

/***/ 1579:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "y": () => /* binding */ StaticHelpers
/* harmony export */ });
/* harmony import */ var _Enums_10_MessageFlag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8979);
/* harmony import */ var _Enums_30_SettingKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8244);
/* harmony import */ var _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9702);
/* harmony import */ var _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2580);
/* harmony import */ var _Enums_50_scWindowType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7644);
/* harmony import */ var _Enums_SnapShotFlavor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(6189);






class StaticHelpers {
    static MinToMs(minutes) {
        return minutes * 60 * 1000;
    }
    static FlavorAsString(flavor) {
        return 'Flavor.' + _Enums_SnapShotFlavor__WEBPACK_IMPORTED_MODULE_5__/* .SnapShotFlavor */ .n[flavor] + '(' + flavor + ')';
    }
    static SettingKeyAsString(settingKey) {
        let toReturn = '';
        try {
            toReturn = 'SettingKey.' + _Enums_30_SettingKey__WEBPACK_IMPORTED_MODULE_1__/* .SettingKey */ .n[settingKey] + '(' + settingKey + ')';
        }
        catch (err) {
            toReturn = err;
        }
        return toReturn;
    }
    static ScWindowTypeFriendly(windowType) {
        return _Enums_50_scWindowType__WEBPACK_IMPORTED_MODULE_4__/* .ScWindowType */ .D[windowType];
    }
    static MakeFriendlyDate(date) {
        var toReturn = '';
        var workingDate = new Date(date);
        if (workingDate) {
            var month = StaticHelpers.BufferString((workingDate.getMonth() + 1).toString(), 2, _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Zero */ .D.Zero, _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__/* .BufferDirection.left */ .z.left);
            var day = StaticHelpers.BufferString(workingDate.getDate().toString(), 2, _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Zero */ .D.Zero, _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__/* .BufferDirection.left */ .z.left);
            var min = StaticHelpers.BufferString(workingDate.getMinutes().toString(), 2, _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Zero */ .D.Zero, _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__/* .BufferDirection.left */ .z.left);
            var hoursRaw = workingDate.getHours();
            var hourClean = hoursRaw ? hoursRaw : 12;
            var hourCleanStr = StaticHelpers.BufferString(hourClean.toString(), 2, _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Zero */ .D.Zero, _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__/* .BufferDirection.left */ .z.left);
            toReturn = month + '.' + day + ' ' + hourCleanStr + ':' + min;
        }
        else {
            toReturn = '{error}';
            throw (this.MakeFriendlyDate.name, 'no date provided');
        }
        return toReturn;
    }
    static IsNullOrUndefined(testSubject) {
        let toReturn = false;
        try {
            if (testSubject instanceof Array) {
                testSubject.forEach((testSubject) => toReturn = toReturn || this.IsNullOrUndefined(testSubject));
            }
            else {
                toReturn = (typeof testSubject === 'undefined' || testSubject === null);
            }
        }
        catch (err) {
            console.log(err);
        }
        return toReturn;
    }
    static getBuffChar(buffCharEnum) {
        var buffChar = ' ';
        if (buffCharEnum === _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.space */ .D.space) {
            buffChar = ' ';
        }
        else if (buffCharEnum === _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Nbsp */ .D.Nbsp) {
            buffChar = '&nbsp;';
        }
        else if (buffCharEnum === _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Period */ .D.Period) {
            buffChar = '.';
        }
        else if (buffCharEnum === _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Zero */ .D.Zero) {
            buffChar = '0';
        }
        return buffChar;
    }
    static BufferString(str, desiredLength, buffCharEnum, direction) {
        var toReturn = str;
        var buffChar = this.getBuffChar(buffCharEnum);
        if (toReturn.length > desiredLength) {
            if (desiredLength > 6) {
                toReturn = toReturn.substring(0, desiredLength - 3) + '...';
            }
            else {
                toReturn = toReturn.substring(0, desiredLength);
            }
        }
        if (toReturn.length < desiredLength) {
            var bufferCharNeeded = desiredLength - toReturn.length;
            for (var idx = 0; idx < bufferCharNeeded; idx++) {
                if (direction === _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__/* .BufferDirection.left */ .z.left) {
                    toReturn = buffChar + toReturn;
                }
                else {
                    toReturn = toReturn + buffChar;
                }
            }
        }
        return toReturn;
    }
    static MsgFlagAsString(msg) {
        var toReturn = "{error}";
        if (msg) {
            try {
                toReturn = 'MsgFlag.' + _Enums_10_MessageFlag__WEBPACK_IMPORTED_MODULE_0__/* .ReqCommandMsgFlag */ .r[msg] + '(' + msg + ')';
            }
            catch (err) {
                console.log(this.MsgFlagAsString.name + ' ' + err);
            }
        }
        return 'flag: ' + toReturn;
    }
}


/***/ }),

/***/ 8979:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "r": () => /* binding */ ReqCommandMsgFlag
/* harmony export */ });
var ReqCommandMsgFlag;
(function (ReqCommandMsgFlag) {
    ReqCommandMsgFlag[ReqCommandMsgFlag["Unknown"] = 0] = "Unknown";
    ReqCommandMsgFlag[ReqCommandMsgFlag["GetAllStorageOneWindow"] = 10003063] = "GetAllStorageOneWindow";
    ReqCommandMsgFlag[ReqCommandMsgFlag["NewWindowTest"] = 10943188] = "NewWindowTest";
    ReqCommandMsgFlag[ReqCommandMsgFlag["Ping"] = 10100148] = "Ping";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqRemoveFromStorage"] = 10827628] = "ReqRemoveFromStorage";
    ReqCommandMsgFlag[ReqCommandMsgFlag["CancelCommand"] = 10125827] = "CancelCommand";
    ReqCommandMsgFlag[ReqCommandMsgFlag["OpenCERibbonNavigateLinks"] = 10391090] = "OpenCERibbonNavigateLinks";
    ReqCommandMsgFlag[ReqCommandMsgFlag["OpenCERibbonPresentationDetails"] = 10714851] = "OpenCERibbonPresentationDetails";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqAddCETab"] = 10625684] = "ReqAddCETab";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqAdminB"] = 10889199] = "ReqAdminB";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqClosePopUpWindow"] = 10700124] = "ReqClosePopUpWindow";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqDebugAutoSnapShot"] = 10463876] = "ReqDebugAutoSnapShot";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqDebugClearConsole"] = 10719358] = "ReqDebugClearConsole";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqDebugTriggerReload"] = 10591674] = "ReqDebugTriggerReload";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqGoDesktop"] = 10667844] = "ReqGoDesktop";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqLoginWithAdminB"] = 10587818] = "ReqLoginWithAdminB";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqOpenCE"] = 10466461] = "ReqOpenCE";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqQuickPublish"] = 10123608] = "ReqQuickPublish";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqSetScModeEdit"] = 10533683] = "ReqSetScModeEdit";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqSetScModeNormal"] = 10544213] = "ReqSetScModeNormal";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqSetScModePreview"] = 10151645] = "ReqSetScModePreview";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqSetStateOfSitecoreNewWindow"] = 10202348] = "ReqSetStateOfSitecoreNewWindow";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqSetStateOfSitecoreSameWindow"] = 10074231] = "ReqSetStateOfSitecoreSameWindow";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqTakeAndSaveSnapShot"] = 10495640] = "ReqTakeAndSaveSnapShot";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqToggleCompactCss"] = 10178105] = "ReqToggleCompactCss";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqToggleFavorite"] = 10462769] = "ReqToggleFavorite";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqUpdateNickName"] = 10899837] = "ReqUpdateNickName";
    ReqCommandMsgFlag[ReqCommandMsgFlag["SetStateFromMostRecent"] = 10611496] = "SetStateFromMostRecent";
    ReqCommandMsgFlag[ReqCommandMsgFlag["SetStateFromQueryString"] = 10754569] = "SetStateFromQueryString";
    ReqCommandMsgFlag[ReqCommandMsgFlag["SetStateFromStorage"] = 10984640] = "SetStateFromStorage";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqToggleRawValues"] = 10125894] = "ReqToggleRawValues";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqNavigateBack"] = 10238058] = "ReqNavigateBack";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqNavigateForward"] = 10304388] = "ReqNavigateForward";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqNavigateUp"] = 10872523] = "ReqNavigateUp";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqGoToSelected"] = 10615549] = "ReqGoToSelected";
    ReqCommandMsgFlag[ReqCommandMsgFlag["ReqDebugContentFatalError"] = 10796656] = "ReqDebugContentFatalError";
    ReqCommandMsgFlag[ReqCommandMsgFlag["GetStateOfWindow"] = 10063628] = "GetStateOfWindow";
})(ReqCommandMsgFlag || (ReqCommandMsgFlag = {}));


/***/ }),

/***/ 8244:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "n": () => /* binding */ SettingKey
/* harmony export */ });
var SettingKey;
(function (SettingKey) {
    SettingKey[SettingKey["unknown"] = 0] = "unknown";
    SettingKey[SettingKey["AutoLogin"] = 30415718] = "AutoLogin";
    SettingKey[SettingKey["DebugKeepDialogOpen"] = 3030395177] = "DebugKeepDialogOpen";
    SettingKey[SettingKey["AutoSaveIntervalMin"] = 880521] = "AutoSaveIntervalMin";
    SettingKey[SettingKey["UseCompactCss"] = 30605306] = "UseCompactCss";
    SettingKey[SettingKey["AutoSaveRetainDays"] = 30077911] = "AutoSaveRetainDays";
    SettingKey[SettingKey["AutoRenameCeButton"] = 30710590] = "AutoRenameCeButton";
    SettingKey[SettingKey["MaxAutoSaveCount"] = 30338682] = "MaxAutoSaveCount";
    SettingKey[SettingKey["EnableDebugging"] = 30775114] = "EnableDebugging";
    SettingKey[SettingKey["LgndBrowserState"] = 30226039] = "LgndBrowserState";
    SettingKey[SettingKey["LgndContentState"] = 30330190] = "LgndContentState";
    SettingKey[SettingKey["LgndForeSite"] = 30967099] = "LgndForeSite";
    SettingKey[SettingKey["LgndHindSite"] = 30669129] = "LgndHindSite";
    SettingKey[SettingKey["LgndMessages"] = 30755408] = "LgndMessages";
    SettingKey[SettingKey["LgndPopUpLog"] = 30243921] = "LgndPopUpLog";
    SettingKey[SettingKey["LgndPopUpState"] = 30868073] = "LgndPopUpState";
    SettingKey[SettingKey["LgndSettings"] = 30342605] = "LgndSettings";
    SettingKey[SettingKey["LastUsedLogToStorageKey"] = 30046822] = "LastUsedLogToStorageKey";
    SettingKey[SettingKey["AutoSnapshotBeforeWindowChange"] = 30966373] = "AutoSnapshotBeforeWindowChange";
    SettingKey[SettingKey["LgndPopUpDebug"] = 30583894] = "LgndPopUpDebug";
    SettingKey[SettingKey["AutoRestoreState"] = 30581057] = "AutoRestoreState";
})(SettingKey || (SettingKey = {}));


/***/ }),

/***/ 7644:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": () => /* binding */ ScWindowType
/* harmony export */ });
var ScWindowType;
(function (ScWindowType) {
    ScWindowType[ScWindowType["Unknown"] = 0] = "Unknown";
    ScWindowType[ScWindowType["AccessViewer"] = 50807454] = "AccessViewer";
    ScWindowType[ScWindowType["Archive"] = 50572312] = "Archive";
    ScWindowType[ScWindowType["ContentEditor"] = 50570457] = "ContentEditor";
    ScWindowType[ScWindowType["ControlPanel"] = 50180952] = "ControlPanel";
    ScWindowType[ScWindowType["Debug"] = 50053957] = "Debug";
    ScWindowType[ScWindowType["Desktop"] = 50670576] = "Desktop";
    ScWindowType[ScWindowType["DomainManager"] = 50904399] = "DomainManager";
    ScWindowType[ScWindowType["EmailExperienceManager"] = 50111451] = "EmailExperienceManager";
    ScWindowType[ScWindowType["ExperienceAnalytics"] = 50849816] = "ExperienceAnalytics";
    ScWindowType[ScWindowType["ExperienceEditor_Edit"] = 50739548] = "ExperienceEditor_Edit";
    ScWindowType[ScWindowType["ExperienceEditor_Normal"] = 50417587] = "ExperienceEditor_Normal";
    ScWindowType[ScWindowType["ExperienceEditor_Preview"] = 50495346] = "ExperienceEditor_Preview";
    ScWindowType[ScWindowType["ExperienceOptimization"] = 50860380] = "ExperienceOptimization";
    ScWindowType[ScWindowType["ExperienceProfile"] = 50307227] = "ExperienceProfile";
    ScWindowType[ScWindowType["FallBack"] = 50657295] = "FallBack";
    ScWindowType[ScWindowType["FederatedExperienceManager"] = 50999497] = "FederatedExperienceManager";
    ScWindowType[ScWindowType["Forms"] = 50698620] = "Forms";
    ScWindowType[ScWindowType["InstallationWizard"] = 50201337] = "InstallationWizard";
    ScWindowType[ScWindowType["InstalledLicenses"] = 50979897] = "InstalledLicenses";
    ScWindowType[ScWindowType["KeyboardMap"] = 50683086] = "KeyboardMap";
    ScWindowType[ScWindowType["Launchpad"] = 50206433] = "Launchpad";
    ScWindowType[ScWindowType["LicenseDetails"] = 50268242] = "LicenseDetails";
    ScWindowType[ScWindowType["ListManager"] = 50595779] = "ListManager";
    ScWindowType[ScWindowType["LoginPage"] = 50010467] = "LoginPage";
    ScWindowType[ScWindowType["LogViewer"] = 50500367] = "LogViewer";
    ScWindowType[ScWindowType["MarketingAutomation"] = 50921088] = "MarketingAutomation";
    ScWindowType[ScWindowType["MarketingControlPanel"] = 50528944] = "MarketingControlPanel";
    ScWindowType[ScWindowType["MediaLibrary"] = 50351702] = "MediaLibrary";
    ScWindowType[ScWindowType["PackageDesigner"] = 50363323] = "PackageDesigner";
    ScWindowType[ScWindowType["PathAnalyzer"] = 50854514] = "PathAnalyzer";
    ScWindowType[ScWindowType["Publish"] = 50797841] = "Publish";
    ScWindowType[ScWindowType["RecycleBin"] = 50374978] = "RecycleBin";
    ScWindowType[ScWindowType["RoleManager"] = 50017991] = "RoleManager";
    ScWindowType[ScWindowType["Run"] = 50340856] = "Run";
    ScWindowType[ScWindowType["ScanForBrokenLinks"] = 50599314] = "ScanForBrokenLinks";
    ScWindowType[ScWindowType["SecurityEditor"] = 50613652] = "SecurityEditor";
    ScWindowType[ScWindowType["TemplateManager"] = 50415542] = "TemplateManager";
    ScWindowType[ScWindowType["UpdateCenter"] = 50109795] = "UpdateCenter";
    ScWindowType[ScWindowType["UserManager"] = 50660151] = "UserManager";
    ScWindowType[ScWindowType["Workbox"] = 50799485] = "Workbox";
    ScWindowType[ScWindowType["InstallerBuildPackage"] = 50625341] = "InstallerBuildPackage";
    ScWindowType[ScWindowType["JqueryModalDialogs"] = 50130845] = "JqueryModalDialogs";
    ScWindowType[ScWindowType["ScContentProxy"] = 50807069] = "ScContentProxy";
    ScWindowType[ScWindowType["AppToolsInstallerDesigner"] = 50822813] = "AppToolsInstallerDesigner";
    ScWindowType[ScWindowType["InstallerBrowse"] = 50822814] = "InstallerBrowse";
})(ScWindowType || (ScWindowType = {}));


/***/ }),

/***/ 8162:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "g": () => /* binding */ TypeDiscriminator
/* harmony export */ });
var TypeDiscriminator;
(function (TypeDiscriminator) {
    TypeDiscriminator[TypeDiscriminator["unknown"] = 700] = "unknown";
    TypeDiscriminator[TypeDiscriminator["__ContentTreeBasedProxyMutationEvent__Subject"] = 70859200] = "__ContentTreeBasedProxyMutationEvent__Subject";
    TypeDiscriminator[TypeDiscriminator["__ContentTreeBasedProxyMutationEvent_Observer"] = 70343448] = "__ContentTreeBasedProxyMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["_ContentTreeBasedProxyMutationEvent_Observer"] = 70087112] = "_ContentTreeBasedProxyMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["ApiCore"] = 70766948] = "ApiCore";
    TypeDiscriminator[TypeDiscriminator["BaseBrowserProxy"] = 70346293] = "BaseBrowserProxy";
    TypeDiscriminator[TypeDiscriminator["BrowserTabAgent"] = 70190816] = "BrowserTabAgent";
    TypeDiscriminator[TypeDiscriminator["CommandStartEndCancelEvent_Observer"] = 70048622] = "CommandStartEndCancelEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["CommandStartEndCancelEvent_Subject"] = 70280832] = "CommandStartEndCancelEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["ContentReplyReceivedEvent_Observer"] = 70078936] = "ContentReplyReceivedEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["ContentReplyReceivedEvent_Subject"] = 70675592] = "ContentReplyReceivedEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["ContentTreeMutationEvent_Subject"] = 70779372] = "ContentTreeMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["DesktopProxyMutationEvent_Observer"] = 70934648] = "DesktopProxyMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["DesktopProxyMutationEvent_Subject"] = 70792635] = "DesktopProxyMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["ElementJacketMutationEvent_Observer"] = 70624331] = "ElementJacketMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["ElementJacketMutationEvent_Subject"] = 70179738] = "ElementJacketMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["DTAreaProxyMutationEvent_Observer"] = 70508413] = "DTAreaProxyMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["DTAreaProxyMutationEvent_Subject"] = 70628210] = "DTAreaProxyMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["DTFrameProxyMutationEvent_Observer"] = 70531819] = "DTFrameProxyMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["DTFrameProxyMutationEvent_Subject"] = 70263565] = "DTFrameProxyMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["NativeAddRemoveEvent_Observer"] = 70311064] = "NativeAddRemoveEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["FrameJacketAddRemoveEvent_Subject"] = 70238984] = "FrameJacketAddRemoveEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["HotKeyEvent_Subject"] = 70295417] = "HotKeyEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["ICommonCore"] = 70599578] = "ICommonCore";
    TypeDiscriminator[TypeDiscriminator["IErrorHandler"] = 70186081] = "IErrorHandler";
    TypeDiscriminator[TypeDiscriminator["IHindeCore"] = 70357621] = "IHindeCore";
    TypeDiscriminator[TypeDiscriminator["ILoggerAgent"] = 70139390] = "ILoggerAgent";
    TypeDiscriminator[TypeDiscriminator["KeyBoardComboEvent_Subject"] = 70944720] = "KeyBoardComboEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["NativeClassNameChangeEvent_Observer"] = 70293692] = "NativeClassNameChangeEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["NativeClassNameChangeEvent_Subject"] = 70124976] = "NativeClassNameChangeEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["SelectSnapshotUiMutationEvent_Observer"] = 70452323] = "SelectSnapshotUiMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["SelectSnapUiMutationEvent_ObserverWithCallback"] = 70704978] = "SelectSnapUiMutationEvent_ObserverWithCallback";
    TypeDiscriminator[TypeDiscriminator["SelectSnapUiMutationEvent_Subject"] = 70143636] = "SelectSnapUiMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["SingleClickEvent_Observer"] = 70607050] = "SingleClickEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["SingleClickEvent_Subject"] = 70079372] = "SingleClickEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["TaskListMutationEvent_Observer"] = 70917862] = "TaskListMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["TaskListMutationEvent_Subject"] = 70797515] = "TaskListMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["TaskMonitor"] = 70969342] = "TaskMonitor";
    TypeDiscriminator[TypeDiscriminator["ToastAgent"] = 70906481] = "ToastAgent";
    TypeDiscriminator[TypeDiscriminator["UiCommandFlagRaisedEvent_Observer"] = 70622105] = "UiCommandFlagRaisedEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["UiCommandFlagRaisedEvent_Subject"] = 70692290] = "UiCommandFlagRaisedEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["UiModuleManagerPassThroughEvent_Observer"] = 70488938] = "UiModuleManagerPassThroughEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["UiModuleManagerPassThroughEvent_Subject"] = 70080260] = "UiModuleManagerPassThroughEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["UiSettingBasedModuleMutationEvent_Observer"] = 70154996] = "UiSettingBasedModuleMutationEvent_Observer";
    TypeDiscriminator[TypeDiscriminator["UiSettingBasedModuleMutationEvent_Subject"] = 70935505] = "UiSettingBasedModuleMutationEvent_Subject";
    TypeDiscriminator[TypeDiscriminator["SolicitorForScheduledAutoSnapShot"] = 70187209] = "SolicitorForScheduledAutoSnapShot";
    TypeDiscriminator[TypeDiscriminator["CommandSolicitorForEventRestoreMostRecent"] = 70897006] = "CommandSolicitorForEventRestoreMostRecent";
    TypeDiscriminator[TypeDiscriminator["zzFuturec"] = 70711064] = "zzFuturec";
})(TypeDiscriminator || (TypeDiscriminator = {}));


/***/ }),

/***/ 9702:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": () => /* binding */ BufferChar
/* harmony export */ });
var BufferChar;
(function (BufferChar) {
    BufferChar[BufferChar["space"] = 0] = "space";
    BufferChar[BufferChar["Nbsp"] = 1] = "Nbsp";
    BufferChar[BufferChar["Period"] = 2] = "Period";
    BufferChar[BufferChar["Zero"] = 3] = "Zero";
})(BufferChar || (BufferChar = {}));


/***/ }),

/***/ 2580:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "z": () => /* binding */ BufferDirection
/* harmony export */ });
var BufferDirection;
(function (BufferDirection) {
    BufferDirection[BufferDirection["left"] = 0] = "left";
    BufferDirection[BufferDirection["right"] = 1] = "right";
})(BufferDirection || (BufferDirection = {}));


/***/ }),

/***/ 6189:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "n": () => /* binding */ SnapShotFlavor
/* harmony export */ });
var SnapShotFlavor;
(function (SnapShotFlavor) {
    SnapShotFlavor[SnapShotFlavor["Unknown"] = 0] = "Unknown";
    SnapShotFlavor[SnapShotFlavor["Autosave"] = 1] = "Autosave";
    SnapShotFlavor[SnapShotFlavor["Favorite"] = 2] = "Favorite";
    SnapShotFlavor[SnapShotFlavor["Manual"] = 3] = "Manual";
    SnapShotFlavor[SnapShotFlavor["Live"] = 4] = "Live";
})(SnapShotFlavor || (SnapShotFlavor = {}));


/***/ }),

/***/ 2005:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "k": () => /* binding */ _HindSiteEvent_Observer
/* harmony export */ });
/* harmony import */ var _CommonCoreBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6679);

class _HindSiteEvent_Observer extends _CommonCoreBase__WEBPACK_IMPORTED_MODULE_0__/* ._CommonBase */ .a {
    constructor(hindeCore, friendly, callbackAsync = null) {
        super(hindeCore);
        this.CallbackAsync = null;
        this.CallbackAsync = callbackAsync;
        this.Friendly = friendly;
    }
    UpdateAsync(payload) {
        try {
            if (this.CallbackAsync) {
                this.CallbackAsync(payload);
            }
        }
        catch (err) {
            this.ErrorHand.ErrorAndContinue(_HindSiteEvent_Observer.name, err);
        }
    }
}


/***/ }),

/***/ 4697:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "C": () => /* binding */ _HindeSiteEvent_Subject
/* harmony export */ });
/* harmony import */ var _Classes_StaticHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1579);
/* harmony import */ var _Enums_70_TypeDiscriminator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8162);
/* harmony import */ var _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9702);
/* harmony import */ var _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2580);
/* harmony import */ var _CommonCoreBase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6679);





class _HindeSiteEvent_Subject extends _CommonCoreBase__WEBPACK_IMPORTED_MODULE_4__/* ._CommonBase */ .a {
    constructor(commonCore) {
        super(commonCore);
        this.ObserverCollection = [];
    }
    DisableNotifications() {
        this.IsMuted = true;
    }
    EnableNotifications() {
        this.IsMuted = false;
    }
    HasObservers() {
        return this.ObserverCollection && this.ObserverCollection.length > 0;
    }
    RegisterObserver(observer) {
        if (observer) {
            this.Logger.Log(this.RegisterObserver.name + ' ' + _Enums_70_TypeDiscriminator__WEBPACK_IMPORTED_MODULE_1__/* .TypeDiscriminator */ .g[this.TypeDiscriminator]);
            if (this.ObserverCollection.indexOf(observer) < 0) {
                this.ObserverCollection.push(observer);
                this.Logger.Log(this.RegisterObserver.name + ' ' + observer.Friendly + ' to ' + _Enums_70_TypeDiscriminator__WEBPACK_IMPORTED_MODULE_1__/* .TypeDiscriminator */ .g[this.TypeDiscriminator] + ' - count after: ' + this.ObserverCollection.length.toString());
            }
            else {
                this.ErrorHand.WarningAndContinue(this.RegisterObserver.name, 'Observer already registered');
            }
        }
        else {
            this.ErrorHand.HandleFatalError(this.RegisterObserver.name, 'Observer is null');
        }
    }
    UnregisterObserver(observer) {
        this.Logger.FuncStart(this.UnregisterObserver.name);
        if (observer) {
            let observerIndex = this.ObserverCollection.indexOf(observer);
            if (observerIndex > -1) {
                this.ObserverCollection.splice(observerIndex, 1);
            }
        }
        this.Logger.FuncEnd(this.UnregisterObserver.name);
    }
    NotifyObserversAsync(payload) {
        let bufferedFriendly = _Classes_StaticHelpers__WEBPACK_IMPORTED_MODULE_0__/* .StaticHelpers.BufferString */ .y.BufferString(_Enums_70_TypeDiscriminator__WEBPACK_IMPORTED_MODULE_1__/* .TypeDiscriminator */ .g[this.TypeDiscriminator], 30, _Enums_BufferChar__WEBPACK_IMPORTED_MODULE_2__/* .BufferChar.Period */ .D.Period, _Enums_BufferDirection__WEBPACK_IMPORTED_MODULE_3__/* .BufferDirection.right */ .z.right);
        if (this.ShowLogActions) {
            this.Logger.FuncStart(this.NotifyObserversAsync.name + ' of: ' + bufferedFriendly, ' obs. count: ' + this.ObserverCollection.length);
        }
        if (!this.IsMuted) {
            this.ObserverCollection.forEach((observer) => {
                observer.UpdateAsync(payload);
            });
        }
        else {
            if (this.ShowLogActions) {
                this.Logger.Log('not Notifying...Subject is muted');
            }
        }
        if (this.ShowLogActions) {
            this.Logger.FuncEnd(this.NotifyObserversAsync.name + ' of: ' + bufferedFriendly, ' obs. count: ' + this.ObserverCollection.length);
        }
    }
}


/***/ }),

/***/ 5077:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v": () => /* binding */ SharedConst
/* harmony export */ });
class SharedConst {
}
SharedConst.Const = {
    Colors: {
        colorContent: 'cyan',
        colorLayout: 'lightsteelblue',
        colorMediaLibrary: 'chocolate',
        colorSystem: 'lightgreen',
        colorTemplates: 'white',
        ConsoleStyles: {
            StyleBgYellow: "[43m",
            StyleBgRed: "[41m",
            StyleEsc: "\x1b",
            StyleFgBlue: "[34m",
            StyleFgGreen: "[32m",
            StyleFgMagenta: "[35m",
            StyleFgRed: "[31m",
            StyleFgYellow: "[33m",
            StyleReset: "[0m",
        }
    },
    Debug: {
        ForceLoggingEnabled: true,
        SpeedUpAutoSaveIntervalFactor: 1,
    },
    IterHelper: {
        GrowthPerIteration: 0.5,
        MaxCount: {
            Default: 10,
            OverridePublishing: 15,
        },
        Timeouts: {
            Max: 3000,
            Default: 100,
        },
    },
    KeyWords: {
        Html: {
            Tags: {
                Body: 'body',
            },
            beforeend: 'beforeend',
            optgroup: 'optgroup',
            Checkbox: 'checkbox',
            Checked: 'checked',
            Input: 'input',
            Label: 'label',
            For: 'for',
            Text: 'text',
            Number: 'number',
        },
        Javascript: {
            ReadyStates: {
                Complete: "complete"
            },
            Events: {
                Message: "message",
            },
        },
        NodeTagName: {
            IFrame: 'IFRAME',
        },
    },
    Logger: {
        MinTimeDiffMs: 100
    },
    ObjDiscriminator: {},
    Settings: {
        Defaults: {
            EnableDebugging: false,
            LogToStorage: false,
            UseCompactCss: false,
            LastUsedLogToStorageKey: 0
        }
    },
    QueryStringHeValues: {
        heTemplateManager: "template%20manager",
    },
    QueryStringKey: {
        XmlControl: 'xmlcontrol',
    },
    Regex: {
        ContentEditor: /Content.*?Editor/ig,
        CleanGuid: /{|-|}/ig,
        NbSp: /&nbsp;/ig,
        QueryStrSeparatorQuest: /\?/gi,
        Path: {
            PackageDesigner: /\/sitecore\/shell/ig,
        },
        PageType: {
            Shell: /\/sitecore\/shell/ig,
            Edit: /sc_itemid=.*sc_mode=edit/ig,
            Normal: /sc_itemid=.*sc_mode=normal/ig,
            Preview: /sc_itemid=.*sc_mode=preview/ig,
            XmlControl: /.*xmlcontrol=Application/ig,
            PackageDesigner: /.*xmlcontrol=Application&.*Package+Designer/ig,
            ContentManager: /\/sitecore\/shell\/Applications\/Content%20Manager/ig,
        },
    },
    UrlRelativePrefix: {
        IconCache: '/temp/iconcache/',
        IconShellStandardMedia: '/sitecore/shell/themes/standard/~/media/',
        IconCacheSoftware16x16: '/temp/iconcache/software/16x16/',
    },
    UrlSuffix: {
        Desktop: '/sitecore/shell/default.aspx',
        Login: '/sitecore/login',
        LaunchPad: '/client/applications/launchpad',
        CE: '/sitecore/shell/Applications/Content Editor.aspx?sc_bw=1',
        SitecoreShellApplicationsContentEditor: 'sitecore/shell/Applications/Content-Editor',
        None: '/',
        AboutBlank: 'about:blank',
    },
};


/***/ }),

/***/ 6679:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "B": () => /* binding */ CommonCore,
/* harmony export */   "a": () => /* binding */ _CommonBase
/* harmony export */ });
class CommonCore {
    constructor() {
        this.Logger = null;
        this.ErrorHand = null;
        this.TaskMonitor = null;
    }
}
class _CommonBase {
    constructor(commonCore) {
        this.CommonCore = null;
        this.Logger = null;
        this.ErrorHand = null;
        this.TaskMonitor = null;
        this.SetCore(commonCore);
    }
    SetCore(commonCore) {
        if (commonCore !== null) {
            this.CommonCore = commonCore;
            this.Logger = commonCore.Logger;
            this.ErrorHand = commonCore.ErrorHand;
            this.TaskMonitor = commonCore.TaskMonitor;
        }
    }
}


/***/ })

},
0,[[3967,407]]]);